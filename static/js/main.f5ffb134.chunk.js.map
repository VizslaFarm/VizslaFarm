{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","utils/formatBalance.ts","utils/addressHelpers.ts","components/Layout/Row.tsx","state/mint/actions.ts","hooks/useActiveWeb3React.ts","components/Layout/Column.tsx","utils/bigNumber.ts","config/constants/tokens.ts","components/Balance.tsx","hooks/useTokenBalance.ts","state/swap/actions.ts","utils/contractHelpers.ts","state/farms/hooks.ts","config/constants/types.ts","hooks/useRefresh.ts","state/pools2/hooks.ts","config/constants/multicall/index.ts","hooks/useContract.ts","state/multicall/hooks.ts","views/Pools/helpers.tsx","components/SearchModal/types.ts","utils/index.ts","state/user/actions.ts","hooks/useTheme.ts","config/constants/index.ts","config/constants/contracts.ts","state/lists/actions.ts","components/Logo/DoubleLogo.tsx","config/constants/lists.ts","hooks/useToast.ts","components/Card/index.tsx","config/index.ts","components/ConnectWalletButton.tsx","components/QuestionHelper/index.tsx","utils/multicall.ts","utils/index4.ts","state/pools/hooks.ts","config/constants/index3.ts","config/constants/index4.ts","config/constants/index5.ts","state/user/hooks/index.tsx","utils/index3.ts","utils/index5.ts","state/block/hooks.ts","components/Tags.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/Tokens.ts","config/constants/pools.ts","utils/wrappedCurrency.ts","state/swap/actions3.ts","state/swap/actions4.ts","state/swap/actions5.ts","utils/wallet.ts","utils/wrappedCurrency3.ts","utils/wrappedCurrency4.ts","utils/wrappedCurrency5.ts","config/constants/tokens3.ts","config/constants/tokens4.ts","config/constants/tokens5.ts","hooks/Tokens3.ts","hooks/Tokens4.ts","hooks/Tokens5.ts","hooks/useTokenAllowance3.ts","hooks/useApproveCallback3.ts","hooks/useTokenAllowance4.ts","hooks/useApproveCallback4.ts","hooks/useTokenAllowance5.ts","hooks/useApproveCallback5.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/providers.ts","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","state/lists/hooks.ts","utils/addressHelpers2.ts","utils/addressHelpers4.ts","utils/addressHelpers5.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/Logo/DoubleLogo4.tsx","components/Logo/DoubleLogo5.tsx","utils/prices3.ts","utils/prices.ts","utils/prices4.ts","utils/prices5.ts","config/index3.ts","state/multicall/actions.ts","components/Loader/Dots.tsx","state/lists/hooks3.ts","state/lists/hooks4.ts","state/lists/hooks5.ts","state/predictions/helpers.ts","state/predictions/queries.ts","components/Loader/CircleLoader.tsx","utils/isZero.ts","config/constants/farms.ts","hooks/useDebounce.ts","config/abi/erc20.ts","components/Logo/DoubleLogo2.tsx","state/user/hooks/index4.tsx","state/user/hooks/index5.tsx","state/user/hooks/index3.tsx","state/wallet/hooks3.ts","state/wallet/hooks.ts","state/wallet/hooks4.ts","state/wallet/hooks5.ts","config/constants/endpoints.ts","utils/compoundApyHelpers.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","hooks/useDelayedUnmount.ts","state/transactions/hooks.tsx","utils/uriToHttp.ts","state/transactions/actions.ts","utils/latinise.ts","config/constants/multicall/index3.ts","hooks/useContract3.ts","config/constants/multicall/index4.ts","hooks/useContract4.ts","config/constants/multicall/index5.ts","hooks/useContract5.ts","config/localization/languages.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Logo/CurrencyLogo.tsx","state/swap/hooks.ts","utils/getTokenLogoURL.ts","state/lottery/helpers.ts","utils/apr2.ts","state/pools2/fetchPools.ts","state/pools2/fetchPoolsUser.ts","state/pools2/fetchVaultPublic.ts","state/pools2/fetchVaultUser.ts","state/pools2/index.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","config/constants/ifo.ts","hooks/usePreviousValue.ts","state/swap/hooks4.ts","state/swap/hooks5.ts","hooks/usePairs3.ts","hooks/usePairs.ts","state/swap/hooks3.ts","hooks/usePairs4.ts","hooks/usePairs5.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/Logo/CurrencyLogo4.tsx","components/Logo/CurrencyLogo5.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/transactions/hooks4.tsx","state/transactions/hooks5.tsx","state/transactions/hooks3.tsx","contexts/Localization/helpers.ts","components/Logo/ListLogo.tsx","config/constants/nfts.ts","hooks/useAuth.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","components/Logo/CurrencyLogo2.tsx","hooks/useParsedQueryString.ts","utils/currencyId.ts","utils/currencyId3.ts","utils/currencyId4.ts","utils/currencyId5.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","state/user/hooks/helpers3.ts","state/user/hooks/helpers4.ts","state/user/hooks/helpers5.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","utils/trades3.ts","hooks/Trades3.ts","utils/wallet3.ts","components/TransactionConfirmationModal3/index.tsx","utils/trades.ts","hooks/Trades.ts","utils/trades4.ts","hooks/Trades4.ts","utils/wallet4.ts","components/TransactionConfirmationModal4/index.tsx","utils/trades5.ts","hooks/Trades5.ts","utils/wallet5.ts","components/TransactionConfirmationModal5/index.tsx","state/profile/hooks.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/web3React.ts","hooks/useLastUpdated.ts","hooks/usePersistState.ts","state/block/index.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel3/NumericalInput.tsx","components/CurrencyInputPanel3/index.tsx","components/CurrencyInputPanel4/NumericalInput.tsx","components/CurrencyInputPanel4/index.tsx","components/CurrencyInputPanel5/NumericalInput.tsx","components/CurrencyInputPanel5/index.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/SearchModal/filtering3.ts","components/SearchModal/filtering4.ts","config/index4.ts","components/SearchModal/filtering5.ts","config/constants/teams.ts","hooks/useTotalSupply.ts","hooks/useTotalSupply3.ts","hooks/useTotalSupply4.ts","hooks/useTotalSupply5.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens3.ts","state/user/hooks/useUserAddedTokens4.ts","state/user/hooks/useUserAddedTokens5.ts","components/Layout/Container.tsx","utils/getTimePeriods.ts","utils/collectibles.ts","components/Menu/SubNav2.tsx","views/Page2.tsx","components/Menu/SubNav4.tsx","views/Page4.tsx","components/Menu/SubNav5.tsx","views/Page5.tsx","components/Menu/SubNav.tsx","views/Page.tsx","components/PageHeader/PageHeader.tsx","components/Layout/Flex.tsx","components/Loading.tsx","components/SearchInput/SearchInput.tsx","state/application/actions.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","state/pools2/helpers.ts","components/SearchModal/ImportToken3.tsx","utils/maxAmountSpend3.ts","components/SearchModal/ImportToken4.tsx","utils/maxAmountSpend4.ts","components/SearchModal/ImportToken5.tsx","utils/maxAmountSpend5.ts","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","state/burn/actions.ts","utils/achievements.ts","components/UnsupportedCurrencyFooter3.tsx","state/mint/hooks3.ts","views/AddLiquidity2/ConfirmAddModalBottom2.tsx","views/AddLiquidity2/PoolPriceBar3.tsx","views/AddLiquidity2/index.tsx","components/UnsupportedCurrencyFooter4.tsx","state/mint/hooks4.ts","views/AddLiquidity4/ConfirmAddModalBottom4.tsx","views/AddLiquidity4/PoolPriceBar4.tsx","views/AddLiquidity4/index.tsx","components/UnsupportedCurrencyFooter5.tsx","state/mint/hooks5.ts","views/AddLiquidity5/ConfirmAddModalBottom5.tsx","views/AddLiquidity5/PoolPriceBar5.tsx","views/AddLiquidity5/index.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/App/AppBody.tsx","state/predictions/index.ts","components/App/Settings/TransactionSettings.tsx","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","components/Loader/PageLoader.tsx","state/collectibles/index.ts","state/transactions/actions4.ts","state/transactions/actions5.ts","components/PositionCard/index.tsx","components/PositionCard3/index.tsx","components/PositionCard4/index.tsx","components/PositionCard5/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/transactions/actions3.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Select/Select.tsx","components/SearchModal/ImportRow3.tsx","components/SearchModal/CurrencyList3.tsx","components/SearchModal/sorting3.ts","components/SearchModal/CurrencySearch3.tsx","hooks/useFetchListCallback2.ts","components/SearchModal/ManageLists3.tsx","components/SearchModal/ManageTokens3.tsx","components/SearchModal/Manage3.tsx","components/SearchModal/ImportList2.tsx","components/SearchModal/CurrencySearchModal3.tsx","components/SearchModal/ImportRow4.tsx","components/SearchModal/CurrencyList4.tsx","components/SearchModal/sorting4.ts","components/SearchModal/CurrencySearch4.tsx","hooks/useFetchListCallback4.ts","components/SearchModal/ManageLists4.tsx","components/SearchModal/ManageTokens4.tsx","components/SearchModal/Manage4.tsx","components/SearchModal/ImportList4.tsx","components/SearchModal/CurrencySearchModal4.tsx","components/SearchModal/ImportRow5.tsx","components/SearchModal/CurrencyList5.tsx","components/SearchModal/sorting5.ts","components/SearchModal/CurrencySearch5.tsx","hooks/useFetchListCallback5.ts","components/SearchModal/ManageLists5.tsx","components/SearchModal/ManageTokens5.tsx","components/SearchModal/Manage5.tsx","components/SearchModal/ImportList5.tsx","components/SearchModal/CurrencySearchModal5.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","hooks/useTransactionDeadline3.ts","hooks/useCurrentBlockTimestamp3.ts","hooks/useTransactionDeadline4.ts","hooks/useCurrentBlockTimestamp4.ts","hooks/useTransactionDeadline5.ts","hooks/useCurrentBlockTimestamp5.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/FarmPools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/ModalInfo.tsx","views/Pools/components/InfoCard.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","views/FarmPools/helpers.tsx","views/FarmPools/components/PoolCard/AprRow.tsx","views/FarmPools/components/PoolCard/StyledCard.tsx","views/FarmPools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard/CardFooter/index.tsx","views/FarmPools/components/PoolCard/StyledCardHeader.tsx","views/FarmPools/hooks/useApprove.ts","views/FarmPools/components/PoolCard/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard/Modals/PercentageButton.tsx","views/FarmPools/hooks/useStakePool.ts","views/FarmPools/hooks/useUnstakePool.ts","views/FarmPools/components/PoolCard/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard/CardActions/StakeActions.tsx","views/FarmPools/hooks/useHarvestPool.ts","views/FarmPools/components/PoolCard/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard/CardActions/index.tsx","views/FarmPools/components/PoolCard/index.tsx","views/FarmPools/components/PoolCard2/AprRow.tsx","views/FarmPools/components/PoolCard2/StyledCard.tsx","views/FarmPools/components/PoolCard2/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard2/CardFooter/index.tsx","views/FarmPools/components/PoolCard2/StyledCardHeader.tsx","views/FarmPools/components/PoolCard2/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard2/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard2/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard2/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard2/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard2/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard2/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard2/CardActions/index.tsx","views/FarmPools/components/PoolCard2/index.tsx","views/FarmPools/components/PoolCard3/AprRow.tsx","views/FarmPools/components/PoolCard3/StyledCard.tsx","views/FarmPools/components/PoolCard3/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard3/CardFooter/index.tsx","views/FarmPools/components/PoolCard3/StyledCardHeader.tsx","views/FarmPools/components/PoolCard3/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard3/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard3/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard3/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard3/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard3/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard3/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard3/CardActions/index.tsx","views/FarmPools/components/PoolCard3/index.tsx","views/FarmPools/components/PoolCard4/AprRow.tsx","views/FarmPools/components/PoolCard4/StyledCard.tsx","views/FarmPools/components/PoolCard4/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard4/CardFooter/index.tsx","views/FarmPools/components/PoolCard4/StyledCardHeader.tsx","views/FarmPools/components/PoolCard4/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard4/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard4/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard4/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard4/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard4/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard4/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard4/CardActions/index.tsx","views/FarmPools/components/PoolCard4/index.tsx","views/FarmPools/components/PoolCard5/AprRow.tsx","views/FarmPools/components/PoolCard5/StyledCard.tsx","views/FarmPools/components/PoolCard5/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard5/CardFooter/index.tsx","views/FarmPools/components/PoolCard5/StyledCardHeader.tsx","views/FarmPools/components/PoolCard5/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard5/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard5/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard5/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard5/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard5/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard5/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard5/CardActions/index.tsx","views/FarmPools/components/PoolCard5/index.tsx","views/FarmPools/components/PoolCard6/AprRow.tsx","views/FarmPools/components/PoolCard6/StyledCard.tsx","views/FarmPools/components/PoolCard6/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard6/CardFooter/index.tsx","views/FarmPools/components/PoolCard6/StyledCardHeader.tsx","views/FarmPools/components/PoolCard6/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard6/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard6/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard6/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard6/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard6/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard6/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard6/CardActions/index.tsx","views/FarmPools/components/PoolCard6/index.tsx","views/FarmPools/components/PoolTabButtons.tsx","views/FarmPools/components/BountyModal.tsx","views/FarmPools/components/BountyCard.tsx","views/FarmPools/components/HelpButton.tsx","views/FarmPools/components/ModalInfo.tsx","views/FarmPools/components/InfoCard.tsx","views/FarmPools/components/PoolsTable/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable/Apr.tsx","views/FarmPools/components/PoolsTable/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable/ActionPanel/styles.ts","views/FarmPools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/FarmPools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/FarmPools/components/PoolsTable/ActionPanel/Harvest.tsx","views/FarmPools/components/CakeVaultCard/FeeSummary.tsx","views/FarmPools/components/CakeVaultCard/VaultStakeModal.tsx","views/FarmPools/components/PoolsTable/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable/PoolRow.tsx","views/FarmPools/components/PoolsTable2/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable2/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable2/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable2/Apr.tsx","views/FarmPools/components/PoolsTable2/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable2/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable2/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable2/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable2/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable2/PoolRow.tsx","views/FarmPools/components/PoolsTable3/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable3/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable3/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable3/Apr.tsx","views/FarmPools/components/PoolsTable3/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable3/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable3/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable3/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable3/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable3/PoolRow.tsx","views/FarmPools/components/PoolsTable4/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable4/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable4/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable4/Apr.tsx","views/FarmPools/components/PoolsTable4/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable4/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable4/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable4/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable4/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable4/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable4/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable4/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable4/PoolRow.tsx","views/FarmPools/components/PoolsTable5/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable5/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable5/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable5/Apr.tsx","views/FarmPools/components/PoolsTable5/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable5/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable5/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable5/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable5/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable5/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable5/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable5/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable5/PoolRow.tsx","views/FarmPools/components/PoolsTable6/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable6/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable6/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable6/Apr.tsx","views/FarmPools/components/PoolsTable6/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable6/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable6/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable6/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable6/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable6/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable6/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable6/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable6/PoolRow.tsx","views/FarmPools/components/PoolsTable/PoolsTable.tsx","views/FarmPools/index.tsx","config/constants/swapWarningTokens.ts","views/ApeSwap/components/AddressInputPanel3.tsx","views/ApeSwap/components/styleds.tsx","views/ApeSwap/components/FormattedPriceImpact3.tsx","views/ApeSwap/components/SwapModalFooter3.tsx","views/ApeSwap/components/SwapModalHeader3.tsx","views/ApeSwap/components/ConfirmSwapModal3.tsx","hooks/useLast.ts","views/ApeSwap/components/SwapRoute3.tsx","views/ApeSwap/components/AdvancedSwapDetails3.tsx","views/ApeSwap/components/AdvancedSwapDetailsDropdown3.tsx","views/ApeSwap/components/TradePrice3.tsx","views/ApeSwap/components/ImportTokenWarningModal3.tsx","views/ApeSwap/components/ProgressSteps.tsx","hooks/useSwapCallback3.ts","hooks/useWrapCallback3.ts","views/ApeSwap/components/SwapWarningModal/SafemoonWarning.tsx","views/ApeSwap/components/SwapWarningModal/BondlyWarning.tsx","views/ApeSwap/components/SwapWarningModal/Acknowledgement.tsx","views/ApeSwap/components/SwapWarningModal/index.tsx","views/ApeSwap/index.tsx","views/ApeSwap/components/confirmPriceImpactWithoutFee3.ts","views/RadioShack/components/AddressInputPanel4.tsx","views/RadioShack/components/styleds.tsx","views/RadioShack/components/FormattedPriceImpact4.tsx","views/RadioShack/components/SwapModalFooter4.tsx","views/RadioShack/components/SwapModalHeader4.tsx","views/RadioShack/components/ConfirmSwapModal4.tsx","views/RadioShack/components/SwapRoute4.tsx","views/RadioShack/components/AdvancedSwapDetails4.tsx","views/RadioShack/components/AdvancedSwapDetailsDropdown4.tsx","views/RadioShack/components/TradePrice4.tsx","views/RadioShack/components/ImportTokenWarningModal4.tsx","views/RadioShack/components/ProgressSteps.tsx","hooks/useSwapCallback4.ts","hooks/useWrapCallback4.ts","views/RadioShack/components/SwapWarningModal/SafemoonWarning.tsx","views/RadioShack/components/SwapWarningModal/BondlyWarning.tsx","views/RadioShack/components/SwapWarningModal/Acknowledgement.tsx","views/RadioShack/components/SwapWarningModal/index.tsx","views/RadioShack/index.tsx","views/RadioShack/components/confirmPriceImpactWithoutFee4.ts","views/Biswap/components/AddressInputPanel5.tsx","views/Biswap/components/styleds.tsx","views/Biswap/components/FormattedPriceImpact5.tsx","views/Biswap/components/SwapModalFooter5.tsx","views/Biswap/components/SwapModalHeader5.tsx","views/Biswap/components/ConfirmSwapModal5.tsx","views/Biswap/components/SwapRoute5.tsx","views/Biswap/components/AdvancedSwapDetails5.tsx","views/Biswap/components/AdvancedSwapDetailsDropdown5.tsx","views/Biswap/components/TradePrice5.tsx","views/Biswap/components/ImportTokenWarningModal5.tsx","views/Biswap/components/ProgressSteps.tsx","hooks/useSwapCallback5.ts","hooks/useWrapCallback5.ts","views/Biswap/components/SwapWarningModal/SafemoonWarning.tsx","views/Biswap/components/SwapWarningModal/BondlyWarning.tsx","views/Biswap/components/SwapWarningModal/Acknowledgement.tsx","views/Biswap/components/SwapWarningModal/index.tsx","views/Biswap/index.tsx","views/Biswap/components/confirmPriceImpactWithoutFee5.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/AddLiquidity2/redirects.tsx","views/AddLiquidity4/redirects.tsx","views/AddLiquidity5/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/RemoveLiquidity2/redirects.tsx","views/RemoveLiquidity4/redirects.tsx","views/RemoveLiquidity5/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","getDecimalAmount","amount","decimals","BigNumber","times","BIG_TEN","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","getAddress","address","process","ChainId","MAINNET","getCakeAddress","tokens","cake","getlgcAddress","lgc","getfpsAddress","fps","gettripAddress","trip","getskeletonAddress","skeleton","getbuildAddress","build","getBusdAddress","busd","geLiraAddress","lira","getVIZSLAHVIAddress","lp","getFarm1Address","farm1","getFarm2Address","farm2","getFarm3Address","farm3","getFarm4Address","farm4","getFarm5Address","farm5","getFarm6Address","farm6","getFarm7Address","farm7","getFarm8Address","farm8","getFarm9Address","farm9","getFarm10Address","farm10","getFarm11Address","farm11","getFarm12Address","farm12","getFarm13Address","farm13","getFarm14Address","farm14","getFarm15Address","farm15","getFarm16Address","farm16","getFarm17Address","farm17","getFarm18Address","farm18","getFarm19Address","farm19","getFarm20Address","farm20","getFarm21Address","farm21","getFarm22Address","farm22","getFarm23Address","farm23","getFarm24Address","farm24","getFarm25Address","farm25","getLAMEAAddress","lamea","getHVIBNBAddress","lp2","getVIZSLASWAPLAMEAAddress","lp3","getHVIAddress","hvi","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getWbnbAddress","wbnb","getethAddress","eth","getetcAddress","etc","getltcAddress","ltc","getbvcAddress","bvc","getbabyvizslaAddress","babyvizsla","getataliraAddress","atalira","getexzoAddress","exzo","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","Column","ColumnCenter","AutoColumn","BIG_ZERO","BIG_ONE","BIG_NINE","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","CAKE","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","lp4","lp5","btnty","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","vizslaswap","shib","stake","test1","ample","ace","hank","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","FetchStatus","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","useTotalSupplyVIZSLAHVI","getVIZSLAHVIContract","useTotalSupplyFarm1","getFarm1Contract","useTotalSupplyFarm2","getFarm2Contract","useTotalSupplyFarm3","getFarm3Contract","useTotalSupplyFarm4","getFarm4Contract","useTotalSupplyFarm5","getFarm5Contract","useTotalSupplyFarm6","getFarm6Contract","useTotalSupplyFarm7","getFarm7Contract","useTotalSupplyFarm8","getFarm8Contract","useTotalSupplyFarm9","getFarm9Contract","useTotalSupplyFarm10","getFarm10Contract","useTotalSupplyFarm11","getFarm11Contract","useTotalSupplyFarm12","getFarm12Contract","useTotalSupplyFarm13","getFarm13Contract","useTotalSupplyFarm14","getFarm14Contract","useTotalSupplyFarm15","getFarm15Contract","useTotalSupplyFarm16","getFarm16Contract","useTotalSupplyFarm17","getFarm17Contract","useTotalSupplyFarm18","getFarm18Contract","useTotalSupplyFarm19","getFarm19Contract","useTotalSupplyFarm20","getFarm20Contract","useTotalSupplyFarm22","getFarm22Contract","useTotalSupplyFarm23","getFarm23Contract","useTotalSupplyFarm24","getFarm24Contract","useTotalSupplyFarm25","getFarm25Contract","useTotalSupplyHVIBNB","getHVIBNBContract","useTotalSupplyVIZSLASWAPLAMEA","getVIZSLASWAPLAMEAContract","useTotalSupply2","getHVIContract","useBurnedBalance","tokenAddress","setBalance","contract","getBep20Contract","balanceOf","res","fetchBalance","useVizslaLameaLPBalance","useVizslaLPBalance","useLAMEALPBalance","useHVILPBalance","useHVILPBalance2","useWBNBLPBalance","usePool1","usePool2","usePool3","usePool4a","usePool4b","usePool4","usePool5","usePool6","usePool7","usePool8","usePool9","usePool10","usePool11","usePool12","usePool13","usePool14","usePool15","usePool16","usePool17","usePool18","usePool19","usePool20","usePool21","usePool22","usePool23","usePool24","usePool25","usePool26","usePool27","usePool28","usePool29","usePool30","usePool31","usePool32","usePool33","usePool34","usePool35","usePool36","usePool37","usePool38","usePool39","usePool40","usePool41","usePool42","usePool43","usePool44","useFarm1","useFarm2","useFarm3","useFarm4","useFarm5","useFarm6","useFarm7","useFarm8","useFarm9","useFarm10","useFarm11","useFarm12","useFarm13","useFarm14","useFarm15","useFarm16","useFarm17","useFarm18","useFarm19","useFarm20","useFarm22","useFarm23","useFarm24","useFarm25","useMaster1","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","account","useLastUpdated","lastUpdated","setLastUpdated","getBalance","walletBalance","SUCCESS","FAILED","refresh","useTokenBalance","balanceState","setBalanceState","fastRefresh","console","error","prev","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","getContract","abi","signer","signerOrProvider","Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","cakeAbi","getFarm21Contract","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","usePollFarmsData","includeArchive","dispatch","useAppDispatch","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useSelector","farms","useFarmFromPid","f","useFarmFromLpSymbol","lpSymbol","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","useBusdPriceFromPid","token","busdPrice","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","useMemo","usePriceliraBusd","usePriceLameaBusd","usePriceETHBusd","usePriceETCBusd","usePriceLTCBusd","usePriceATALIRABusd","usePriceEXZOBusd","usePriceBVCBusd","usePriceBABYVIZSLABusd","usePricetripBusd","usePriceskeletonBusd","usePricebuildBusd","usePriceFpsBusd","usePriceHVIBusd","usePriceLGCBusd","PoolIds","NftType","LotteryStatus","AuctionStatus","RefreshContext","fast","slow","useFetchPublicPoolsData","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","MULTICALL_NETWORKS","useIfoV1Contract","getSigner","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useFarmAuctionContract","useContract","ABI","withSignerIfPossible","useTokenContract","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","multicall","useDispatch","serializedCallKeys","JSON","stringify","filter","c","Boolean","toCallKey","sort","callKeys","parse","length","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useSingleCallResult","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","CurrencyModalView","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","AddressZero","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","FarmStakedOnly","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","useTheme","useThemeManager","isDark","theme","StyledThemeContext","ROUTER_ADDRESS2","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","useToast","toastContext","ToastsContext","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT2","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","i","multicallv2","requireSuccess","tryAggregate","getRouterContract2","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","serializedToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","block","useInitialBlock","initialBlock","CoreTag","variant","outline","startIcon","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","listUrl","activeListUrls","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","includes","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","isBNB","toUpperCase","stakingToken","earningToken","tokensymbol2","tokensymbol3","tokensymbol4","tokensymbol5","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","tokenPerBlock","sortOrder","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","setupNetwork","window","ethereum","request","method","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenSymbol","tokenDecimals","image","tokenAdded","useTokenAllowance","ApprovalState","owner","spender","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","resolverAddress","resolverAddressResult","resolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","RPC_URL","getRpcUrl","providers","JsonRpcProvider","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","singleHopOnly","setSingleHopOnly","onChangeRecipient","useSwapActionHandlers","title","onBack","maxWidth","mb","prompt","bold","fontSize","TransactionSettings","rawSlippage","setRawSlippage","setDeadline","mt","ml","checked","onChange","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","status","href","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","allTransactions","useAllTransactions","sortedRecentTransactions","isTransactionRecent","confirmed","clearAllTransactionsCallback","justifyContent","scale","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","as","Link","to","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","getPoolApr","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","Dots","span","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","hexNumberString","lpSymbol1","lpSymbol2","lpSymbol3","lpAddresses","isEvent","isCommunity","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","ERC20_INTERFACE","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","anyLoading","some","callState","useTokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","uriToHttp","uri","Latinise","latin_map","τ","Τ","latinise","input","code","languageList","getNodeUrl","sample","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensPath","StyledLogo","Logo","uriLocations","useHttpLocations","srcs","getTokenLogoURL","alt","useSwapState","onCurrencySelection","onSwitchTokens","onUserInput","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","usePreviousValue","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","DetailsFooter","invertedContrast","UnsupportedModal","unsupportedTokens","external","small","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ens","resolvedContentHash","contenthash","useENSContentHash","contenthashToUri","getItem","StyledListLogo","ListLogo","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","search","useLocation","parseArrays","ignoreQueryPrefix","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","textAlign","TransactionSubmittedContent","currencyToAdd","isMetaMask","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","tokenIn","tokenOut","useFetchProfile","hasProfile","DEFAULT_META","StyledPage","Container","mediaQueries","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","setStateLastUpdated","previousLastUpdated","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","blockSlice","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","textSubtle","inputRegex","Input","React","placeholder","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","selectedCurrencyBalance","translatedLabel","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","CurrencySearchModal","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","textColor","users","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","StyledNav","nav","Nav","location","activeIndex","xs","flexGrow","SubNav","Outer","Inner","PageHeader","FlexLayout","Loading","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","onBlur","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","userSelect","disabled","maxAmountSpend","greaterThan","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity2","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","component","endIcon","height","App","toExact","minWidth","marginTop","showUnwrapped","AddLiquidity4","AddLiquidity5","AddLiquidity","BodyWrapper","AppBody","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","isWarning","isSuccess","paddingTop","pl","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","onSelect","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","earningsBusd2","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","ModalInfo","VIZSLAPRICE0","HVIPRICE","VIZSLAPRICE","WBNBPRICE","ETHPRICE","ETCPRICE","LTCPRICE","LAMEAPRICE","ATALIRAPRICE","EXZOPRICE","BVCPRICE","BABYVIZSLAPRICE","liraprice","lgcprice","POOL4","POOL5","POOL6","POOL7","POOL8","POOL9","POOL10","POOL11","POOL12","POOL13","POOL14","POOL15","POOL16","POOL17","POOL18","POOL19","POOL20","POOL21","POOL22","POOL23","POOL24","POOL25","POOL26","POOL27","POOL28","POOL29","POOL30","POOL31","POOL32","POOL33","POOL34","POOL35","POOL36","POOL37","POOL38","POOL39","POOL40","POOL41","POOL42","MAJDNEM","MAJDNEM2","FULL1","FULL2","MAJDNEM3","FULL4","MAJDNEM4","FULL5","MAJDNEM5","FULL6","MAJDNEM6","FULL7","MAJDNEM7","FULL8","MAJDNEM8","FULL9","MAJDNEM9","FULL10","MAJDNEM10","FULL11","MAJDNEM11","FULL12","MAJDNEM12","FULL13","MAJDNEM13","FULL14","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","FULL3","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyAllPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","showall","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","InfoCard","vizslalpbalance","cakeSupply2","vizslaprice","hvilpbalance","hviprice","vizslahvisupply","full4","bnblpbalance","bnbprice2","PoolCard2","PoolCard3","vizslalpbalance18","liralpbalance","kombo43","PoolCard5","lgcpricebalance","full5","PoolCard4","VÉGE","VÉGE1","PoolRow2","PoolRow3","PoolRow4","PoolRow5","PoolRow6","pools2","pools3","pools4","pools5","pools6","NUMBER_OF_POOLS_VISIBLE","FarmPools","chosenPoolsLength3","chosenPoolsLength2","chosenPoolsLength4","chosenPoolsLength5","chosenPoolsLength6","pool2","all2","all3","all4","all5","all6","finished","stakedOnlyAl2lPools","stakedOnlyAl3lPools","stakedOnlyAl4lPools","stakedOnlyAl5lPools","stakedOnlyAl6lPools","chosenPools2","chosenPools3","chosenPools4","chosenPools5","chosenPools6","showallpools","showall2pools","showall3pools","showall4pools","showall5pools","showall6pools","showfinished","PoolCard6","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","Label","ImageWrapper","ApeSwap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RadioShack","isTopPosition","Biswap","Swap","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectToAddLiquidity2","RedirectOldAddLiquidityPathStructure2","RedirectDuplicateTokenIds2","RedirectToAddLiquidity3","RedirectOldAddLiquidityPathStructure3","RedirectDuplicateTokenIds3","RedirectToAddLiquidity4","RedirectOldAddLiquidityPathStructure4","RedirectDuplicateTokenIds4","RedirectOldRemoveLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure2","RedirectOldRemoveLiquidityPathStructure4","RedirectOldRemoveLiquidityPathStructure5","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Listing","Partnership","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","Liquidity2","Liquidity4","Liquidity5","PoolFinder","PoolFinder2","PoolFinder4","PoolFinder5","RemoveLiquidity","RemoveLiquidity2","RemoveLiquidity4","RemoveLiquidity5","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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M,MACN0e,MAAO,mBACP84B,MAAO,eAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,OACP84B,MAAO,gBAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,aACP84B,MAAO,iBAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,QACP84B,MAAO,eAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,UACP84B,MAAO,iBAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,SACP84B,MAAO,kBAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,QACP84B,MAAO,eAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,QACP84B,MAAO,iBAET,CACExqD,GAAI,YACJgT,KAAM,MACN0e,MAAO,QACP84B,MAAO,eAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,wBACP84B,MAAO,4BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,uBACP84B,MAAO,2BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,uBACP84B,MAAO,2BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,uBACP84B,MAAO,2BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,2BACP84B,MAAO,+BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,0BACP84B,MAAO,8BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,yBACP84B,MAAO,6BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,yBACP84B,MAAO,6BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,yBACP84B,MAAO,6BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,6BACP84B,MAAO,iCAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,0BACP84B,MAAO,8BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,yBACP84B,MAAO,6BAET,CACExqD,GAAI,YACJgT,KAAM,aACN0e,MAAO,y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","file":"static/js/main.f5ffb134.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getlgcAddress = () => {\n  return getAddress(tokens.lgc.address)\n}\nexport const getfpsAddress = () => {\n  return getAddress(tokens.fps.address)\n}\nexport const gettripAddress = () => {\n  return getAddress(tokens.trip.address)\n}\nexport const getskeletonAddress = () => {\n  return getAddress(tokens.skeleton.address)\n}\nexport const getbuildAddress = () => {\n  return getAddress(tokens.build.address)\n}\nexport const getBusdAddress = () => {\n  return getAddress(tokens.busd.address)\n}\nexport const geLiraAddress = () => {\n  return getAddress(tokens.lira.address)\n}\nexport const getVIZSLAHVIAddress = () => {\n  return getAddress(tokens.lp.address)\n}\nexport const getFarm1Address = () => {\n  return getAddress(tokens.farm1.address)\n}\nexport const getFarm2Address = () => {\n  return getAddress(tokens.farm2.address)\n}\nexport const getFarm3Address = () => {\n  return getAddress(tokens.farm3.address)\n}\nexport const getFarm4Address = () => {\n  return getAddress(tokens.farm4.address)\n}\nexport const getFarm5Address = () => {\n  return getAddress(tokens.farm5.address)\n}\nexport const getFarm6Address = () => {\n  return getAddress(tokens.farm6.address)\n}\nexport const getFarm7Address = () => {\n  return getAddress(tokens.farm7.address)\n}\nexport const getFarm8Address = () => {\n  return getAddress(tokens.farm8.address)\n}\nexport const getFarm9Address = () => {\n  return getAddress(tokens.farm9.address)\n}\nexport const getFarm10Address = () => {\n  return getAddress(tokens.farm10.address)\n}\nexport const getFarm11Address = () => {\n  return getAddress(tokens.farm11.address)\n}\nexport const getFarm12Address = () => {\n  return getAddress(tokens.farm12.address)\n}\nexport const getFarm13Address = () => {\n  return getAddress(tokens.farm13.address)\n}\nexport const getFarm14Address = () => {\n  return getAddress(tokens.farm14.address)\n}\nexport const getFarm15Address = () => {\n  return getAddress(tokens.farm15.address)\n}\nexport const getFarm16Address = () => {\n  return getAddress(tokens.farm16.address)\n}\nexport const getFarm17Address = () => {\n  return getAddress(tokens.farm17.address)\n}\nexport const getFarm18Address = () => {\n  return getAddress(tokens.farm18.address)\n}\nexport const getFarm19Address = () => {\n  return getAddress(tokens.farm19.address)\n}\nexport const getFarm20Address = () => {\n  return getAddress(tokens.farm20.address)\n}\nexport const getFarm21Address = () => {\n  return getAddress(tokens.farm21.address)\n}\nexport const getFarm22Address = () => {\n  return getAddress(tokens.farm22.address)\n}\nexport const getFarm23Address = () => {\n  return getAddress(tokens.farm23.address)\n}\nexport const getFarm24Address = () => {\n  return getAddress(tokens.farm24.address)\n}\nexport const getFarm25Address = () => {\n  return getAddress(tokens.farm25.address)\n}\nexport const getLAMEAAddress = () => {\n  return getAddress(tokens.lamea.address)\n}\nexport const getHVIBNBAddress = () => {\n  return getAddress(tokens.lp2.address)\n}\nexport const getVIZSLASWAPLAMEAAddress = () => {\n  return getAddress(tokens.lp3.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getethAddress = () => {\n  return getAddress(tokens.eth.address)\n}\nexport const getetcAddress = () => {\n  return getAddress(tokens.etc.address)\n}\nexport const getltcAddress = () => {\n  return getAddress(tokens.ltc.address)\n}\nexport const getbvcAddress = () => {\n  return getAddress(tokens.bvc.address)\n}\nexport const getbabyvizslaAddress = () => {\n  return getAddress(tokens.babyvizsla.address)\n}\nexport const getataliraAddress = () => {\n  return getAddress(tokens.atalira.address)\n}\nexport const getexzoAddress = () => {\n  return getAddress(tokens.exzo.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  lp: {\n    symbol: 'HVI + VIZSLASWAP',\n    address: {\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp2: {\n    symbol: 'HVI + WBNB',\n    address: {\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp3: {\n    symbol: 'VIZSLASWAP + LAMEA',\n    address: {\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp4: {\n    symbol: 'VIZSLASWAP + LIRA',\n    address: {\n      56: '0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp5: {\n    symbol: 'VIZSLASWAP + LGC',\n    address: {\n      56: '0x06979dF1cf9Af043EcEA997797071fA646AbaA57',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm1: {\n    symbol: 'Farm1',\n    address: {\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm2: {\n    symbol: 'Farm2',\n    address: {\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm3: {\n    symbol: 'Farm3',\n    address: {\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm4: {\n    symbol: 'Farm4',\n    address: {\n      56: '0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm5: {\n    symbol: 'Farm5',\n    address: {\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm6: {\n    symbol: 'Farm6',\n    address: {\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm7: {\n    symbol: 'Farm7',\n    address: {\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm8: {\n    symbol: 'Farm8',\n    address: {\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm9: {\n    symbol: 'Farm9',\n    address: {\n      56: '0x189426C386C446Df3549e3B7Af9bF5D1321E30B9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm10: {\n    symbol: 'Farm10',\n    address: {\n      56: '0x58d30bA21b9Edb7c3526F4539319bEC3A7F23944',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm11: {\n    symbol: 'Farm11',\n    address: {\n      56: '0xAC79F8f638649660b3D7B62aCf40Ef7dD65B35dF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lira: {\n    symbol: 'Lira',\n    address: {\n      56: '0xA80a006A48dc7203EB3AA7E0b3816918d242CFC4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lira.financial/',\n  },\n  farm12: {\n    symbol: 'Farm12',\n    address: {\n      56: '0xD91AD40D8ff1F0405ce10230D214eD79fDa73d61',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm13: {\n    symbol: 'Farm13',\n    address: {\n      56: '0x8a9d56706950495cf2CF1799E311f9c68C81D473',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm14: {\n    symbol: 'Farm14',\n    address: {\n      56: '0x48eE61775B6E737a87b38BaC01faC55281ee0B4a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n    farm15: {\n    symbol: 'Farm15',\n    address: {\n      56: '0xD6d0DF1FF1B26c4Aed6a51fd58030ba6EF06e9f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm16: {\n    symbol: 'Farm16',\n    address: {\n      56: '0xC7f86B54BA7eE572b466Af28e3100780736c5934',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm17: {\n    symbol: 'Farm17',\n    address: {\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm18: {\n    symbol: 'Farm18',\n    address: {\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n    farm19: {\n    symbol: 'Farm19',\n    address: {\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm20: {\n    symbol: 'Farm20',\n    address: {\n      56: '0x1b0169f8b912f7AD2B5000eB6722A987660bd365',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm21: {\n    symbol: 'Farm21',\n    address: {\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm22: {\n    symbol: 'Farm22',\n    address: {\n      56: '0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm23: {\n    symbol: 'Farm23',\n    address: {\n      56: '0x06979dF1cf9Af043EcEA997797071fA646AbaA57',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n    farm24: {\n    symbol: 'Farm24',\n    address: {\n      56: '0x9e217b6BBee64D367535250Af62d53Bf657570B4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm25: {\n    symbol: 'Farm25',\n    address: {\n      56: '0xD41A8b2A8366AbdbF31FeDba8e5F6E13Ec959Ba5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  lgc: {\n    symbol: 'LGC',\n    address: {\n      56: '0x3496212eC43Cc49F5151ec4405efD4975e036f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://livegreencoin.com/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    trip: {\n      symbol: 'TRIP',\n      address: {\n        56: '0x15a0Ff684918B20487f2a68d6816e694BB05E471',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://crypto-travel.org/',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    stake: {\n      symbol: 'STAKE',\n      address: {\n        56: '0xe55bd75d7cE7bfDe26A347A748d080D3ACdA7FFE',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract, getVIZSLAHVIContract, getHVIBNBContract , getFarm24Contract, getFarm23Contract, getVIZSLASWAPLAMEAContract , getFarm25Contract,getFarm1Contract, getFarm2Contract, getFarm3Contract, getFarm4Contract, getFarm5Contract , getFarm6Contract, getFarm7Contract, getFarm8Contract, getFarm9Contract, getFarm10Contract, getFarm11Contract, getFarm12Contract, getFarm13Contract, getFarm14Contract, getFarm15Contract, getFarm16Contract, getFarm17Contract, getFarm18Contract, getFarm19Contract, getFarm20Contract, getFarm21Contract , getFarm22Contract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyVIZSLAHVI = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getVIZSLAHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm1 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm1Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm2Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm3 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm3Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm4 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm4Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm5 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm5Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm6 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm6Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm7 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm7Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm8 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm8Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm9 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm9Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm10 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm10Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm11 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm11Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm12 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm12Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm13 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm13Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm14 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm14Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm15 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm15Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm16 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm16Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm17 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm17Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm18 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm18Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm19 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm19Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm20 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm20Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm21 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm21Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm22 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm22Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm23 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm23Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm24 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm24Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm25 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm25Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyHVIBNB = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIBNBContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyVIZSLASWAPLAMEA = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getVIZSLASWAPLAMEAContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useVizslaLameaLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useVizslaLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351b70e02aaf7407d3a33f0032ec733c68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useLAMEALPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useHVILPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351b70e02aaf7407d3a33f0032ec733c68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useHVILPBalance2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useWBNBLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const usePool1 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x96e41f4e0F885121756b84fe966C39ED92047968')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x9B114FFeeca7800fD6BF2853663Db509c7b07c1D')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool3 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x47cE6b2Ec96D1576Da6D1B714C6ffd455E31132a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool4a = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xcd3f3fE585052731c76a11784b45D7f6fae16C22')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool4b = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x37031eD3a1adf0C4C72d3EB6832fDc3D1af42d2a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool4 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x3FF00B58e432B0895e3fd69634Ec50e3931110c1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool5 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x44c44e691e523378fec15Ba101AE0618fCA21cC4')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool6 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x495Cd5Fc0dF972A028AD50c7be23d2350702B228')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool7 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x40f69629aeaC357826188Ce3d63a1720B7D351ab')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool8 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7f206F080306E37446CaA77be250C07F1548f544')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool9 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe8B5c3eD7E3e399C7B6563A6eb981fa0B9CC195A')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool10 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xB04284523BbB8c5945C3fcB797A4Af0d8cafb720')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool11 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool12 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x89Cf97e3D99FDE78670BB9D87266BA366B626bca')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool13 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool14 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xf142BD28CaCd766c24201bD2FF4513CEc032e882')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool15 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xa05E95D44d746FC833041fCb62103A04850e1851')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool16 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool17 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool18 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xac4a94609dE599AA394E8C15e086eCef866d50cd')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool19 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool20 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool21 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xE94d40FEb04ae087771a73b2D67Aca6757a086B6')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool22 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool23 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool24 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6Ee2F91786Df82f2B7d69C7DBd270D6F180243e6')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool25 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD2E4A090098a7005EA45f4D57DE6aEDc636c0624')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool26 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x78D1d79449da238bA76FB47CAff92De04C468622')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool27 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool28 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool29 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0340fdb81618874936535CA5276294fB84A719Ee')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool30 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD2d8b41A9F502e50C13839A43bc76cDA1d6646bA')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool31 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xfd191349e26e939d0c424F5BA1069Da1Ddb07602')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool32 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x4beBa40b480cF3d60caACC23C3a07043AD72880F')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool33 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x59118c750a5c704001574c0693c1790196993c23')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool34 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool35 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xc17c5D59ea8475d6eA987F654247Fba120166303')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool36 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x73629E49dC282ef1Fc7AA7A58722C45BBb3496FC')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool37 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xb903485C032E93655B5d5CFe4A439018ACb9E211')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool38 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x646086C73D560B7a4581F6229738c88733C92e4B')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool39 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xbCE3aFbc9d57F20fb9068258e7E5dE23199470A4')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool40 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8e50EC840DB5a4A5994B9c2D4A7840474E6e6d5a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool41 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x3Bb72c6BF377211B52D67f931692415D97148e09')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool42 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x74339CB10Ff9E68918d2e4E23a4597e1046e89cA')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool43 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x4fC86dC3E0B03971B4d08990843c754055C8c3D9')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool44 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xC79EDA00d5EC26320693eaEE7b09987457CAeB50')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm1 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm3 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x738156eAE2715776CBF92eD5751F7b8fc99951b7')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm4 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm5 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm6 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm7 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351B70e02AAF7407D3a33f0032eC733C68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm8 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm9 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x189426C386C446Df3549e3B7Af9bF5D1321E30B9')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm10 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x58d30bA21b9Edb7c3526F4539319bEC3A7F23944')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm11 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xAC79F8f638649660b3D7B62aCf40Ef7dD65B35dF')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm12 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD91AD40D8ff1F0405ce10230D214eD79fDa73d61')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm13 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8a9d56706950495cf2CF1799E311f9c68C81D473')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm14 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x48eE61775B6E737a87b38BaC01faC55281ee0B4a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm15 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD6d0DF1FF1B26c4Aed6a51fd58030ba6EF06e9f5')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm16 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xC7f86B54BA7eE572b466Af28e3100780736c5934')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm17 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm18 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7b338aB42d823e50851f3C61d8374D83c4E0F71f')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm19 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xeb94c1EA54AD6367D414B0B2075950646D0B6266')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm20 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x1b0169f8b912f7AD2B5000eB6722A987660bd365')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm21 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm22 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm23 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x06979dF1cf9Af043EcEA997797071fA646AbaA57')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm24 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x9e217b6BBee64D367535250Af62d53Bf657570B4')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm25 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD41A8b2A8366AbdbF31FeDba8e5F6E13Ec959Ba5')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useMaster1 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x3FF00B58e432B0895e3fd69634Ec50e3931110c1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getVIZSLAHVIAddress,\n  getHVIBNBAddress,\n  getLotteryV2Address,\n  getFarm1Address,\n  getFarm2Address,\n  getFarm3Address,\n  getFarm4Address,\n  getFarm5Address,\n  getFarm6Address,\n  getFarm7Address,\n  getFarm8Address,\n  getFarm9Address,\n  getFarm10Address,\n  getFarm11Address,\n  getFarm12Address,\n  getFarm13Address,\n  getFarm14Address,\n  getFarm15Address,\n  getFarm16Address,\n  getFarm17Address,\n  getFarm18Address,\n  getFarm19Address,\n  getFarm20Address,\n  getFarm21Address,\n  getFarm22Address,\n  getFarm23Address,\n  getFarm24Address,\n  getFarm25Address,\n  getVIZSLASWAPLAMEAAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getVIZSLAHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getVIZSLAHVIAddress(), signer)\n}\nexport const getFarm1Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm1Address(), signer)\n}\nexport const getFarm2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm2Address(), signer)\n}\nexport const getFarm3Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm3Address(), signer)\n}\nexport const getFarm4Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm4Address(), signer)\n}\nexport const getFarm5Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm5Address(), signer)\n}\nexport const getFarm6Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm6Address(), signer)\n}\nexport const getFarm7Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm7Address(), signer)\n}\nexport const getFarm8Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm8Address(), signer)\n}\nexport const getFarm9Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm9Address(), signer)\n}\nexport const getFarm10Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm10Address(), signer)\n}\nexport const getFarm11Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm11Address(), signer)\n}\nexport const getFarm12Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm12Address(), signer)\n}\nexport const getFarm13Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm13Address(), signer)\n}\nexport const getFarm14Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm14Address(), signer)\n}\nexport const getFarm15Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm15Address(), signer)\n}\nexport const getFarm16Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm16Address(), signer)\n}\nexport const getFarm17Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm17Address(), signer)\n}\nexport const getFarm18Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm18Address(), signer)\n}\nexport const getFarm19Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm19Address(), signer)\n}\nexport const getFarm20Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm20Address(), signer)\n}\nexport const getFarm21Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm21Address(), signer)\n}\nexport const getFarm22Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm22Address(), signer)\n}\nexport const getFarm23Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm23Address(), signer)\n}\nexport const getFarm24Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm24Address(), signer)\n}\nexport const getFarm25Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm25Address(), signer)\n}\nexport const getHVIBNBContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIBNBAddress(), signer)\n}\nexport const getVIZSLASWAPLAMEAContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getVIZSLASWAPLAMEAAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\nexport const useLpTokenPrice2 = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(10)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceliraBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(37)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\nexport const usePriceLameaBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(19)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceETHBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(9)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceETCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(17)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceLTCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(10)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceATALIRABusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(21)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceEXZOBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(22)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceBVCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(4)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceBABYVIZSLABusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(6)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePricetripBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(25)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceskeletonBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(12)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePricebuildBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(23)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceFpsBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(11)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceLGCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(39)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpSymbol2: string\n  lpSymbol3: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  tokensymbol5: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\nexport interface PoolConfig2 {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  tokensymbol5: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xd88fdB83a1CFbc34a9eEa0106D1834A25b2BCE4B',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0x74C1D85d2f45eDf73D43c8eb70DaaFd7F6207A80',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xf413bd4C866A336E26f56516774Ed56a0546b91A',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0x7dD1A967F2FB6C439BAecA357fcD8A9CCd3CB6D3',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x70f317168B0B6638528b6FDFdBcCC8E7BFa3735c',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x38426AaCeE71Be2c135c6D69dC8c318b51c54CAB',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_LIMIT2 = 500000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index4'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks4'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens3'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens4'\n\nexport const ROUTER_ADDRESS = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\nexport const ROUTER_ADDRESS2 = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens5'\n\nexport const ROUTER_ADDRESS = '0x3a6d8cA21D1CF76F653A67577FA0D27453350dD8'\nexport const ROUTER_ADDRESS2 = '0x3a6d8cA21D1CF76F653A67577FA0D27453350dD8'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index3'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks3'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index5'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks5'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n      {\n    sousId: 100,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp,\n    number:'100',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL2',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x96e41f4e0F885121756b84fe966C39ED92047968',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.086',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 101,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp2,\n    number:'101',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL3',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x9B114FFeeca7800fD6BF2853663Db509c7b07c1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000006945',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 104,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp5,\n    number:'104',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL6',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x37031eD3a1adf0C4C72d3EB6832fDc3D1af42d2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0108',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 102,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp3,\n    number:'102',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL4',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x47cE6b2Ec96D1576Da6D1B714C6ffd455E31132a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 103,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp4,\n    number:'103',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL5',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xcd3f3fE585052731c76a11784b45D7f6fae16C22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.027',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 40,\n    stakingToken: tokens.lgc,\n    earningToken: tokens.lgc,\n    number:'40',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x74339CB10Ff9E68918d2e4E23a4597e1046e89cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0694',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 41,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lgc,\n    number:'41',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x4fC86dC3E0B03971B4d08990843c754055C8c3D9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0347',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 42,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lgc,\n    number:'42',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xC79EDA00d5EC26320693eaEE7b09987457CAeB50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0347',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 37,\n    stakingToken: tokens.lira,\n    earningToken: tokens.lira,\n    number:'37',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xbCE3aFbc9d57F20fb9068258e7E5dE23199470A4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.3',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 38,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lira,\n    number:'38',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x8e50EC840DB5a4A5994B9c2D4A7840474E6e6d5a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.3',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 39,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lira,\n    number:'39',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3Bb72c6BF377211B52D67f931692415D97148e09',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.3',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 36,\n    stakingToken: tokens.wbnb,\n    earningToken: tokens.vizslaswap,\n    number:'36',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD2d8b41A9F502e50C13839A43bc76cDA1d6646bA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 35,\n    stakingToken: tokens.eth,\n    earningToken: tokens.vizslaswap,\n    number:'35',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xfd191349e26e939d0c424F5BA1069Da1Ddb07602',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 34,\n    stakingToken: tokens.etc,\n    earningToken: tokens.vizslaswap,\n    number:'34',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x4beBa40b480cF3d60caACC23C3a07043AD72880F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 33,\n    stakingToken: tokens.ltc,\n    earningToken: tokens.vizslaswap,\n    number:'33',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x59118c750a5c704001574c0693c1790196993c23',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 21,\n    stakingToken: tokens.lamea,\n    earningToken: tokens.lamea,\n    number:'21',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LAMEA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.38',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 22,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lamea,\n    number:'22',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x495Cd5Fc0dF972A028AD50c7be23d2350702B228',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 23,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lamea,\n    number:'23',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 32,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.trip,\n    number:'32',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x40f69629aeaC357826188Ce3d63a1720B7D351ab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.694',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 31,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.btnty,\n    number:'31',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7f206F080306E37446CaA77be250C07F1548f544',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.89',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 28,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.build,\n    number:'28',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xE94d40FEb04ae087771a73b2D67Aca6757a086B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.217',\n    sortOrder: 200,\n    isFinished: true,\n   },\n   {\n    sousId: 29,\n    stakingToken: tokens.atalira,\n    earningToken: tokens.atalira,\n    number:'29',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'ATALIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xc17c5D59ea8475d6eA987F654247Fba120166303',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0249',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 24,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.atalira,\n    number:'24',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe8B5c3eD7E3e399C7B6563A6eb981fa0B9CC195A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 30,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.atalira,\n    number:'30',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6Ee2F91786Df82f2B7d69C7DBd270D6F180243e6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 25,\n    stakingToken: tokens.exzo,\n    earningToken: tokens.exzo,\n    number:'25',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'EXZO',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x73629E49dC282ef1Fc7AA7A58722C45BBb3496FC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '11.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 26,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.exzo,\n    number:'26',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xB04284523BbB8c5945C3fcB797A4Af0d8cafb720',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 27,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.exzo,\n    number:'27',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD2E4A090098a7005EA45f4D57DE6aEDc636c0624',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 20,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.etc,\n    number:'20',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x78D1d79449da238bA76FB47CAff92De04C468622',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000037128',\n    sortOrder: 200,\n    isFinished: false,\n    },\n    {\n      sousId: 19,\n      stakingToken: tokens.vizslaswap,\n      earningToken: tokens.etc,\n      number:'19',\n      tokensymbol2: 'OPEN',\n      tokensymbol3: 'VIZSLASWAP',\n      tokensymbol4: 'ANTIWHALE',\n      tokensymbol5: 'ALL1',\n      withdrawtime: 'WITHDRAWAL FEE',\n      withdrawtime2: '4%',\n      withdrawtime3: '',\n      withdrawtime4: '',\n      contractAddress: {\n        97: '',\n        56: '0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E',\n      },\n      poolCategory: PoolCategory.CORE,\n      harvest: true,\n      tokenPerBlock: '0.0000037128',\n      sortOrder: 200,\n      isFinished: false,\n      },\n   {\n    sousId: 18,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ace,\n    number:'18',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x89Cf97e3D99FDE78670BB9D87266BA366B626bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '370',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 17,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hank,\n    number:'17',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3472000',\n    sortOrder: 200,\n    isFinished: true,\n    },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00115',\n    sortOrder: 200,\n    isFinished: true,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000048612',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000002082',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.425',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.222',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.222',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   \n]\n\nexport default pools\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('apeswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('apeswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('apeswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('apeswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('apeswap/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('radioshack/selectCurrency')\nexport const switchCurrencies = createAction<void>('radioshack/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('radioshack/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('radioshack/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('radioshack/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('biswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('biswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('biswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('biswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('biswap/setRecipient')\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks3'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens3'\nimport { isAddress } from '../utils/index3'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract3'\nimport { filterTokens } from '../components/SearchModal/filtering3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks4'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens4'\nimport { isAddress } from '../utils/index4'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract4'\nimport { filterTokens } from '../components/SearchModal/filtering4'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks5'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens5'\nimport { isAddress } from '../utils/index5'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract5'\nimport { filterTokens } from '../components/SearchModal/filtering5'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index3'\nimport useTokenAllowance from './useTokenAllowance3'\nimport { Field } from '../state/swap/actions3'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks3'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices3'\nimport { calculateGasMargin } from '../utils/index3'\nimport { useTokenContract } from './useContract3'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index4'\nimport useTokenAllowance from './useTokenAllowance4'\nimport { Field } from '../state/swap/actions4'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks4'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices4'\nimport { calculateGasMargin } from '../utils/index4'\nimport { useTokenContract } from './useContract4'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index5'\nimport useTokenAllowance from './useTokenAllowance5'\nimport { Field } from '../state/swap/actions5'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks5'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices5'\nimport { calculateGasMargin } from '../utils/index5'\nimport { useTokenContract } from './useContract5'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens3'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens4'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens5'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress]  : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { Currency } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo4'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo5'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index3'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index3'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index4'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index4'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index5'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index5'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { ChainId, Token } from '@pancakeswap2/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist2.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist3.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist4.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpSymbol2: '',\n    lpSymbol3: '',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 18,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol2: '(APESWAP)',\n    lpSymbol3: 'apeliquidity',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 20,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(RADIOSHACK)',\n    lpSymbol3: 'radioliquidity',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 36,\n    lpSymbol: 'HVI-VIZSLASWAP LP',\n    lpSymbol1:'36',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 40,\n    lpSymbol: 'LGC-VIZSLASWAP LP',\n    lpSymbol1:'40',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x06979dF1cf9Af043EcEA997797071fA646AbaA57',\n    },\n    token: tokens.lgc,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 39,\n    lpSymbol: 'LGC-BNB LP',\n    lpSymbol1:'39',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x9e217b6BBee64D367535250Af62d53Bf657570B4',\n    },\n    token: tokens.lgc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 27,\n    lpSymbol: 'LAMEA-VIZSLASWAP LP',\n    lpSymbol1:'27',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 38,\n    lpSymbol: 'LIRA-VIZSLASWAP LP',\n    lpSymbol1:'38',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925',\n    },\n    token: tokens.lira,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 37,\n    lpSymbol: 'LIRA-BNB LP',\n    lpSymbol1:'37',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8428786e4B806CD803c47E4d284aB41cBF94B937',\n    },\n    token: tokens.lira,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 28,\n    lpSymbol: 'BVC-VIZSLASWAP LP',\n    lpSymbol1:'28',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x189426C386C446Df3549e3B7Af9bF5D1321E30B9',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 29,\n    lpSymbol: 'BABYVIZSLA-VIZSLASWAP LP',\n    lpSymbol1:'29',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58d30bA21b9Edb7c3526F4539319bEC3A7F23944',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 30,\n    lpSymbol: 'FPS-VIZSLASWAP LP',\n    lpSymbol1:'30',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xAC79F8f638649660b3D7B62aCf40Ef7dD65B35dF',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 31,\n    lpSymbol: 'SKELETON-VIZSLASWAP LP',\n    lpSymbol1:'31',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xD91AD40D8ff1F0405ce10230D214eD79fDa73d61',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 32,\n    lpSymbol: 'BUILD-VIZSLASWAP LP',\n    lpSymbol1:'32',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8a9d56706950495cf2CF1799E311f9c68C81D473',\n    },\n    token: tokens.build,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 33,\n    lpSymbol: 'ETH-VIZSLASWAP LP',\n    lpSymbol1:'33',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x48eE61775B6E737a87b38BaC01faC55281ee0B4a',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 34,\n    lpSymbol: 'ATALIRA-VIZSLASWAP LP',\n    lpSymbol1:'34',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xD6d0DF1FF1B26c4Aed6a51fd58030ba6EF06e9f5',\n    },\n    token: tokens.atalira,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 35,\n    lpSymbol: 'EXZO-VIZSLASWAP LP',\n    lpSymbol1:'35',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xC7f86B54BA7eE572b466Af28e3100780736c5934',\n    },\n    token: tokens.exzo,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 19,\n    lpSymbol: 'LAMEA-BNB LP',\n    lpSymbol1:'19',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 15,\n    lpSymbol: 'HANK-BNB LP',\n    lpSymbol1:'15',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x16B84784B13183c55e57C9F586697a369eBCF367',\n    },\n    token: tokens.hank,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 16,\n    lpSymbol: 'ACE-BNB LP',\n    lpSymbol1:'16',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x2f9916c808b3F7687d51880aeda629F61051e4Ef',\n    },\n    token: tokens.ace,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 17,\n    lpSymbol: 'ETC-BNB LP',\n    lpSymbol1:'17',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x4d2d10B785BF000Dfd19e92cE2D2aE79E119b956',\n    },\n    token: tokens.etc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 21,\n    lpSymbol: 'ATALIRA-BNB LP',\n    lpSymbol1:'21',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x92AB1792235208d119Eee8A420ec264687F4BFC9',\n    },\n    token: tokens.atalira,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 22,\n    lpSymbol: 'EXZO-BNB LP',\n    lpSymbol1:'22',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x31e4286de26215c2e790732Dc8EC78Af36c338a7',\n    },\n    token: tokens.exzo,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 23,\n    lpSymbol: 'BUILD-BNB LP',\n    lpSymbol1:'23',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xEacB9B9c341988d4397F6E1627B2fF32581a2842',\n    },\n    token: tokens.build,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 24,\n    lpSymbol: 'BTNTY-BNB LP',\n    lpSymbol1:'24',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xfF2FFa2B8B59471dD8315c652c4431589DF454ba',\n    },\n    token: tokens.btnty,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 25,\n    lpSymbol: 'TRIP-BNB LP',\n    lpSymbol1:'25',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x109c9Cf64f8AE7Ff01D32597508A9407eBd4dF6f',\n    },\n    token: tokens.trip,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 26,\n    lpSymbol: 'TRIP-VIZSLASWAP LP',\n    lpSymbol1:'26',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x1b0169f8b912f7AD2B5000eB6722A987660bd365',\n    },\n    token: tokens.trip,\n    quoteToken: tokens.vizslaswap,\n   }\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { Currency } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo2'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Pair, Token } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers4'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'RLP', 'RadioShack Swap LP Token')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Pair, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens5'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers5'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'BSW-LP', 'Biswap LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Pair, Token } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers3'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'APE-LP', 'ApeSwapFinance LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { useMulticallContract } from 'hooks/useContract3'\nimport { isAddress } from 'utils/index3'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { useMulticallContract } from 'hooks/useContract4'\nimport { isAddress } from 'utils/index4'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens5'\nimport { useMulticallContract } from 'hooks/useContract5'\nimport { isAddress } from 'utils/index5'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT2, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT2,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers3'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index3'\nimport { getContract } from '../utils/index3'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers4'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index4'\nimport { getContract } from '../utils/index4'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers5'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index5'\nimport { getContract } from '../utils/index5'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","const getTokenLogoURL = (address: string) =>\n  `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr2'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress]  : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpSymbol2: '?',\n    lpSymbol3: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'vizslaswap.com', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens4'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades4'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices4'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index4'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens5'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades5'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index5'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices5'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks5'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index5'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens3'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades3'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices3'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index3'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency5'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks4'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks5'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions4'\nimport { TransactionDetails } from './reducer4'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions5'\nimport { TransactionDetails } from './reducer5'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions3'\nimport { TransactionDetails } from './reducer3'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0x74C1D85d2f45eDf73D43c8eb70DaaFd7F6207A80',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: '664',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'swaplogo-swap-ltc.png',\n    },\n    sortOrder: 999,\n    identifier: '664',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks3'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index3'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades3'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index3'\nimport { PairState, usePairs } from './usePairs3'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nimport { useUnsupportedTokens } from './Tokens3'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index3'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet3'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index3'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index4'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades4'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index4'\nimport { PairState, usePairs } from './usePairs4'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nimport { useUnsupportedTokens } from './Tokens4'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index4'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet4'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index4'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index5'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades5'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index5'\nimport { PairState, usePairs } from './usePairs5'\nimport { wrappedCurrency } from '../utils/wrappedCurrency5'\n\nimport { useUnsupportedTokens } from './Tokens5'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index4'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet5'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency5'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index5'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index3'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal3'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index2'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index4'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal4'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index4'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index4'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks5'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal5'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index5'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { isAddress } from '../../utils/index3'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { isAddress } from '../../utils/index4'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { isAddress } from '../../utils/index5'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useTokenContract } from './useContract3'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useTokenContract } from './useContract4'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useTokenContract } from './useContract5'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers3'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers4'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers5'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool2') ||\n    pathname.includes('/createape') ||\n    pathname.includes('/addapeliquidity') ||\n    pathname.includes('/removeape') ||\n    pathname.includes('/apefind') ||\n    pathname.includes('/apeliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool2\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav2'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool4') ||\n    pathname.includes('/createradio') ||\n    pathname.includes('/addradioliquidity') ||\n    pathname.includes('/removeradio') ||\n    pathname.includes('/radiofind') ||\n    pathname.includes('/radioliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/radioshack\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool4\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav4'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool5') ||\n    pathname.includes('/createbiswap') ||\n    pathname.includes('/addbiswapliquidity') ||\n    pathname.includes('/removebiswap') ||\n    pathname.includes('/biswapfind') ||\n    pathname.includes('/biswapliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/biswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool5\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav5'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index3'\nimport { getBscScanLink } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport { ListLogo } from 'components/Logo/index2'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk'\nimport { MIN_BNB } from '../config/constants/index3'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index4'\nimport { getBscScanLink } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport { ListLogo } from 'components/Logo/index4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk/dist/dist'\nimport { MIN_BNB } from '../config/constants/index4'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index5'\nimport { getBscScanLink } from 'utils/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks5'\nimport { ListLogo } from 'components/Logo/index5'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { MIN_BNB } from '../config/constants/index5'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs3'\nimport useTotalSupply from 'hooks/useTotalSupply3'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency3'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks3'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index3'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard3'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index3'\nimport { PairState } from '../../hooks/usePairs3'\nimport { useCurrency } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback3'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks3'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks3'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index3'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency3'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom2'\nimport { currencyId } from '../../utils/currencyId3'\nimport PoolPriceBar from './PoolPriceBar3'\nimport Page from '../Page2'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity2() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addapeliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addapeliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addapeliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addapeliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addapeliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n                 <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         ApeSwap</Button>}>     \n         <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs4'\nimport useTotalSupply from 'hooks/useTotalSupply4'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency4'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks4'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index4'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index4'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard4'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index4'\nimport { PairState } from '../../hooks/usePairs4'\nimport { useCurrency } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback4'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks4'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks4'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index4'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency4'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom4'\nimport { currencyId } from '../../utils/currencyId4'\nimport PoolPriceBar from './PoolPriceBar4'\nimport Page from '../Page4'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity4() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addradioliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addradioliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addradioliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addradioliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addradioliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n             <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         RadioShack</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool4\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs5'\nimport useTotalSupply from 'hooks/useTotalSupply5'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency5'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks5'\nimport { useCurrencyBalances } from '../wallet/hooks5'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index5'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades5'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal5'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel5'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index5'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard5'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index5'\nimport { PairState } from '../../hooks/usePairs5'\nimport { useCurrency } from '../../hooks/Tokens5'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback5'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks5'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks5'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index5'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index5'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend5'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency5'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom5'\nimport { currencyId } from '../../utils/currencyId5'\nimport PoolPriceBar from './PoolPriceBar5'\nimport Page from '../Page5'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity5() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool5') ||\n      pathname.includes('/createbiswap') ||\n      pathname.includes('/addbiswapliquidity') ||\n      pathname.includes('/removebiswap') ||\n      pathname.includes('/biswapfind') ||\n      pathname.includes('/biswapliquidity')\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addbiswapliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addbiswapliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addbiswapliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addbiswapliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addbiswapliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n               <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         Biswap</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool5\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link , useLocation} from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n             <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         PancakeSwap</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply3'\n\nimport { useTokenBalance } from '../../state/wallet/hooks3'\nimport { currencyId } from '../../utils/currencyId3'\nimport { unwrappedToken } from '../../utils/wrappedCurrency3'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo2'\nimport { DoubleCurrencyLogo } from '../Logo/index2'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index3'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeape/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addapeliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply4'\n\nimport { useTokenBalance } from '../../state/wallet/hooks4'\nimport { currencyId } from '../../utils/currencyId4'\nimport { unwrappedToken } from '../../utils/wrappedCurrency4'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo4'\nimport { DoubleCurrencyLogo } from '../Logo/index4'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index4'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeradio/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addradioliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply5'\n\nimport { useTokenBalance } from '../../state/wallet/hooks5'\nimport { currencyId } from '../../utils/currencyId5'\nimport { unwrappedToken } from '../../utils/wrappedCurrency5'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo5'\nimport { DoubleCurrencyLogo } from '../Logo/index5'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index5'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removebiswap/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addbiswapliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens3'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks3'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens3'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index2'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index3'\nimport ImportRow from './ImportRow3'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks3'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens3'\nimport { isAddress } from '../../utils/index3'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList3'\nimport { filterTokens, useSortedTokensByQuery } from './filtering3'\nimport useTokenComparator from './sorting3'\n\nimport ImportRow from './ImportRow3'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback2'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks3'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens3'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index3'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens3'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow3'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists3'\nimport ManageTokens from './ManageTokens3'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback2'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks3'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch3'\nimport ImportToken from './ImportToken3'\nimport Manage from './Manage3'\nimport ImportList from './ImportList2'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo4'\nimport { ListLogo } from 'components/Logo/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens4'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks4'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens4'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index4'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index4'\nimport ImportRow from './ImportRow4'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks4'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens4'\nimport { isAddress } from '../../utils/index4'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList4'\nimport { filterTokens, useSortedTokensByQuery } from './filtering4'\nimport useTokenComparator from './sorting4'\n\nimport ImportRow from './ImportRow4'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback4'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks4'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo/index4'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens4'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index4'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens4'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow4'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists4'\nimport ManageTokens from './ManageTokens4'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo/index4'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback4'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch4'\nimport ImportToken from './ImportToken4'\nimport Manage from './Manage4'\nimport ImportList from './ImportList4'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo5'\nimport { ListLogo } from 'components/Logo/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks5'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens5'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency5'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks5'\nimport { useCurrencyBalance } from '../../state/wallet/hooks5'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens5'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index5'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index5'\nimport ImportRow from './ImportRow5'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks5'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens5'\nimport { isAddress } from '../../utils/index5'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList5'\nimport { filterTokens, useSortedTokensByQuery } from './filtering5'\nimport useTokenComparator from './sorting5'\n\nimport ImportRow from './ImportRow5'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback5'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks5'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo/index5'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens5'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index5'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens5'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow5'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists5'\nimport ManageTokens from './ManageTokens5'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo/index5'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback5'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks5'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch5'\nimport ImportToken from './ImportToken5'\nimport Manage from './Manage5'\nimport ImportList from './ImportList5'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp3'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract3'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp4'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract4'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp5'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract5'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools/all',\n  },\n  {\n    label: t('Be2Mining'),\n    icon: 'PredictionsIcon',\n    href: '/be2mining/all',\n    status: {\n      text: t('NEW').toLocaleUpperCase(),\n      color: 'warning',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: '/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: '/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n  \n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n  const earningsBusd2 = earningsBusd.div(cakePriceBusd)\n  \n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      \n      <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n      <Text  color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text  color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n        <Text color=\"textSubtle\">{t('Collect in VIZSLASWAP')}</Text>\n        {earningsBusd2 && !earningsBusd2.isNaN() ? (\n              <Balance\n                decimals={earningsBusd2.gt(0) ? 3 : 0}\n                fontSize=\"18px\"\n                bold\n                lineHeight=\"1\"\n                value={earningsBusd2.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n      </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0')\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({  value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 381000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link}  to=\"/pools/all\">\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePool4 , usePool5, usePool6 , usePool7, usePool8 , usePool9, usePool10, usePool11, usePool12, usePool13, usePool14, usePool15, usePool40, usePool41, usePool39, usePool16, usePool17, usePool18 , usePool19, usePool20, usePool21 , usePool22, usePool23, usePool24, usePool25, usePool26, usePool27, usePool29, usePool28, usePool30, usePool31, usePool32, usePool33, usePool34, usePool35, usePool36, usePool37, usePool38 , usePool42, usePool43, usePool44} from 'hooks/useTokenBalance'\nimport { usePollFarmsData , usePriceBnbBusd, usePriceCakeBusd , usePriceHVIBusd, usePriceLameaBusd , usePriceETCBusd , usePriceliraBusd, usePriceBABYVIZSLABusd , usePriceBVCBusd ,usePriceEXZOBusd , usePriceETHBusd, usePriceATALIRABusd, usePriceLTCBusd, usePriceLGCBusd, } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress,geLiraAddress,getlgcAddress, getethAddress, getLAMEAAddress, getbvcAddress, getbabyvizslaAddress , getltcAddress, getetcAddress, getataliraAddress, getexzoAddress} from 'utils/addressHelpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\n\ninterface ModalInfoProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst ModalInfo: React.FC<ModalInfoProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const HVIPRICE0 = usePriceHVIBusd()\n  const HVIPRICE = HVIPRICE0.toNumber()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const WBNBPRICE0 = usePriceBnbBusd()\n  const WBNBPRICE = WBNBPRICE0.toNumber()\n  const ETHPPRICE0 = usePriceETHBusd()\n  const ETHPRICE = ETHPPRICE0.toNumber()\n  const ETCPRICE0 = usePriceETCBusd()\n  const ETCPRICE = ETCPRICE0.toNumber()\n  const LTCPRICE0 = usePriceLTCBusd()\n  const LTCPRICE = LTCPRICE0.toNumber()\n  const LAMEAPRICE0 = usePriceLameaBusd()\n  const LAMEAPRICE = LAMEAPRICE0.toNumber()\n  const ATALIRAPRICE0 = usePriceATALIRABusd()\n  const ATALIRAPRICE = ATALIRAPRICE0.toNumber()\n  const EXZOPRICE0 = usePriceEXZOBusd()\n  const EXZOPRICE = EXZOPRICE0.toNumber()\n  const BVCPRICE0 = usePriceBVCBusd()\n  const BVCPRICE = BVCPRICE0.toNumber()\n  const BABYVIZSLAPRICE0 = usePriceBABYVIZSLABusd()\n  const BABYVIZSLAPRICE = BABYVIZSLAPRICE0.toNumber()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const POOL4 = getBalanceNumber(usePool4(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool5(getCakeAddress()))\n  const POOL6 = getBalanceNumber(usePool6(getCakeAddress()))\n  const POOL7 = getBalanceNumber(usePool7(getCakeAddress()))\n  const POOL8 = getBalanceNumber(usePool8(getCakeAddress()))\n  const POOL9 = getBalanceNumber(usePool9(getCakeAddress()))\n  const POOL10 = getBalanceNumber(usePool10(getCakeAddress()))\n  const POOL11 = getBalanceNumber(usePool11(getCakeAddress()))\n  const POOL12 = getBalanceNumber(usePool12(getCakeAddress()))\n  const POOL13 = getBalanceNumber(usePool13(getCakeAddress()))\n  const POOL14 = getBalanceNumber(usePool14(getCakeAddress()))\n  const POOL15 = getBalanceNumber(usePool15(getCakeAddress()))\n  const POOL16 = getBalanceNumber(usePool16(getCakeAddress()))\n  const POOL17 = getBalanceNumber(usePool17(getCakeAddress()))\n  const POOL18 = getBalanceNumber(usePool18(getCakeAddress()))\n  const POOL19 = getBalanceNumber(usePool19(getCakeAddress()))\n  const POOL20 = getBalanceNumber(usePool20(getCakeAddress()))\n  const POOL21 = getBalanceNumber(usePool21(getCakeAddress()))\n  const POOL22 = getBalanceNumber(usePool22(getHVIAddress()))\n  const POOL23 = getBalanceNumber(usePool23(getHVIAddress()))\n  const POOL24 = getBalanceNumber(usePool24(getHVIAddress()))\n  const POOL25 = getBalanceNumber(usePool25(getHVIAddress()))\n  const POOL26 = getBalanceNumber(usePool26(getHVIAddress()))\n  const POOL27 = getBalanceNumber(usePool27(getHVIAddress()))\n  const POOL28 = getBalanceNumber(usePool28(getHVIAddress()))\n  const POOL29 = getBalanceNumber(usePool29(getHVIAddress()))\n  const POOL30 = getBalanceNumber(usePool30(getWbnbAddress()))\n  const POOL31 = getBalanceNumber(usePool31(getethAddress()))\n  const POOL32 = getBalanceNumber(usePool32(getetcAddress()))\n  const POOL33 = getBalanceNumber(usePool33(getltcAddress()))\n  const POOL34 = getBalanceNumber(usePool34(getLAMEAAddress()))\n  const POOL35 = getBalanceNumber(usePool35(getataliraAddress()))\n  const POOL36 = getBalanceNumber(usePool36(getexzoAddress()))\n  const POOL37 = getBalanceNumber(usePool37(getbvcAddress()))\n  const POOL38 = getBalanceNumber(usePool38(getbabyvizslaAddress()))\n  const POOL39 = getBalanceNumber(usePool39(geLiraAddress()))\n  const POOL40 = getBalanceNumber(usePool40(getCakeAddress()))\n  const POOL41 = getBalanceNumber(usePool41(getHVIAddress()))\n  const POOL42 = getBalanceNumber(usePool42(getlgcAddress()))\n  const POOL43 = getBalanceNumber(usePool43(getCakeAddress()))\n  const POOL44 = getBalanceNumber(usePool44(getHVIAddress()))\n\n  const MAJDNEM  = POOL4 + POOL5 + POOL6 + POOL7 + POOL8 + POOL9 + POOL10 + POOL11 + POOL12 + POOL13 + POOL14 + POOL15 + POOL16 + POOL17 + POOL18 + POOL19 + POOL20 + POOL21  + POOL40 + POOL43\n  const MAJDNEM2 = POOL22 + POOL23 + POOL24 + POOL25 + POOL26 + POOL27 + POOL28 + POOL29 + POOL41 + POOL44\n  const FULL1 = MAJDNEM * VIZSLAPRICE\n  const FULL2 = MAJDNEM2 * HVIPRICE * 1000000000\n  const MAJDNEM3 = POOL30\n  const FULL4 = POOL30 * WBNBPRICE\n  const MAJDNEM4 = POOL31\n  const FULL5 = POOL31 * ETHPRICE\n  const MAJDNEM5 = POOL32\n  const FULL6 = POOL32 * ETCPRICE\n  const MAJDNEM6 = POOL33\n  const FULL7 = POOL33 * LTCPRICE\n  const MAJDNEM7 = POOL34\n  const FULL8 = POOL34 * LAMEAPRICE\n  const MAJDNEM8 = POOL35\n  const FULL9 = POOL35 * ATALIRAPRICE * 1000000000\n  const MAJDNEM9 = POOL36\n  const FULL10 = POOL36 * EXZOPRICE * 1000000000\n  const MAJDNEM10 = POOL37\n  const FULL11 = POOL37 * BVCPRICE\n  const MAJDNEM11 = POOL38\n  const FULL12 = POOL38 * BABYVIZSLAPRICE\n  const MAJDNEM12 = POOL39\n  const FULL13 = POOL39 * liraprice\n  const MAJDNEM13 = POOL42\n  const FULL14 = POOL42 * lgcprice\n  const FULL3 = FULL1 + FULL2  + FULL4 + FULL5 + FULL6 + FULL7 + FULL8 + FULL9 + FULL10 + FULL11 + FULL12 + FULL13 + FULL14\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Total staked (Staking Pools)')} onDismiss={onDismiss}>\n  \n  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL1} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM} unit=\" VIZSLASWAP\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL2} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM2 * 1000000000} unit=\" HVI\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL8} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM7} unit=\" LAMEA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL11} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM10} unit=\" BVC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL10} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM9  * 1000000000} unit=\" EXZO\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL9} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM8  * 1000000000} unit=\" ATALIRA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL13} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM12} unit=\" LIRA\" decimals={0} />\n      </Flex>\n\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL5} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM4} unit=\" ETH\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL12} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM11} unit=\" BABYVIZSLA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL4} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM3} unit=\" WBNB\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL7} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM6} unit=\" LTC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL6} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM5} unit=\" ETC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL14} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM13} unit=\" LGC\" decimals={0} />\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ModalInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport ModalInfo from './ModalInfo'\n\nconst StyledCard = styled.div`\n margin-left: 6px ;\n margin-top: 4px ;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<ModalInfo TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      <StyledCard >\n          <Flex flexDirection=\"column\">\n            \n            <Button\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              variant='primary'\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('?')}\n            </Button>\n          </Flex>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault  } from 'state/pools/hooks'\nimport { usePool4 , usePool5, usePool6 , usePool7, usePool8 , usePool9, usePool10, usePool11, usePool12, usePool13, usePool14, usePool15, usePool16, usePool17, usePool18 , usePool19, usePool20, usePool21 , usePool22, usePool23, usePool24, usePool25, usePool26, usePool27, usePool29, usePool28, usePool30, usePool31, usePool32, usePool33, usePool34, usePool35, usePool36, usePool37, usePool38, usePool39, usePool40, usePool41, usePool42,usePool43, usePool44} from 'hooks/useTokenBalance'\nimport { usePollFarmsData , usePriceBnbBusd, usePriceCakeBusd , usePriceHVIBusd, usePriceLameaBusd , usePriceETCBusd , usePriceBABYVIZSLABusd , usePriceBVCBusd ,usePriceEXZOBusd , usePriceETHBusd, usePriceATALIRABusd, usePriceLTCBusd,usePriceliraBusd, usePriceLGCBusd } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress,geLiraAddress, getethAddress, getLAMEAAddress, getbvcAddress, getbabyvizslaAddress , getltcAddress, getetcAddress, getataliraAddress, getexzoAddress, getlgcAddress} from 'utils/addressHelpers'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport Balance from 'components/Balance'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport InfoCard from './components/InfoCard'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n  const all = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL1')\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const HVIPRICE0 = usePriceHVIBusd()\n  const HVIPRICE = HVIPRICE0.toNumber()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const WBNBPRICE0 = usePriceBnbBusd()\n  const WBNBPRICE = WBNBPRICE0.toNumber()\n  const ETHPPRICE0 = usePriceETHBusd()\n  const ETHPRICE = ETHPPRICE0.toNumber()\n  const ETCPRICE0 = usePriceETCBusd()\n  const ETCPRICE = ETCPRICE0.toNumber()\n  const LTCPRICE0 = usePriceLTCBusd()\n  const LTCPRICE = LTCPRICE0.toNumber()\n  const LAMEAPRICE0 = usePriceLameaBusd()\n  const LAMEAPRICE = LAMEAPRICE0.toNumber()\n  const ATALIRAPRICE0 = usePriceATALIRABusd()\n  const ATALIRAPRICE = ATALIRAPRICE0.toNumber()\n  const EXZOPRICE0 = usePriceEXZOBusd()\n  const EXZOPRICE = EXZOPRICE0.toNumber()\n  const BVCPRICE0 = usePriceBVCBusd()\n  const BVCPRICE = BVCPRICE0.toNumber()\n  const BABYVIZSLAPRICE0 = usePriceBABYVIZSLABusd()\n  const BABYVIZSLAPRICE = BABYVIZSLAPRICE0.toNumber()\n  const liraprice0 = usePriceliraBusd()\nconst liraprice = liraprice0.toNumber()\nconst lgcprice0 = usePriceLGCBusd()\nconst lgcprice = lgcprice0.toNumber()\n  const POOL4 = getBalanceNumber(usePool4(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool5(getCakeAddress()))\n  const POOL6 = getBalanceNumber(usePool6(getCakeAddress()))\n  const POOL7 = getBalanceNumber(usePool7(getCakeAddress()))\n  const POOL8 = getBalanceNumber(usePool8(getCakeAddress()))\n  const POOL9 = getBalanceNumber(usePool9(getCakeAddress()))\n  const POOL10 = getBalanceNumber(usePool10(getCakeAddress()))\n  const POOL11 = getBalanceNumber(usePool11(getCakeAddress()))\n  const POOL12 = getBalanceNumber(usePool12(getCakeAddress()))\n  const POOL13 = getBalanceNumber(usePool13(getCakeAddress()))\n  const POOL14 = getBalanceNumber(usePool14(getCakeAddress()))\n  const POOL15 = getBalanceNumber(usePool15(getCakeAddress()))\n  const POOL16 = getBalanceNumber(usePool16(getCakeAddress()))\n  const POOL17 = getBalanceNumber(usePool17(getCakeAddress()))\n  const POOL18 = getBalanceNumber(usePool18(getCakeAddress()))\n  const POOL19 = getBalanceNumber(usePool19(getCakeAddress()))\n  const POOL20 = getBalanceNumber(usePool20(getCakeAddress()))\n  const POOL21 = getBalanceNumber(usePool21(getCakeAddress()))\n  const POOL22 = getBalanceNumber(usePool22(getHVIAddress()))\n  const POOL23 = getBalanceNumber(usePool23(getHVIAddress()))\n  const POOL24 = getBalanceNumber(usePool24(getHVIAddress()))\n  const POOL25 = getBalanceNumber(usePool25(getHVIAddress()))\n  const POOL26 = getBalanceNumber(usePool26(getHVIAddress()))\n  const POOL27 = getBalanceNumber(usePool27(getHVIAddress()))\n  const POOL28 = getBalanceNumber(usePool28(getHVIAddress()))\n  const POOL29 = getBalanceNumber(usePool29(getHVIAddress()))\n  const POOL30 = getBalanceNumber(usePool30(getWbnbAddress()))\n  const POOL31 = getBalanceNumber(usePool31(getethAddress()))\n  const POOL32 = getBalanceNumber(usePool32(getetcAddress()))\n  const POOL33 = getBalanceNumber(usePool33(getltcAddress()))\n  const POOL34 = getBalanceNumber(usePool34(getLAMEAAddress()))\n  const POOL35 = getBalanceNumber(usePool35(getataliraAddress()))\n  const POOL36 = getBalanceNumber(usePool36(getexzoAddress()))\n  const POOL37 = getBalanceNumber(usePool37(getbvcAddress()))\n  const POOL38 = getBalanceNumber(usePool38(getbabyvizslaAddress()))\n  const POOL39 = getBalanceNumber(usePool39(geLiraAddress()))\n  const POOL40 = getBalanceNumber(usePool40(getCakeAddress()))\n  const POOL41 = getBalanceNumber(usePool41(getHVIAddress()))\n  const POOL42 = getBalanceNumber(usePool42(getlgcAddress()))\n  const POOL43 = getBalanceNumber(usePool43(getCakeAddress()))\n  const POOL44 = getBalanceNumber(usePool44(getHVIAddress()))\n\n\n  const MAJDNEM  = POOL4 + POOL5 + POOL6 + POOL7 + POOL8 + POOL9 + POOL10 + POOL11 + POOL12 + POOL13 + POOL14 + POOL15 + POOL16 + POOL17 + POOL18 + POOL19 + POOL20 + POOL21 + POOL40 + POOL43\n  const MAJDNEM2 = POOL22 + POOL23 + POOL24 + POOL25 + POOL26 + POOL27 + POOL28 + POOL29 + POOL41 + POOL44\n  const FULL1 = MAJDNEM * VIZSLAPRICE\n  const FULL2 = MAJDNEM2 * HVIPRICE * 1000000000\n  const FULL4 = POOL30 * WBNBPRICE\n  const FULL5 = POOL31 * ETHPRICE\n  const FULL6 = POOL32 * ETCPRICE\n  const FULL7 = POOL33 * LTCPRICE\n  const FULL8 = POOL34 * LAMEAPRICE\n  const FULL9 = POOL35 * ATALIRAPRICE * 1000000000\n  const FULL10 = POOL36 * EXZOPRICE * 1000000000\n  const FULL11 = POOL37 * BVCPRICE\n  const FULL12 = POOL38 * BABYVIZSLAPRICE\n  const FULL13 = POOL39 * liraprice\n  const FULL14 = POOL42 * lgcprice\n  const FULL3 = FULL1 + FULL2  + FULL4 + FULL5 + FULL6 + FULL7 + FULL8 + FULL9 + FULL10 + FULL11 + FULL12 + FULL13 + FULL14\n  \n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyAllPools = useMemo(\n    () =>\n      all.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n  const showall = location.pathname.includes('all')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : antiwhalepools\n  } \n  if (showall) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : all\n  } \n\n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n            <Flex mt=\"5px\">\n            <Balance color=\"primary\" prefix=\"~$\" fontSize=\"27px\" bold value={FULL3} decimals={0}  />\n            <InfoCard />\n            </Flex>\n            <Text fontSize=\"20px\" bold color=\"secondary\" ml=\"6px\">\n              {t('Total staked (Staking Pools)')}\n            </Text>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as={Link} width={50} height={35}  to=\"/pools/all\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as={Link} width={120} height={35}  to=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as={Link} width={50} height={35}  to=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as={Link} width={120} height={35}  to=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000 ) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  * 2\n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0')\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({  value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  * 2\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard2: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard2\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard3: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard3\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n\n \n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard5: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard5\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n\n \n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ full5 * earningsPercentageToDisplay }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLGCBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full5}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard4: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard4\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd, usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm25, useFarm25} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const hviprice0 = usePriceHVIBusd()\n  const hviprice = hviprice0.toNumber()\n  const hvilpbalance = getBalanceNumber(useFarm25(getHVIAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm25(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm25()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = hviprice * hvilpbalance\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44 * 2\n\n \n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ full5 * earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLGCBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full5}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard4: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard4\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to=\"/be2mining/all\">\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to=\"/be2mining/finished\">\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePollFarmsData, usePriceLameaBusd, usePriceBnbBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { usePool1 , usePool2, usePool3, usePool4a, usePool4b} from 'hooks/useTokenBalance'\nimport Balance from 'components/Balance'\n\ninterface ModalInfoProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst ModalInfo: React.FC<ModalInfoProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const POOL1 = getBalanceNumber(usePool1(getCakeAddress()))\n  const POOL2 = getBalanceNumber(usePool2(getCakeAddress()))\n  const POOL3 = getBalanceNumber(usePool3(getCakeAddress()))\n  const POOL4 = getBalanceNumber(usePool4a(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool4b(getCakeAddress()))\n  const VÉGE = POOL1 + POOL2 + POOL3 + POOL4 + POOL5\n  const VÉGE1 = VÉGE * VIZSLAPRICE\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Total staked (B2Mining)')} onDismiss={onDismiss}>\n  \n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Balance color=\"textSubtle\" value={VÉGE1} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={VÉGE} unit=\" VIZSLASWAP\" decimals={0} />\n      </Flex>\n    \n    </Modal>\n  )\n}\n\nexport default ModalInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\nimport ModalInfo from './ModalInfo'\n\nconst StyledCard = styled.div`\n margin-left: 6px ;\n margin-top: 4px ;\n\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<ModalInfo TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      <StyledCard >\n          <Flex flexDirection=\"column\">\n            \n            <Button\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              variant='primary'\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('?')}\n            </Button>\n          </Flex>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools2'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 381000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow2: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow2\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow3: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow3\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n  \n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow4: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow4\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full5), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full5 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full5}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n  \n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full5), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full5 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow5: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow5\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full5), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full5 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full5}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceliraBusd , usePriceCakeBusd, usePriceLGCBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress, getlgcAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm23 , useFarm23} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgcpricebalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo43 = useTotalSupplyFarm23()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = lgcprice * lgcpricebalance\n  const teljes66 = teljes64 + teljes65 \n  const full5 = teljes66 / kombo44\n  \n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full5), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full5 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow6: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow6\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types2'\nimport PoolRow from './PoolRow'\nimport PoolRow2 from '../PoolsTable2/PoolRow'\nimport PoolRow3 from '../PoolsTable3/PoolRow'\nimport PoolRow4 from '../PoolsTable4/PoolRow'\nimport PoolRow5 from '../PoolsTable5/PoolRow'\nimport PoolRow6 from '../PoolsTable6/PoolRow'\n\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  pools3: Pool[]\n  pools2: Pool[]\n  pools4: Pool[]\n  pools5: Pool[]\n  pools6: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools,pools2, pools3, pools4, pools5, pools6, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        {pools2.map((pool) => (\n          <PoolRow2\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n             {pools5.map((pool) => (\n          <PoolRow5\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n           {pools6.map((pool) => (\n          <PoolRow6\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n          {pools3.map((pool) => (\n          <PoolRow3\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n             {pools4.map((pool) => (\n          <PoolRow4\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n      \n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePollFarmsData, usePriceLameaBusd, usePriceBnbBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { usePool1 , usePool2, usePool3, usePool4a, usePool4b} from 'hooks/useTokenBalance'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport Balance from 'components/Balance'\nimport PoolCard from './components/PoolCard'\nimport PoolCard2 from './components/PoolCard2'\nimport PoolCard3 from './components/PoolCard3'\nimport PoolCard4 from './components/PoolCard4'\nimport PoolCard5 from './components/PoolCard5'\nimport PoolCard6 from './components/PoolCard6'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport InfoCard from './components/InfoCard'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst FarmPools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const chosenPoolsLength3 = useRef(0)\n  const chosenPoolsLength2 = useRef(0)\n  const chosenPoolsLength4 = useRef(0)\n  const chosenPoolsLength5 = useRef(0)\n  const chosenPoolsLength6 = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const POOL1 = getBalanceNumber(usePool1(getCakeAddress()))\n  const POOL2 = getBalanceNumber(usePool2(getCakeAddress()))\n  const POOL3 = getBalanceNumber(usePool3(getCakeAddress()))\n  const POOL4 = getBalanceNumber(usePool4a(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool4b(getCakeAddress()))\n  const EREDMENY1 = VIZSLAPRICE * POOL1\n  const EREDMENY2 = VIZSLAPRICE * POOL2\n  const EREDMENY3 = VIZSLAPRICE * POOL3\n  const EREDMENY4 = VIZSLAPRICE * POOL4\n  const EREDMENY5 = VIZSLAPRICE * POOL5\n  const VÉGE = EREDMENY1 + EREDMENY2 + EREDMENY3 + EREDMENY4 + EREDMENY5\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool2) => pool2.sousId === 1000)\n    const cakeAutoVault = { ...cakePool, isAutoVault: false }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const all = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL2')\n  const all2 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL3')\n  const all3 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL4')\n  const all4 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL5')\n  const all5 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL6')\n  const all6 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL7')\n  const finished = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'FINISHED2')\n  \n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyfinished = useMemo(\n    () =>\n      finished.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finished, accountHasVaultShares],\n  )\n  const stakedOnlyAllPools  = useMemo(\n    () =>\n      all .filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all, accountHasVaultShares],\n  )\n  const stakedOnlyAl2lPools = useMemo(\n    () =>\n      all2.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all2, accountHasVaultShares],\n  )\n  const stakedOnlyAl3lPools = useMemo(\n    () =>\n      all3.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all3, accountHasVaultShares],\n  )\n  const stakedOnlyAl4lPools = useMemo(\n    () =>\n      all4.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all4, accountHasVaultShares],\n  )\n  const stakedOnlyAl5lPools = useMemo(\n    () =>\n      all5.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all5, accountHasVaultShares],\n  )\n  const stakedOnlyAl6lPools = useMemo(\n    () =>\n      all6.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all6, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength2.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength3.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength4.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength5.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showallpools = location.pathname.includes('all')\n  const showall2pools = location.pathname.includes('all')\n  const showall3pools = location.pathname.includes('all')\n  const showall4pools = location.pathname.includes('all')\n  const showall5pools = location.pathname.includes('all')\n  const showall6pools = location.pathname.includes('all')\n  const showfinished = location.pathname.includes('finished')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  \n  }\n  if (showallpools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools  : all\n  } \n  if (showfinished) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : finished\n  } \n\n  let chosenPools2\n  if (showall2pools) {\n    chosenPools2 = stakedOnly ? stakedOnlyAl2lPools  : all2\n  } \n  if (showfinished) {\n    chosenPools2 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n  let chosenPools3\n  if (showall3pools) {\n    chosenPools3 = stakedOnly ? stakedOnlyAl3lPools  : all3\n  } \n  if (showfinished) {\n    chosenPools3 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n  let chosenPools4\n  if (showall4pools) {\n    chosenPools4 = stakedOnly ? stakedOnlyAl4lPools  : all4\n  } \n  if (showfinished) {\n    chosenPools4 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n  let chosenPools5\n  if (showall5pools) {\n    chosenPools5 = stakedOnly ? stakedOnlyAl5lPools  : all5\n  } \n  if (showfinished) {\n    chosenPools5 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n  let chosenPools6\n  if (showall6pools) {\n    chosenPools6 = stakedOnly ? stakedOnlyAl6lPools  : all6\n  } \n  if (showfinished) {\n    chosenPools6 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools2 = chosenPools2.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools3 = chosenPools3.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools4 = chosenPools4.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools5 = chosenPools5.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  chosenPools6 = sortPools(chosenPools6).slice(0, numberOfPoolsVisible)\n  chosenPools5 = sortPools(chosenPools5).slice(0, numberOfPoolsVisible)\n  chosenPools4 = sortPools(chosenPools4).slice(0, numberOfPoolsVisible)\n  chosenPools3 = sortPools(chosenPools3).slice(0, numberOfPoolsVisible)\n  chosenPools2 = sortPools(chosenPools2).slice(0, numberOfPoolsVisible)\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n  chosenPoolsLength2.current = chosenPools2.length\n  chosenPoolsLength3.current = chosenPools3.length\n  chosenPoolsLength4.current = chosenPools4.length\n  chosenPoolsLength5.current = chosenPools5.length\n  chosenPoolsLength6.current = chosenPools6.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n        {chosenPools2.map((pool) =>\n (\n          <PoolCard2 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n        {chosenPools5.map((pool) =>\n (\n          <PoolCard5 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n          {chosenPools6.map((pool) =>\n (\n          <PoolCard6 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n         {chosenPools3.map((pool) =>\n (\n          <PoolCard3 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n       {chosenPools4.map((pool) =>\n (\n          <PoolCard4 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n      \n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} pools2={chosenPools2} pools5={chosenPools5} pools6={chosenPools6} pools3={chosenPools3} pools4={chosenPools4} account={account} userDataLoaded={userDataLoaded} />\n\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Be2Mining')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Stake one token and immediately get 2 as a reward.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n            <Flex mt=\"5px\">\n            <Balance color=\"primary\" prefix=\"~$\" fontSize=\"27px\" bold value={VÉGE} decimals={0}  />\n            <InfoCard />\n            </Flex>\n            <Text fontSize=\"20px\" bold color=\"secondary\" ml=\"6px\">\n              {t('Total staked (B2Mining)')}\n            </Text>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default FarmPools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index3'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices3'\nimport { ONE_BIPS } from '../../../config/constants/index3'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index2'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal3'\nimport SwapModalFooter from './SwapModalFooter3'\nimport SwapModalHeader from './SwapModalHeader3'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency3'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport SwapRoute from './SwapRoute3'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails3'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken3'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index3'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline3'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { useCurrencyBalance } from '../state/wallet/hooks3'\nimport { useWETHContract } from './useContract3'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers2'\nimport AddressInputPanel from './components/AddressInputPanel3'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown3'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee3'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice3'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal3'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback3'\nimport { useSwapCallback } from '../../hooks/useSwapCallback3'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback3'\nimport { Field } from '../../state/swap/actions3'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks3'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices3'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page2'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function ApeSwap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/apeswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  return (\n    <Page>\n            <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         ApeSwap</Button>}>     \n         <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/swap\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n  \n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index3'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index4'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices4'\nimport { ONE_BIPS } from '../../../config/constants/index4'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index4'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal4'\nimport SwapModalFooter from './SwapModalFooter4'\nimport SwapModalHeader from './SwapModalHeader4'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency4'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport SwapRoute from './SwapRoute4'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails4'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken4'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index4'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline4'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { useCurrencyBalance } from '../state/wallet/hooks4'\nimport { useWETHContract } from './useContract4'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers4'\nimport AddressInputPanel from './components/AddressInputPanel4'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown4'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee4'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice4'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal4'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index4'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback4'\nimport { useSwapCallback } from '../../hooks/useSwapCallback4'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback4'\nimport { Field } from '../../state/swap/actions4'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks4'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices4'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page4'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function RadioShack() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/radioshack')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 0\n    }\n    return 2\n  }\n  \n\n  return (\n    <Page>\n      \n      <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         RadioShack</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/swap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40}  href=\"/radioshack?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/radioshack?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index4'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index5'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices5'\nimport { ONE_BIPS } from '../../../config/constants/index5'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact5'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index5'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index5'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal5'\nimport SwapModalFooter from './SwapModalFooter5'\nimport SwapModalHeader from './SwapModalHeader5'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency5'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index5'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact5'\nimport SwapRoute from './SwapRoute5'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails5'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken5'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index5'\nimport { useTransactionAdder } from '../state/transactions/hooks5'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index5'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline5'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks5'\nimport { useTransactionAdder } from '../state/transactions/hooks5'\nimport { useCurrencyBalance } from '../state/wallet/hooks5'\nimport { useWETHContract } from './useContract5'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades5'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers5'\nimport AddressInputPanel from './components/AddressInputPanel5'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal5'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel5'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown5'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee5'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice5'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal5'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index5'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens5'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback5'\nimport { useSwapCallback } from '../../hooks/useSwapCallback5'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback5'\nimport { Field } from '../../state/swap/actions5'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks5'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index5'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend5'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices5'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page5'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\nconst GridCell = styled(Flex)<{ isTopPosition: boolean }>`\n  height: 65px;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n\n  ${({ theme, isTopPosition }) => isTopPosition && `background-color: ${theme.colors.warning}2D;`}\n`\n\nexport default function Biswap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/biswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool5') ||\n      pathname.includes('/createbiswap') ||\n      pathname.includes('/addbiswapliquidity') ||\n      pathname.includes('/removebiswap') ||\n      pathname.includes('/biswapfind') ||\n      pathname.includes('/biswapliquidity')\n    ) {\n      return 0\n    }\n    return 2\n  }\n  \n\n  return (\n    <Page>\n            \n      <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         Biswap</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/swap\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/biswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/biswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index5'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  return (\n    <Page>\n            <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         PancakeSwap</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n  \n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity2 from './index'\n\nexport function RedirectToAddLiquidity2() {\n  return <Redirect to=\"/addapeliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure2() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addapeliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity2 />\n}\n\nexport function RedirectDuplicateTokenIds2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addapeliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity2 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity4 from './index'\n\nexport function RedirectToAddLiquidity3() {\n  return <Redirect to=\"/addradioliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure3() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addradioliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity4 />\n}\n\nexport function RedirectDuplicateTokenIds3() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addradioliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity4 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity5 from './index'\n\nexport function RedirectToAddLiquidity4() {\n  return <Redirect to=\"/addbiswapliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure4() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addbiswapliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity5 />\n}\n\nexport function RedirectDuplicateTokenIds4() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addbiswapliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity5 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure2() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool2\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeape/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure2\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure4() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool4\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeradio/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure4\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure5() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool5\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removebiswap/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure5\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport FarmPools from './views/FarmPools'\nimport ApeSwap from './views/ApeSwap'\nimport RadioShack from './views/RadioShack'\nimport Biswap from './views/Biswap'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport {\n  RedirectDuplicateTokenIds2,\n  RedirectOldAddLiquidityPathStructure2,\n  RedirectToAddLiquidity2,\n} from './views/AddLiquidity2/redirects'\nimport {\n  RedirectDuplicateTokenIds3,\n  RedirectOldAddLiquidityPathStructure3,\n  RedirectToAddLiquidity3,\n} from './views/AddLiquidity4/redirects'\nimport {\n  RedirectDuplicateTokenIds4,\n  RedirectOldAddLiquidityPathStructure4,\n  RedirectToAddLiquidity4,\n} from './views/AddLiquidity5/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure2 from './views/RemoveLiquidity2/redirects'\nimport RedirectOldRemoveLiquidityPathStructure4 from './views/RemoveLiquidity4/redirects'\nimport RedirectOldRemoveLiquidityPathStructure5 from './views/RemoveLiquidity5/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Listing = lazy(() => import('./views/Listing'))\nconst Partnership = lazy(() => import('./views/Partnership'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst AddLiquidity2 = lazy(() => import('./views/AddLiquidity2'))\nconst AddLiquidity4 = lazy(() => import('./views/AddLiquidity4'))\nconst AddLiquidity5 = lazy(() => import('./views/AddLiquidity5'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst Liquidity2 = lazy(() => import('./views/Pool2'))\nconst Liquidity4 = lazy(() => import('./views/Pool4'))\nconst Liquidity5 = lazy(() => import('./views/Pool5'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst PoolFinder2 = lazy(() => import('./views/PoolFinder2'))\nconst PoolFinder4 = lazy(() => import('./views/PoolFinder4'))\nconst PoolFinder5 = lazy(() => import('./views/PoolFinder5'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst RemoveLiquidity2 = lazy(() => import('./views/RemoveLiquidity2'))\nconst RemoveLiquidity4 = lazy(() => import('./views/RemoveLiquidity4'))\nconst RemoveLiquidity5 = lazy(() => import('./views/RemoveLiquidity5'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route exact path=\"/whitepaper\">\n              <Listing />\n            </Route>\n            <Route exact path=\"/partnership\">\n              <Partnership />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/be2mining\">\n              <FarmPools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/apeswap\">\n              <ApeSwap />\n            </Route>\n            <Route exact strict path=\"/radioshack\">\n              <RadioShack />\n            </Route>\n            <Route exact strict path=\"/biswap\">\n              <Biswap />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/apefind\">\n              <PoolFinder2 />\n            </Route>\n            <Route exact strict path=\"/radiofind\">\n              <PoolFinder4 />\n            </Route>\n            <Route exact strict path=\"/biswapfind\">\n              <PoolFinder5 />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/apeliquidity\">\n              <Liquidity2 />\n            </Route>\n            <Route exact strict path=\"/radioliquidity\">\n              <Liquidity4 />\n            </Route>\n            <Route exact strict path=\"/biswapliquidity\">\n              <Liquidity5 />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact strict path=\"/createape\">\n              <RedirectToAddLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/createradio\">\n              <RedirectToAddLiquidity3 />\n            </Route>\n            <Route exact strict path=\"/createbiswap\">\n              <RedirectToAddLiquidity4 />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/addapeliquidity\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/addbiswapliquidity\">\n              <AddLiquidity5 />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/addapeliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact path=\"/addbiswapliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds4 />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/createape\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/createradio\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/createbiswap\">\n              <AddLiquidity5 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure3 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure4 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/createape/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/createradio/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact path=\"/createbiswap/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds4 />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/removeape/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure4 />\n            </Route>\n            <Route exact strict path=\"/removebiswap/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure5 />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n            <Route exact strict path=\"/removeape/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity4 />\n            </Route>\n            <Route exact strict path=\"/removebiswap/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity5 />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pool2\">\n              <Redirect to=\"/apeliquidity\" />\n            </Route>\n            <Route path=\"/pool4\">\n              <Redirect to=\"/radioliquidity\" />\n            </Route>\n            <Route path=\"/pool5\">\n              <Redirect to=\"/biswapliquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools/all\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools/all\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}