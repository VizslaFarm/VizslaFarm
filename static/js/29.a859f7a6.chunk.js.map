{"version":3,"sources":["views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","state/collectibles/hooks.ts","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","state/teams/hooks.ts","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/components/HeaderWrapper.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","state/achievements/hooks.ts","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["ButtonArrangement","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","value","Wrapper","styled","div","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","mb","map","translationKey","index","WalletNotConnected","ConnectWalletButton","approvalState","confirmState","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","onApproveSuccess","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","tx","wait","status","handleConfirm","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","balance","gte","Label","label","isDisabled","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","props","isSuccess","checked","e","target","style","flex","NextStepButton","endIcon","ExistingUserState","StyledApproveConfirmButtonRow","mediaQueries","md","Button","UIKitButton","iconAttrs","width","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","onClick","undefined","isLoading","justifyContent","id","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","useState","variationId","setVariationId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","address","response","currentAllowance","toString","approve","toJSON","mintNFT","fontSize","bold","num","images","Number","useGetCollectibles","useAppDispatch","useSelector","collectibles","data","identifiers","Object","keys","fetchWalletNfts","tokenIds","nftsInWallet","Nfts","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","contract","getErc721Contract","getSigner","getPancakeProfileAddress","length","to","marginLeft","height","walletNft","firstTokenId","getAddressByType","parseInt","Team","currentTeamId","teams","fetchTeams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","isJoinable","mr","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","toastSuccess","createProfile","fetchProfile","title","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","error","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","Date","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","handleClick","getCakeBack","maxWidth","HeaderWrapper","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","calls","multicallv2","profileABI","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","flexDirection","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","handleDeactivateProfile","pauseProfile","getBalanceNumber","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","key","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","cardBorder","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","handleCollectPoints","getPoints","px","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","ComingSoon","p","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","SecondaryCard","tertiary","defaultProps","StatBox","Icon","icon","subtitle","textTransform","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","usePersistState","localStorageKey","usernameVisibilityToggled","setUsernameVisibility","VisibilityOff","VisibilityOn","replace","href","getBscScanLink","external","outline","PrizeIcon","Profile","fetchAchievements","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/29.a859f7a6.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', '664', 'sunny']\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    nftAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          nftAddress: action.nftAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.canMint(account)\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {t('Total cost: 1.5 BVC')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map((translationKey, index) => {\n          return (\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(translationKey)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading scale=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <ConnectWalletButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => ethers.providers.TransactionResponse\n  onConfirm: () => ethers.providers.TransactionResponse\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n  onApproveSuccess?: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async () => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import BigNumber from 'bignumber.js/bignumber'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </Card>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(bunnyFactoryContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return bunnyFactoryContract.mintNFT(variationId)\n      },\n      onSuccess: () => actions.nextStep(),\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport Nfts from 'config/constants/nfts'\nimport { State } from '../types'\nimport { fetchWalletNfts } from './index'\n\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport useToast from 'hooks/useToast'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const { library } = useWeb3React()\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n\n  const { t } = useTranslation()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const { toastError } = useToast()\n\n  const handleApprove = async () => {\n    const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n    const tx = await contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsApproving(false)\n      setIsApproved(true)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            id=\"approveStarterCollectible\"\n          >\n            {t('Enable')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/teams/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 3 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, profileContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(profileContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'))\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { t } = useTranslation()\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>{t('Loading...')}</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.canClaim(account)\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = async () => {\n    const tx = await claimRefundContract.getCakeBack()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Success!'))\n      onSuccess()\n      onDismiss()\n    } else {\n      setIsConfirming(false)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: BIG_ZERO,\n    numberCakeToRegister: BIG_ZERO,\n    numberCakeToUpdate: BIG_ZERO,\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\n          profileABI,\n          calls,\n        )\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/profile/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\n      const currentAllowance = new BigNumber(response.toString())\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t('%minimum% CAKE required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = async () => {\n    const tx = await pancakeProfileContract.pauseProfile()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess(t('Profile Paused!'))\n      onDismiss()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsConfirming(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n        return contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return profileContract.reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n        }\n\n        return profileContract.updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useProfile } from 'state/profile/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      goToChange()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{getFullDisplayBalance(cost)} VIZSLASWAP</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Enable')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: 'Edit Profile',\n  [Views.CHANGE]: 'Change Profile Pic',\n  [Views.REMOVE]: 'Remove Profile Pic',\n  [Views.APPROVE]: 'Enable CAKE',\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const translationKey = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, PresentWonIcon } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const { t } = useTranslation()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {t('Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\n            {t('Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<PresentWonIcon />}>\n            {t('You’ve got a gift to claim!')}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(key, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const { t } = useTranslation()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {t(key, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAchievements } from 'state/achievements/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const { t } = useTranslation()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n            {t('No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, AchievementState } from '../types'\nimport { fetchAchievements } from '.'\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const { t } = useTranslation()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const { t } = useTranslation()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = async () => {\n    const tx = await pointCenterContract.getPoints(achievement.address)\n    setIsCollecting(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsCollecting(false)\n      onCollectSuccess(achievement)\n      toastSuccess(t('Points Collected!'))\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsCollecting(false)\n    }\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {t('Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {t('Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {t('Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Achievements')}\n              </Heading>\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Task Center')}\n              </Heading>\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const { t } = useTranslation()\n  const { nftsInWallet } = useGetCollectibles()\n\n  return (\n    <>\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\n        {t('Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.')}\n      </Text>\n      <Text as=\"p\">\n        {t('NFTs in this user’s wallet that aren’t approved Pancake Collectibles won’t be shown here.')}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {t('No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n  VisibilityOn,\n  VisibilityOff,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile } from 'state/profile/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { getBscScanLink } from 'utils'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const [usernameVisibilityToggled, setUsernameVisibility] = usePersistState(false, {\n    localStorageKey: 'username_visibility_toggled',\n  })\n  const { t } = useTranslation()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  const toggleUsernameVisibility = () => {\n    setUsernameVisibility(!usernameVisibilityToggled)\n  }\n\n  const { username, team, isActive, points } = profile\n\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Flex alignItems=\"center\">\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\n                </Flex>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={getBscScanLink(account, 'address')} color=\"text\" external>\n                    {account}\n                    <OpenNewIcon ml=\"4px\" />\n                  </AddressLink>\n                </Flex>\n                <ResponsiveText bold>{team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {t('Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {t('Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\n                {t('Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport Page from 'components/Layout/Page'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { useProfile } from 'state/profile/hooks'\nimport { useFetchAchievements } from 'state/achievements/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}