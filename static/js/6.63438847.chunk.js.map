{"version":3,"sources":["views/Vote2/StyledComponents2.tsx","views/Vote2/Gift.tsx","views/Profile/EmojiPicker.js","views/Profile/StyledComponents.tsx","views/Profile/ChatAppStyles.ts","views/Profile/index.tsx"],"names":["Container","styled","Box","DepositList","ul","HeaderContainer","Button","div","Title","h2","ImageGrid","span","InfoText","Text","VizslaSwap","account","useWeb3React","useState","tokenContract","setTokenContract","vizslaSwapContract","setVizslaSwapContract","contractAddress","approved","setApproved","showDropdown","setShowDropdown","loadingIndex","setLoadingIndex","deposits","setDeposits","depositOptions","useMemo","amount","ethers","utils","parseUnits","label","color","useEffect","a","provider","providers","Web3Provider","window","ethereum","signer","getSigner","Contract","tokenABI","GiftABI","error","console","initializeContracts","maxAmount","allowance","gte","checkApprovalStatus","promises","i","push","getDepositDetails","then","deposit","id","catch","Promise","all","fetchedDeposits","validDeposits","filter","sort","b","timestamp","paginatedDeposits","slice","map","user","transactionId","fetchDeposits","approve","index","tx","wait","makeDeposit","alert","handleButtonClick","alignItems","justifyContent","onClick","style","display","gridTemplateColumns","gap","marginBottom","option","disabled","background","padding","fontSize","margin","textAlign","toString","formatUnits","Date","toLocaleString","styles","emojiPicker","marginTop","flexWrap","border","borderRadius","backgroundColor","emojiButton","cursor","EmojiPicker","setNewMessage","newMessage","emoji","role","tabIndex","onKeyDown","e","key","runningLightAnimation","keyframes","hoverEffect","activeEffect","borderGlow","ChatBox","Input","input","theme","colors","failure","text","align","primary","isActive","TopListTitle","container","flexDirection","width","maxWidth","position","overflow","deleteButton","marginLeft","fileButton","chatBox","height","overflowY","messageContainer","emojiFileContainer","avatar","marginRight","message","flex","inputContainer","searchButton","sendButton","sentImage","maxHeight","fileInput","previewContainer","previewText","previewImage","topListBox","topList","listStyle","topListImage","inputRow","fileContainer","boxShadow","paginationButton","lastCollectedInfo","collectButton","supabase","createClient","process","Profile","messages","setMessages","cooldown","setCooldown","lastCollector","setLastCollector","lastCollectedAmount","setLastCollectedAmount","chatBoxRef","useRef","location","useLocation","setTopList","setTop10Addresses","currentPage","setCurrentPage","names","setNames","userNumbers","setUserNumbers","isSearching","setIsSearching","searchQuery","setSearchQuery","emojiPickerVisible","setEmojiPickerVisible","image","setImage","giftBalance","setGiftBalance","contract","setContract","contract2","setContract2","giftContract","setGiftContract","t","useTranslation","displayedMessages","setDisplayedMessages","isTopListVisible","setIsTopListVisible","giftAddress","fileInputRef","updateOnlineStatus","status","from","update","online_status","eq","contractABI","NumberPurchaseABI","TokenABI","fetchGiftBalance","balanceOf","balance","formattedBalance","parseFloat","fetchLastCollectedData","formattedAmount","interval","setInterval","clearInterval","collectTokens","collect","current","scrollTop","scrollHeight","select","order","ascending","data","calculateTopList","fetchMessages","channel","on","event","schema","table","payload","new","prevMessages","updatedMessages","subscribe","removeChannel","userList","usersFromMessages","msg","sender","usersFromTopList","Array","Set","length","newNames","newNumbers","single","existingData","fetchError","code","name","number","getName","userPurchases","userPurchase","userNumber","toNumber","insert","log","fetchUserData","timer","setTimeout","clearTimeout","pathname","handleSend","trim","userMessageCount","Map","forEach","set","get","sortedTopList","entries","top10","handlePageChange","page","getSenderName","substring","getSenderStyle","findIndex","getSenderImage","formattedNumber","padStart","formatTimestamp","date","timeString","toLocaleTimeString","navigator","language","hour","minute","second","hour12","dateString","toLocaleDateString","month","day","startIndex","endIndex","totalPages","Math","ceil","filteredTopList","toLowerCase","includes","filteredMessages","FarmsPoolsRowLoader","activeIndex","scale","variant","to","as","Link","mt","ref","onScroll","currentScrollPosition","prev","min","src","alt","type","value","onChange","target","placeholder","click","accept","files","file","size","reader","FileReader","onload","result","readAsDataURL","Gift","bold","count","pageNumbers","startPage","getPageNumbers","pageNumber","ConnectWalletButton"],"mappings":"u9pBAGMA,EAAYC,YAAOC,IAAPD,CAAH,4RAYTE,EAAcF,IAAOG,GAAV,sZAkDXC,GA1BcJ,YAAOK,IAAPL,CAAH,ifA0BOA,IAAOM,IAAV,uHAOfC,EAAQP,IAAOQ,GAAV,0FAkBLC,GAZYT,IAAOU,KAAV,qIAQCV,IAAOM,IAAV,iDAIKN,IAAOM,IAAV,kJAgDTK,GAzCYX,IAAOM,IAAV,kQAiBMN,YAAOK,IAAPL,CAAH,odAwBDA,YAAOY,KAAPZ,CAAH,sE,GAKIA,YAAOY,KAAPZ,CAAH,qE,yBC6EAa,EApNI,WACjB,IAAQC,EAAYC,yBAAZD,QACR,EAA0CE,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoDF,mBAAS,MAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KAGMC,EAAkB,6CAExB,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAwCP,oBAAS,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAwCT,mBAAwB,MAAhE,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAAgCX,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAsCb,mBAAS,GAA/C,mBAEMc,GAFN,UAEuBC,mBAAQ,iBAAM,CACnC,CACEC,OAAQC,SAAOC,MAAMC,WAAW,MAAO,IACvCC,MAAO,8BACPC,MAAO,qDAET,CACEL,OAAQC,SAAOC,MAAMC,WAAW,MAAO,IACvCC,MAAO,8BACPC,MAAO,qDAET,CACEL,OAAQC,SAAOC,MAAMC,WAAW,OAAQ,IACxCC,MAAO,+BACPC,MAAO,qDAET,CACEL,OAAQC,SAAOC,MAAMC,WAAW,OAAQ,IACxCC,MAAO,+BACPC,MAAO,wDAER,KAEHC,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,sDAC1B,GAAIzB,EACF,IACQ0B,EAAW,IAAIP,SAAOQ,UAAUC,aAAaC,OAAOC,UACpDC,EAASL,EAASM,YAExB5B,EAAiB,IAAIe,SAAOc,SAvCP,6CAuCsCC,EAAUH,IACrEzB,EAAsB,IAAIa,SAAOc,SAAS1B,EAAiB4B,EAASJ,IACpE,MAAOK,GACPC,QAAQD,MAAM,kCAAmCA,GAT3B,2CAAH,qDAczBE,KACC,CAACtC,IAEJwB,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,0DACtBtB,IAAiBH,EADK,iCAGhBuC,EAAYpB,SAAOC,MAAMC,WAAW,OAAQ,IAH5B,SAIElB,EAAcqC,UAAUxC,EAASO,GAJnC,OAIhBiC,EAJgB,OAKtB/B,EAAY+B,EAAUC,IAAIF,IALJ,gDAOtBF,QAAQD,MAAM,4BAAd,MAPsB,yDAAH,qDAYzBM,KACC,CAAC1C,EAASG,IAEbqB,qBAAU,WA0CJd,GAzCe,uCAAG,sCAAAe,EAAA,0DAChBpB,EADgB,iBAOhB,IAPgB,SAGM,IAChBsC,EAAW,GAJD,WAOPC,GACPD,EAASE,KACPxC,EAAmByC,kBAAkBF,GAClCG,MAAK,SAAAC,GAAO,kCAAUA,GAAV,IAAmBC,GAAIL,OACnCM,OAAM,SAAAd,GAEL,OADAC,QAAQD,MAAM,0BAA2BA,GAClC,UANNQ,EAAI,EAAGA,EAJM,IAIaA,IAAM,EAAhCA,GAPO,gBAkBcO,QAAQC,IAAIT,GAlB1B,OAkBVU,EAlBU,QAmBVC,EAAgBD,EAAgBE,QAAO,SAAAP,GAAO,OAAgB,OAAZA,MAG1CQ,MAAK,SAAC/B,EAAGgC,GAAJ,OAAUA,EAAEC,UAAYjC,EAAEiC,aAGvCC,EAAoBL,EAAcM,MAAM,EAAG,GAGjD7C,EAAY4C,EAAkBE,KAAI,SAACb,GAAD,MAAc,CAC9Cc,KAAMd,EAAQ,GACd9B,OAAQ8B,EAAQ,GAChBU,UAAWV,EAAQ,GACnBe,cAAef,EAAQC,QAhCT,kDAoChBZ,QAAQD,MAAM,2BAAd,MApCgB,0DAAH,oDA0CjB4B,KAED,CAAC3D,EAAoBK,IAOxB,IAAMuD,EAAO,uCAAG,WAAOC,GAAP,eAAAzC,EAAA,0DACVtB,IAAiBH,EADP,0CAGOG,EAAc8D,QAAQ1D,EAAiBS,EAAekD,GAAOhD,QAHpE,cAGJiD,EAHI,OAIVtD,EAAgBqD,GAJN,SAKJC,EAAGC,OALC,wBAMcjE,EAAcqC,UAAUxC,EAASO,GAN/C,eAOIkC,IAAIzB,EAAekD,GAAOhD,SACtCT,GAAY,GARJ,kDAWV4B,QAAQD,MAAM,mBAAd,MAXU,yBAaVvB,EAAgB,MAbN,6EAAH,sDAkBPmC,EAAO,uCAAG,WAAOkB,GAAP,eAAAzC,EAAA,0DACVpB,EADU,iCAGVQ,EAAgBqD,GAHN,SAIO7D,EAAmBgE,YAAYH,EAAQ,GAJ9C,cAIJC,EAJI,gBAKJA,EAAGC,OALC,OAMVE,MAAM,uBACN3D,GAAgB,GAPN,kDASV0B,QAAQD,MAAM,kBAAd,MATU,yBAWVvB,EAAgB,MAXN,6EAAH,sDAgBP0D,EAAiB,uCAAG,WAAOL,GAAP,SAAAzC,EAAA,yDACnBjB,EADmB,gCAEhByD,EAAQC,GAFQ,6CAIhBlB,EAAQkB,GAJQ,2CAAH,sDAQvB,OACE,cAAC,IAAD,CAAMM,WAAW,QAAQC,eAAe,QAAxC,SACE,eAACxF,EAAD,WACE,cAACK,EAAD,CAAiBoF,QAAS,kBAAM/D,GAAiBD,IAAjD,SACE,cAACb,EAAD,uCAGDa,GACC,qCACE,cAACf,EAAD,CAAWgF,MAAO,CAAEC,QAAS,OAAQC,oBAAqB,UAAWC,IAAK,OAAQC,aAAc,QAAhG,SACG/D,EAAe6C,KAAI,SAACmB,EAAQd,GAAT,OAClB,cAAC,IAAD,CAEEe,SAA2B,OAAjBrE,EACV8D,QAAS,kBAAMH,EAAkBL,IACjCS,MAAO,CACLO,WAAYF,EAAOzD,MACnB4D,QAAS,OACTC,SAAU,OACVC,OAAQ,QACRC,UAAW,UATf,SAYG1E,IAAiBsD,EAAQ,gBAAkB1D,EAAWwE,EAAO1D,MAAQ,WAXjE0D,EAAO9D,OAAOqE,iBAgBzB,cAAC9F,EAAD,CAAOkF,MAAO,CAAEW,UAAW,UAA3B,6BACA,cAAClG,EAAD,UACG0B,EAAS+C,KAAI,SAACb,GAAD,OACZ,+BACE,2CADF,IAC0BA,EAAQc,KADlC,IACwC,uBACtC,6CAFF,IAE4B3C,SAAOC,MAAMoE,YAAYxC,EAAQ9B,OAAQ,IAFrE,eAEqF,uBACnF,gDAHF,IAG+B,IAAIuE,KAAyB,IAApBzC,EAAQU,WAAkBgC,mBAHzD1C,EAAQe,6BCjL3B4B,EAAS,CACbC,YAAa,CACXC,UAAW,OACXjB,QAAS,OACTH,eAAgB,SAChBqB,SAAU,OACVX,QAAS,OACTY,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB1E,MAAO,QAET2E,YAAa,CACXd,SAAU,OACVC,OAAQ,MACRc,OAAQ,YAIGC,EA5CK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAGpC,OACE,qBAAK3B,MAAOgB,EAAOC,YAAnB,SAHa,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAI1P/B,KAAI,SAAC0C,GAAD,OACV,sBAEEC,KAAK,SACLC,SAAU,EACV/B,QAAS,kBAAM2B,EAAc,GAAD,OAAIC,GAAJ,OAAiBC,KAC7CG,UAAW,SAACC,GACI,UAAVA,EAAEC,KACJP,EAAc,GAAD,OAAIC,GAAJ,OAAiBC,KAGlC5B,MAAOgB,EAAOO,YAVhB,SAYGK,GAXIA,SCNTM,EAAwBC,YAAH,wVAWrBC,GAAcD,YAAH,6NAUXE,GAAeF,YAAH,2NAUZG,GAAaH,YAAH,iQAcVI,GAAUhI,IAAOM,IAAV,uTAYEyH,IAETE,GAAQjI,IAAOkI,MAAV,o1BACA,gBAAGhF,EAAH,EAAGA,MAAOiF,EAAV,EAAUA,MAAV,OAAuBjF,EAAQiF,EAAMC,OAAOC,QAAUF,EAAMC,OAAOE,QAS/D,qBAAGpC,UAA2B,UAC7B,qBAAGqC,OAAqB,UAsB3B,qBAAGJ,MAAkBC,OAAOI,WAG1B,qBAAGC,SAA2BX,GAAeD,MAG3C,qBAAGY,SAA2BX,GAAeD,KAI7CC,IACO,qBAAGK,MAAkBC,OAAOpC,cAI9CjG,GAAYC,IAAOM,IAAV,oMASTC,GAAQP,YAAOY,KAAPZ,CAAH,8PAOM2H,GAEXe,GAAe1I,YAAOY,KAAPZ,CAAH,uVAMD2H,G,4CCqEFlB,GAxMkC,CAC/CkC,UAAW,CACTjD,QAAS,OACTkD,cAAe,SACftD,WAAY,SACZuD,MAAO,OACPC,SAAU,SACV3C,OAAQ,SACRF,QAAS,OACTa,aAAc,OACdzE,MAAO,UACP0G,SAAU,WACVC,SAAU,UAEZC,aAAc,CACZC,WAAY,OACZlD,WAAY,cACZa,OAAQ,OACRI,OAAQ,UACRf,SAAU,OACV7D,MAAO,WAET8G,WAAY,CACVD,WAAY,MACZjD,QAAS,MACTc,gBAAiB,UACjB1E,MAAO,OACPwE,OAAQ,OACRC,aAAc,MACdG,OAAQ,UACRf,SAAU,QAEZkD,QAAS,CACPP,MAAO,OACPQ,OAAQ,QACRC,UAAW,SACXzD,aAAc,OACdI,QAAS,OACTY,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB1E,MAAO,OACPuG,cAAe,kBAEjBW,iBAAkB,CAChB7D,QAAS,OACTJ,WAAY,SACZW,QAAS,SAEXuD,mBAAoB,CAClB9D,QAAS,OACTJ,WAAY,SACZqB,UAAW,QAEb8C,OAAQ,CACNZ,MAAO,OACPQ,OAAQ,OACRK,YAAa,OACb5C,aAAc,OAEhB6C,QAAS,CACPC,KAAM,GAERC,eAAgB,CACdnE,QAAS,OACTJ,WAAY,UAEd4C,MAAO,CACLW,MAAO,OACP5C,QAAS,OACTJ,aAAc,OACdiB,aAAc,MACdC,gBAAiB,OACjB1E,MAAO,QAETyH,aAAc,CACZZ,WAAY,MACZjD,QAAS,MACTc,gBAAiB,UACjB1E,MAAO,OACPwE,OAAQ,OACRC,aAAc,MACdG,OAAQ,WAEVD,YAAa,CACXkC,WAAY,MACZjD,QAAS,MACTc,gBAAiB,UACjB1E,MAAO,OACPwE,OAAQ,OACRC,aAAc,MACdG,OAAQ,WAEV8C,WAAY,CACVb,WAAY,MACZjD,QAAS,MACTc,gBAAiB,UACjB1E,MAAO,OACPwE,OAAQ,OACRC,aAAc,MACdG,OAAQ,WAEV+C,UAAW,CACTlB,SAAU,QACVmB,UAAW,QACXZ,OAAQ,OACRR,MAAO,OACPlC,UAAW,OACXG,aAAc,OAEhBoD,UAAW,CACT7H,MAAO,OACP4E,OAAQ,UACR4B,MAAO,OACP9B,gBAAiB,OACjBD,aAAc,MACdb,QAAS,OACTY,OAAQ,QAEVsD,iBAAkB,CAChBzE,QAAS,OACTJ,WAAY,SACZqB,UAAW,QAEbyD,YAAa,CACXV,YAAa,OACbrH,MAAO,QAETgI,aAAc,CACZvB,SAAU,QACVmB,UAAW,QACXnD,aAAc,OAEhBwD,WAAY,CACVzB,MAAO,OACPnD,QAAS,QACTJ,WAAY,SACZC,eAAgB,SAChBU,QAAS,OACTY,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB1E,MAAO,OACPsE,UAAW,OACXP,UAAW,UAEbmE,QAAS,CACPC,UAAW,OACX9E,QAAS,QACTO,QAAS,IACTE,OAAQ,SACR0C,MAAO,QAET4B,aAAc,CACZ5B,MAAO,OACPQ,OAAQ,OACRvC,aAAc,MACd4C,YAAa,QAEfgB,SAAU,CACRhF,QAAS,QACTmD,MAAO,OACPhD,aAAc,QAEhB8E,cAAe,CACbrF,WAAY,OACZuD,MAAO,OACPlC,UAAW,OACXV,QAAS,OACTY,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB6D,UAAW,gCAEbpG,UAAW,CACTkB,QAAS,QACTQ,SAAU,QACV7D,MAAO,OACPsE,UAAW,OAEbkE,iBAAkB,CAChB1E,OAAQ,MACRY,gBAAiB,OACjB1E,MAAO,QAETyI,kBAAmB,CACjB5E,SAAU,MACVE,UAAW,QACX/D,MAAO,QAET0I,cAAe,CACbpE,UAAW,OACXV,QAAS,OACT5D,MAAO,OACPwE,OAAQ,OACRC,aAAc,MACdG,OAAQ,Y,UCnLN+D,GAAWC,YAFGC,2CACAA,oNAwmBLC,UArmBW,WACxB,IAAQrK,EAAYC,yBAAZD,QACR,EAAgCE,mBAAS,IAAzC,mBAAOoK,EAAP,KAAiBC,EAAjB,KACA,EAAoCrK,mBAAS,IAA7C,mBAAOoG,EAAP,KAAmBD,EAAnB,KACA,EAAgCnG,mBAAS,GAAzC,mBAAOsK,EAAP,KAAiBC,EAAjB,KACA,EAA0CvK,mBAAS,MAAnD,mBAAOwK,EAAP,KAAsBC,EAAtB,KACA,EAAsDzK,mBAAS,MAA/D,mBAAO0K,EAAP,KAA4BC,EAA5B,KACMC,EAAaC,iBAAO,MACpBC,EAAWC,cACjB,EAA8B/K,mBAAS,IAAvC,mBAAOuJ,EAAP,KAAgByB,EAAhB,KACA,EAA4ChL,mBAAS,IAArD,mBAAuBiL,GAAvB,WACA,EAAsCjL,mBAAS,GAA/C,mBAAOkL,EAAP,KAAoBC,EAApB,KACA,EAA0BnL,mBAAS,IAAnC,mBAAOoL,EAAP,KAAcC,EAAd,KACA,EAAsCrL,mBAAS,IAA/C,oBAAOsL,GAAP,MAAoBC,GAApB,MACA,GAAsCvL,oBAAS,GAA/C,qBAAOwL,GAAP,MAAoBC,GAApB,MACA,GAAsCzL,mBAAS,IAA/C,qBAAO0L,GAAP,MAAoBC,GAApB,MACA,GAAoD3L,oBAAS,GAA7D,qBAAO4L,GAAP,MAA2BC,GAA3B,MACA,GAA0B7L,mBAAS,MAAnC,qBAAO8L,GAAP,MAAcC,GAAd,MACA,GAAsC/L,mBAAS,GAA/C,qBAAOgM,GAAP,MAAoBC,GAApB,MACA,GAAgCjM,mBAAiC,MAAjE,qBAAOkM,GAAP,MAAiBC,GAAjB,MACA,GAAkCnM,mBAAiC,MAAnE,qBAAOoM,GAAP,MAAkBC,GAAlB,MACA,GAAwCrM,mBAAiC,MAAzE,qBAAOsM,GAAP,MAAqBC,GAArB,MACA,GAA0CvM,mBAAiC,MAA3E,qBAAOC,GAAP,MAAsBC,GAAtB,MAEQsM,GAAMC,cAAND,EACR,GAAkDxM,mBAAS,IAA3D,qBAAO0M,GAAP,MAA0BC,GAA1B,MACA,GAAgD3M,oBAAS,GAAzD,qBAAO4M,GAAP,MAAyBC,GAAzB,MAGMC,GAAc,6CAEdC,GAAelC,iBAAO,MAE5BvJ,qBAAU,WACR,IAAM0L,EAAkB,uCAAG,WAAOC,GAAP,iBAAA1L,EAAA,yDACpBzB,EADoB,0EAICkK,GACrBkD,KAAK,aACLC,OAAO,CAAEC,cAAeH,IACxBI,GAAG,UAAWvN,GAPM,iBAIfoC,EAJe,EAIfA,QAMNC,QAAQD,MAAM,gCAAiCA,GAV1B,kDAavBC,QAAQD,MAAM,2CAAd,MAbuB,0DAAH,sDAqBxB,OAHA8K,GAAmB,GAGZ,WACLA,GAAmB,MAEpB,CAAClN,IAQJwB,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,sDAC1B,GAAIzB,EACF,IACQ0B,EAAW,IAAIP,SAAOQ,UAAUC,aAAcC,OAAeC,UAC7DC,EAASL,EAASM,YAExBqK,GAAY,IAAIlL,SAAOc,SA9CP,6CA8CiCuL,GAAazL,IAC9DwK,GAAa,IAAIpL,SAAOc,SA9CP,6CA8CkCwL,GAAmB1L,IACtE0K,GAAgB,IAAItL,SAAOc,SAAS+K,GAAa7K,GAASJ,IAC1D3B,GAAiB,IAAIe,SAAOc,SA9CP,6CA8CsCyL,GAAU3L,IACrE,MAAOK,GACPC,QAAQD,MAAM,kCAAmCA,GAX3B,2CAAH,qDAgBzBE,KACC,CAACtC,IAEJwB,qBAAU,WACR,IAAMmM,EAAgB,uCAAG,8BAAAlM,EAAA,yDAClBtB,GADkB,0EAICA,GAAcyN,UAAUZ,IAJzB,OAIfa,EAJe,OAKfC,EAAmB3M,SAAOC,MAAMoE,YAAYqI,EAAS,IAC3D1B,GAAe4B,WAAWD,IANL,kDAQrBzL,QAAQD,MAAM,wCAAd,MARqB,0DAAH,qDAYhB4L,EAAsB,uCAAG,gCAAAvM,EAAA,yDACxB+K,GADwB,0EAICA,GAAa9B,gBAJd,cAIrBA,EAJqB,gBAKO8B,GAAa5B,sBALpB,OAKrBA,EALqB,OAMrBqD,EAAkB9M,SAAOC,MAAMoE,YAAYoF,EAAqB,IACtED,EAAiBD,GACjBG,EAAuBkD,WAAWE,IARP,kDAU3B5L,QAAQD,MAAM,sCAAd,MAV2B,0DAAH,qDAe5BuL,IACAK,IAGA,IAAME,EAAWC,aAAY,WAC3BR,IACAK,MACC,KAGH,OAAO,kBAAMI,cAAcF,MAC1B,CAAC/N,GAAeqM,KAErB,IAkBQ6B,GAAa,uCAAG,kCAAA5M,EAAA,+EAED+K,GAAa8B,UAFZ,cAEZnK,EAFY,gBAGZA,EAAGC,OAHS,cAIlBE,MAAM,kCAJY,SAKUkI,GAAa9B,gBALvB,cAKZA,EALY,iBAMgB8B,GAAa5B,sBAN7B,QAMZA,EANY,OAOZqD,EAAkB9M,SAAOC,MAAMoE,YAAYoF,EAAqB,IACtED,EAAiBD,GACjBG,EAAuBkD,WAAWE,IAThB,kDAWlB5L,QAAQD,MAAM,2BAAd,MACAkC,MAAM,4BAZY,0DAAH,qDAgBnB9C,qBAAU,WACJsJ,EAAWyD,UACbzD,EAAWyD,QAAQC,UAAY1D,EAAWyD,QAAQE,gBAEnD,CAACzO,EAASsK,IAEb9I,qBAAU,YACW,uCAAG,gCAAAC,EAAA,sEACUyI,GAC3BkD,KAAK,YACLsB,OAAO,KACPC,MAAM,YAAa,CAAEC,WAAW,IAJf,gBACZC,EADY,EACZA,MAAMzM,EADM,EACNA,OAMZC,QAAQD,MAAM,2BAA4BA,IAE1CmI,EAAYsE,GACZC,GAAiBD,IAVC,2CAAH,qDAcnBE,KACC,IAEHvN,qBAAU,WACR,IAAMwN,EAAU9E,GACb8E,QAAQ,mBACRC,GAAG,mBAAoB,CAAEC,MAAO,SAAUC,OAAQ,SAAUC,MAAO,aAAc,SAAAC,GAChF,IAAM/I,EAAa+I,EAAQC,IAC3B/E,GAAY,SAAAgF,GACV,IAAMC,EAAe,sBAAOD,GAAP,CAAqBjJ,IAE1C,OADAwI,GAAiBU,GACVA,QAGVC,YAEH,OAAO,WACLvF,GAASwF,cAAcV,MAExB,IAEH,IAAMW,GAAW1O,mBAAQ,WACvB,IAAM2O,EAAoBtF,EAASzG,KAAI,SAAAgM,GAAG,OAAIA,EAAIC,UAC5CC,EAAmBtG,EAAQ5F,KAAI,0CACrC,OAAOmM,MAAM5C,KAAK,IAAI6C,IAAJ,sBAAYL,GAAZ,YAAkCG,QACnD,CAACzF,EAAUb,IAEdjI,qBAAU,WACHxB,GAA+B,IAApB2P,GAASO,QAEN,uCAAG,8BAAAzO,EAAA,6DACd0O,EAAW,GACXC,EAAa,GAFC,SAIdjN,QAAQC,IAAIuM,GAAS9L,IAAT,uCAAa,WAAOC,GAAP,6BAAArC,EAAA,+EAE6ByI,GACrDkD,KAAK,aACLsB,OAAO,KACPnB,GAAG,UAAWzJ,GACduM,SANwB,mBAEbC,EAFa,EAEnBzB,OAA2B0B,EAFR,EAECnO,QAMU,aAApBmO,EAAWC,KARF,uBASzBnO,QAAQD,MAAR,gDAAuD0B,EAAvD,KAAgEyM,GATvC,8BAavBD,EAbuB,iBAczBH,EAASrM,GAAQwM,EAAaG,KAC9BL,EAAWtM,GAAQwM,EAAaI,OAfP,yCAiBNtE,GAASuE,QAAQ7M,GAjBX,eAiBnB2M,EAjBmB,iBAkBEnE,GAAUsE,cAAc9M,GAlB1B,eAkBnB+M,EAlBmB,OAmBnBC,EAAaD,EAAaH,OAAOK,WAEvCZ,EAASrM,GAAQ2M,EACjBL,EAAWtM,GAAQgN,EAtBM,UAwBD5G,GAASkD,KAAK,aAAa4D,OAAO,CAAC,CAAEhR,QAAS8D,EAAM2M,OAAMC,OAAQI,KAxBjE,kBAwBjB1O,EAxBiB,EAwBjBA,OAENC,QAAQD,MAAR,+CAAsD0B,EAAtD,KAA+D1B,GAE/DC,QAAQ4O,IAAR,6CAAkDnN,EAAlD,kBA5BuB,0DAgC3BzB,QAAQD,MAAR,kCAAyC0B,EAAzC,WAhC2B,0DAAb,wDAJE,OAwCpByH,EAAS4E,GACT1E,GAAe2E,GAzCK,2CAAH,oDA4CnBc,KACC,CAAClR,EAAS2P,GAAUvD,GAAUE,KAEjC9K,qBAAU,WACR,GAAIgJ,EAAW,EAAG,CAChB,IAAM2G,EAAQC,YAAW,kBAAM3G,EAAYD,EAAW,KAAI,KAC1D,OAAO,kBAAM6G,aAAaF,OAG3B,CAAC3G,IAEJ,IA4JwB8G,GAlIlBC,GAAU,uCAAG,gCAAA9P,EAAA,2DACb+I,EAAW,IAAMxK,EADJ,oDAGZsG,EAAWkL,QAAWxF,GAHV,wDAKXnD,EAAU,CACdrB,KAAMlB,EACNwJ,OAAQ9P,EACRgM,UARe,SAWa9B,GAC3BkD,KAAK,YACL4D,OAAO,CAACnI,IAbM,kBAWTgG,MAAMzM,EAXG,EAWHA,QAKZC,QAAQD,MAAM,yBAA0BA,GACxCkC,MAAM,2BAAD,OAA4BlC,EAAMyG,YAEvCxC,EAAc,IACd4F,GAAS,MACTxB,EAAY,KArBG,4CAAH,qDAyBVqE,GAAmB,SAACxE,GACxB,IAAMmH,EAAmB,IAAIC,IAE7BpH,EAASqH,SAAQ,SAAC9B,GACZA,EAAIrI,MAA4B,KAApBqI,EAAIrI,KAAKgK,QACvBC,EAAiBG,IAAI/B,EAAIC,QAAS2B,EAAiBI,IAAIhC,EAAIC,SAAW,GAAK,MAI/E,IAAMgC,EAAgB9B,MAAM5C,KAAKqE,EAAiBM,WAAWvO,MAAK,SAAC/B,EAAGgC,GAAJ,OAAUA,EAAE,GAAKhC,EAAE,MACrFyJ,EAAW4G,GAEX,IAAME,EAAQF,EAAclO,MAAM,EAAG,IAAIC,KAAI,0CAC7CsH,EAAkB6G,IAGdC,GAAmB,SAACC,GACxB7G,EAAe6G,IAGXC,GAAgB,SAACrC,GACrB,OAAKA,EAIU,+CAAXA,EACK,QAGFxE,EAAMwE,IAAN,UAAoBA,EAAOsC,UAAU,EAAG,GAAxC,cAAgDtC,EAAOsC,UAAUtC,EAAOI,OAAS,IAP/E,WAULmC,GAAiB,SAACvC,GACtB,GAAe,+CAAXA,EACF,MAAO,CAAEvO,MAAO,QAElB,IAAM2C,EAAQuF,EAAQ6I,WAAU,yCAAqBxC,KACrD,GAAI5L,GAAS,EAAG,CACd,GAAIA,EAAQ,GACV,MAAO,CAAE3C,MAAO,WAElB,GAAI2C,EAAQ,IACV,MAAO,CAAE3C,MAAO,WAElB,GAAI2C,EAAQ,IACV,MAAO,CAAE3C,MAAO,WAGpB,MAAO,CAAEA,MAAO,SAGZgR,GAAiB,SAACzC,GACtB,IAGM0C,EAHA1B,EAAatF,GAAYsE,GAE/B,OAAIgB,GAKA0B,EAFE1B,EAAa,GAEGA,EAAWvL,WAAWkN,SAAS,EAAG,KAGlC3B,EAAWvL,WAAWkN,SAAS,EAAG,KAGhD,gBAAN,OAAuBD,EAAvB,SAGK,wBAIHE,GAAkB,SAAChP,GACvB,IAAMiP,EAAO,IAAIlN,KAAK/B,GAChBkP,EAAaD,EAAKE,mBAAmBC,UAAUC,SAAU,CAC7DC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,IAEJC,EAAaT,EAAKU,mBAAmBP,UAAUC,SAAU,CAC7DO,MAAO,OACPC,IAAK,YAEP,MAAM,GAAN,OAAUX,EAAV,aAAyBQ,IAGrBI,GA9Xe,IA8XDpI,EAAc,GAC5BqI,GAAWD,GA/XI,GAkYfE,IAFejK,EAAQ7F,MAAM4P,GAAYC,IAE5BE,KAAKC,KAAKnK,EAAQyG,OAlYhB,KA0Zf2D,GAAkBpK,EAAQlG,QAAO,YAAa,IAAXO,EAAU,oBACjD,OAAK8H,KACYuG,GAAcrO,GACfgQ,cAAcC,SAASnI,GAAYkI,gBAAkBhQ,EAAKgQ,cAAcC,SAASnI,GAAYkI,mBAGzGE,GAAmB1J,EAAS/G,QAAO,SAACsM,GAAD,OACvCA,EAAIrI,MAAQqI,EAAIrI,KAAKsM,cAAcC,SAASnI,GAAYkI,kBAG1D,OACE,eAAC,GAAD,WAEgB,cAACG,GAAA,EAAD,IACV,cAAC,GAAD,yBACA,cAAC,IAAD,CAAMzP,WAAW,SAASC,eAAe,SAAzC,SACE,eAAC,IAAD,CAAYyP,aA1BE5C,GA0B0BtG,EAASsG,SAxBvDA,GAASyC,SAAS,uBAClBzC,GAASyC,SAAS,0BAEX,EAEF,GAmB6DI,MAAM,KAAKC,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgBnR,GAAG,gBAAgBoR,GAAG,QAAQC,GAAIC,IAAlD,SACG7H,GAAE,YAEL,cAAC,IAAD,CAAgBzJ,GAAG,gBAAgBoR,GAAG,eAAeC,GAAIC,IAAMC,GAAG,MAAlE,SACG9H,GAAE,aAEL,cAAC,IAAD,CAAgBzJ,GAAG,gBAAgBoR,GAAG,YAAYC,GAAIC,IAAMC,GAAG,MAA/D,SACG9H,GAAE,mBAIR1M,EACH,qCACC,eAACkH,GAAD,CAASuN,IAAK3J,EAAY4J,SAhVd,SAAC/N,GACpB,IAAM2B,EAAUwC,EAAWyD,QAE3B,GAA0B,IAAtBjG,EAAQkG,WAAmB5B,GAAoBtC,EAAS4F,OAAQ,CAElE,IAAMyE,EAAwBrM,EAAQmG,aAAenG,EAAQkG,UAG7D3B,IAAqB,SAAC+H,GAAD,OAAUjB,KAAKkB,IAAID,EAAO,GAAItK,EAAS4F,WAG5DkB,YAAW,WACT9I,EAAQkG,UAAYlG,EAAQmG,aAAekG,IAC1C,KAmUE,UACFX,GAAiBpQ,OAAOgJ,IAAmB/I,KAAI,SAACgM,GAAD,OAC9C,sBAAkBlL,MAAOgB,GAAO8C,iBAAhC,UACE,qBAAKqM,IAAKvC,GAAe1C,EAAIC,QAASiF,IAAI,SAASpQ,MAAOgB,GAAOgD,SACjE,sBAAKhE,MAAOgB,GAAOkD,QAAnB,UACE,oBAAGlE,MAAO0N,GAAexC,EAAIC,QAA7B,UAAuCqC,GAActC,EAAIC,QAAzD,OADF,IAC0ED,EAAIrI,KAC3EqI,EAAI7D,OAAS,qBAAK8I,IAAKjF,EAAI7D,MAAO+I,IAAI,OAAOpQ,MAAOgB,GAAOuD,YAC5D,sBAAMvE,MAAOgB,GAAOjC,UAApB,SAAgCgP,GAAgB7C,EAAInM,kBAL9CmM,EAAI5M,OASfiJ,GAAc,KACb,cAAC,IAAD,CAAM1H,WAAW,OAAOC,eAAe,OAAvC,SACE,cAAC,IAAD,CAAQ2P,QAAQ,OAAO1P,QAAS2J,GAAhC,SACE,eAAC,IAAD,CAAMvG,cAAc,SAApB,UACE,eAAC,KAAD,uBAAgBoE,GAAhB,8BACA,cAAC,KAAD,CAAM9G,SAAS,OAAO7D,MAAM,WAA5B,6DASJ,sBAAKoD,MAAOgB,GAAOiE,SAAnB,UACE,eAAC,IAAD,CAAMpF,WAAW,SAASC,eAAe,SAAzC,UACE,cAAC0C,GAAD,CACE6N,KAAK,OACLC,MAAOvJ,GAAcE,GAActF,EACnC4O,SAAUxJ,GA7NQ,SAAC/E,GAC/BkF,GAAelF,EAAEwO,OAAOF,QA4NsC,SAACtO,GAAD,OAAON,EAAcM,EAAEwO,OAAOF,QAChFvO,UAAW,SAACC,GACI,UAAVA,EAAEC,KAAoB8E,IAA4B,IAAblB,GACvC+G,MAGJ5M,MAAOgB,GAAOyB,MACdgO,YAAa1J,GAAc,uBAA0BlB,EAAW,EAAX,oBAA4BA,EAA5B,KAA0C,iBAC/FvF,SAAUuF,EAAW,IAAMkB,KAE7B,cAAC,IAAD,CAAQhH,QAAS6M,GAAY5M,MAAOgB,GAAOsD,WAAYhE,SAAUuF,EAAW,EAA5E,kBAGA,cAAC,IAAD,CAAQ9F,QAAS,kBAAMqH,IAAuBD,KAAqBnH,MAAOgB,GAAOO,YAAjF,0BAGA,cAAC,IAAD,CAAQxB,QAlPK,WACvBiH,IAAgBD,IAChBG,GAAe,KAgP8BlH,MAAOgB,GAAOqD,aAAjD,SACG0C,GAAc,IAAM,iBAEvB,cAAC,IAAD,CACEhH,QAAS,kBAAMuI,GAAasB,QAAQ8G,SACpC1Q,MAAOgB,GAAO0C,WAFhB,6BAOD2D,IACX,sBAAKrH,MAAOgB,GAAO0D,iBAAnB,UACE,cAAC,KAAD,CAAM1E,MAAOgB,GAAO2D,YAApB,6BACA,qBAAKwL,IAAK9I,GAAO+I,IAAI,UAAUpQ,MAAOgB,GAAO4D,eAC7C,cAAC,IAAD,CAAQ7E,QAAS,kBAAMuH,GAAS,OAAOtH,MAAOgB,GAAOwC,aAArD,0BAQM,uBACE6M,KAAK,OACLM,OAAO,UACPb,IAAKxH,GACLtI,MAAO,CAAEC,QAAS,QAClBsQ,SApQgB,SAACvO,GACzB,GAAIA,EAAEwO,OAAOI,OAAS5O,EAAEwO,OAAOI,MAAM,GAAI,CACvC,IAAMC,EAAO7O,EAAEwO,OAAOI,MAAM,GAE5B,GAAIC,EAAKC,KAAO,QAEd,YADAnR,MAAM,yCAIR,IAAMoR,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACjP,GACfsF,GAAStF,EAAEwO,OAAOU,SAEpBH,EAAOI,cAAcN,OA0PhB1J,IACC,cAAC,EAAD,CACEzF,cAAeA,EACfC,WAAYA,IAGhB,cAAC,IAAD,CAAM9B,WAAW,QAAQC,eAAe,QAAxC,SACE,cAACsR,EAAD,MAEF,cAAC,IAAD,CAAMvR,WAAW,QAAQC,eAAe,QAAxC,SACGiG,GAAiBE,GAChB,sBAAKjG,MAAOgB,GAAOqE,kBAAnB,UACE,cAAC,KAAD,CAAMgM,MAAI,EAAC5Q,SAAS,OAApB,qCACA,cAAC,KAAD,CAAM4Q,MAAI,EAAC5Q,SAAS,OAApB,SAA4BsF,IAC5B,eAAC,KAAD,CAAMsL,MAAI,EAAC5Q,SAAS,OAApB,qBAAoCwF,EAApC,sBAIN,sBAAKjG,MAAOgB,GAAO6D,WAAnB,UACN,cAAC5B,GAAD,CAAclD,QAhfM,WACpBqI,IAAqBD,KA+erB,SACKA,GAAmB,gBAAkB,kBAGzCA,IACG,qCACI,cAAC3F,GAAD,CACI6N,KAAK,OACLC,MAAOrJ,GACPsJ,SAAU,SAACvO,GAAD,OAAOkF,GAAelF,EAAEwO,OAAOF,QACzCtQ,MAAOgB,GAAOyB,MACdgO,YAAY,8BAEhB,oBAAIzQ,MAAOgB,GAAO8D,QAAlB,SACKoK,GAAgBjQ,MAAM4P,GAAYC,IAAU5P,KAAI,WAAgBK,GAAhB,uBAAEJ,EAAF,KAAQmS,EAAR,YAC7C,qBAAetR,MAAO0N,GAAevO,GAArC,UACI,qBAAKgR,IAAKvC,GAAezO,GAAOiR,IAAI,WAAWpQ,MAAOgB,GAAOgE,eAC5D6J,GAAatP,EAAQ,EAF1B,KAE+BiO,GAAcrO,GACzC,uBACCA,EAJL,KAIamS,EAJb,cAASnS,QAQjB,gCACKsH,EAAc,GACX,cAAC,IAAD,CAAQ1G,QAAS,kBAAMuN,GAAiB7G,EAAc,IAAIzG,MAAOgB,GAAOoE,iBAAxE,sBA5KK,WAKrB,IAJA,IAAMmM,EAAc,GAEdC,EAAY/K,EAETxI,EAAI,EAAGA,EAHO,GAGeuT,EAAYvT,GAAK8Q,GAAY9Q,IACjEsT,EAAYrT,KAAKsT,EAAYvT,GAG/B,OAAOsT,EAuKME,GAAiBvS,KAAI,SAACwS,GAAD,OAClB,cAAC,IAAD,CAEI3R,QAAS,kBAAMuN,GAAiBoE,IAChC1R,MAAOgB,GAAOoE,iBAHlB,SAKKsM,GAJIA,MAOZjL,EAAcsI,IACX,cAAC,IAAD,CAAQhP,QAAS,kBAAMuN,GAAiB7G,EAAc,IAAIzG,MAAOgB,GAAOoE,iBAAxE,8BAUZ,cAACuM,EAAA,EAAD","file":"static/js/6.63438847.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Box, Button, Text } from '@pancakeswap/uikit';\r\n\r\nconst Container = styled(Box)`\r\n  max-width: 350px;\r\n    align-items: right;\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n  border: 2px solid #5a9f98;\r\n  justify-content: right;\r\n  border-radius: 12px;\r\n  background-color: #000;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  color: #fff;\r\n`;\r\nconst DepositList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-top: 20px;\r\n  background-color: #1e1e1e;\r\n  border-radius: 8px;\r\n    font-size: 0.9rem;\r\n\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  color: #e5e5e5;\r\n\r\n  li {\r\n    padding: 15px;\r\n    border-bottom: 1px solid #333;\r\n    \r\n    &:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    strong {\r\n      color: #62d5a3;\r\n    }\r\n  }\r\n`;\r\nconst ArrowButton = styled(Button)`\r\n  background-color: #62d5a3;\r\n  color: #1e1e1e;\r\n  font-weight: bold;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #4abf88;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #3aa47b;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #3aa47b;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 0;\r\n  font-size: 1.2rem;\r\n  color: #62d5a3;\r\n`;\r\n\r\nconst ArrowIcon = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 1.5rem;\r\n  color: #62d5a3;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImageGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImageItem = styled.div`\r\n  text-align: center;\r\n\r\n  img {\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  p {\r\n    color: #e5e5e5;\r\n    font-size: 0.9rem;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100%;\r\n  padding: 12px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  background-color: #62d5a3;\r\n  color: #1e1e1e;\r\n  border-radius: 8px;\r\n  margin-top: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #4abf88;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #3aa47b;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst InfoText = styled(Text)`\r\n  font-size: 1.2rem;\r\n  color: #e5e5e5;\r\n`;\r\n\r\nconst InfoText2 = styled(Text)`\r\n  font-size: 1.2rem;\r\n  color: #e5e5e5;\r\n`;\r\nexport { Container, HeaderContainer, Title, ArrowIcon, Content, ImageGrid, ImageItem, StyledButton, InfoText,InfoText2, DepositList, ArrowButton };\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { useWeb3React } from '@web3-react/core/core/core';\r\nimport { Button, Flex } from '@pancakeswap/uikit';\r\nimport { Container, HeaderContainer, Title, ImageGrid, DepositList, ArrowButton, InfoText } from './StyledComponents2';\r\nimport tokenABI from './TokenABI.json';\r\nimport GiftABI from './GiftABI.json';\r\n\r\nconst VizslaSwap = () => {\r\n  const { account } = useWeb3React();\r\n  const [tokenContract, setTokenContract] = useState(null);\r\n  const [vizslaSwapContract, setVizslaSwapContract] = useState(null);\r\n\r\n  const tokenContractAddress = '0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF';\r\n  const contractAddress = '0xC8B19e19f52CE07bf9c4745caA4aAC87ab199cDD';\r\n\r\n  const [approved, setApproved] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [loadingIndex, setLoadingIndex] = useState<number | null>(null);\r\n  const [deposits, setDeposits] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const depositOptions = useMemo(() => [\r\n    {\r\n      amount: ethers.utils.parseUnits('200', 18),\r\n      label: '200 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #62D5A3 0%, #38A169 100%)', // Zöld gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('500', 18),\r\n      label: '500 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #CD7F32 0%, #8C4A00 100%)', // Bronz gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('1000', 18),\r\n      label: '1000 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #6E6E6E 0%, #4B4B4B 100%)', // Ezüst gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('5000', 18),\r\n      label: '5000 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #B8860B 0%, #8B7500 100%)', // Arany gradiens\r\n    },\r\n  ], []);\r\n\r\n  useEffect(() => {\r\n    const initializeContracts = async () => {\r\n      if (account) {\r\n        try {\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner();\r\n\r\n          setTokenContract(new ethers.Contract(tokenContractAddress, tokenABI, signer));\r\n          setVizslaSwapContract(new ethers.Contract(contractAddress, GiftABI, signer));\r\n        } catch (error) {\r\n          console.error('Failed to initialize contracts:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeContracts();\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      if (tokenContract && account) {\r\n        try {\r\n          const maxAmount = ethers.utils.parseUnits('5000', 18);\r\n          const allowance = await tokenContract.allowance(account, contractAddress);\r\n          setApproved(allowance.gte(maxAmount));\r\n        } catch (error) {\r\n          console.error('Error checking allowance:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkApprovalStatus();\r\n  }, [account, tokenContract]);\r\n\r\n  useEffect(() => {\r\n    const fetchDeposits = async () => {\r\n      if (vizslaSwapContract) {\r\n        try {\r\n          const totalDeposits = 100; // Használj egy nagy számot, vagy kérdezd le a tényleges összesen lévő depositokat a contractból, ha van ilyen funkció\r\n          const promises = [];\r\n  \r\n          // Az összes deposit lekérése\r\n          for (let i = 0; i < totalDeposits; i++) {\r\n            promises.push(\r\n              vizslaSwapContract.getDepositDetails(i)\r\n                .then(deposit => ({ ...deposit, id: i }))\r\n                .catch(error => {\r\n                  console.error('Error fetching deposit:', error);\r\n                  return null;\r\n                })\r\n            );\r\n          }\r\n  \r\n          const fetchedDeposits = await Promise.all(promises);\r\n          const validDeposits = fetchedDeposits.filter(deposit => deposit !== null);\r\n  \r\n          // A depositok rendezése fordított időrendben (legújabb elől)\r\n          validDeposits.sort((a, b) => b.timestamp - a.timestamp);\r\n  \r\n          // Csak az első 5 legfrissebb deposit kiválasztása\r\n          const paginatedDeposits = validDeposits.slice(0, 5);\r\n  \r\n          // Az aktuális oldalhoz tartozó depositokat állítjuk be\r\n          setDeposits(paginatedDeposits.map((deposit) => ({\r\n            user: deposit[0],\r\n            amount: deposit[1],\r\n            timestamp: deposit[2],\r\n            transactionId: deposit.id,\r\n          })));\r\n  \r\n        } catch (error) {\r\n          console.error('Error fetching deposits:', error);\r\n        }\r\n      }\r\n    };\r\n  \r\n    if (showDropdown) {\r\n      fetchDeposits();\r\n    }\r\n  }, [vizslaSwapContract, showDropdown]);\r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n  const approve = async (index: number) => {\r\n    if (tokenContract && account) {\r\n      try {\r\n        const tx = await tokenContract.approve(contractAddress, depositOptions[index].amount);\r\n        setLoadingIndex(index);\r\n        await tx.wait();\r\n        const allowance = await tokenContract.allowance(account, contractAddress);\r\n        if (allowance.gte(depositOptions[index].amount)) {\r\n          setApproved(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Approval failed:', error);\r\n      } finally {\r\n        setLoadingIndex(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deposit = async (index: number) => {\r\n    if (vizslaSwapContract) {\r\n      try {\r\n        setLoadingIndex(index);\r\n        const tx = await vizslaSwapContract.makeDeposit(index + 1);\r\n        await tx.wait();\r\n        alert('Deposit successful!');\r\n        setShowDropdown(false);\r\n      } catch (error) {\r\n        console.error('Deposit failed:', error);\r\n      } finally {\r\n        setLoadingIndex(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async (index: number) => {\r\n    if (!approved) {\r\n      await approve(index);\r\n    } else {\r\n      await deposit(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex alignItems=\"right\" justifyContent=\"right\">\r\n      <Container>\r\n        <HeaderContainer onClick={() => setShowDropdown(!showDropdown)}>\r\n          <InfoText>Send Gift 🎁</InfoText>\r\n        </HeaderContainer>\r\n\r\n        {showDropdown && (\r\n          <>\r\n            <ImageGrid style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px', marginBottom: '20px' }}>\r\n              {depositOptions.map((option, index) => (\r\n                <Button\r\n                  key={option.amount.toString()}\r\n                  disabled={loadingIndex !== null}\r\n                  onClick={() => handleButtonClick(index)}\r\n                  style={{\r\n                    background: option.color,\r\n                    padding: '10px',\r\n                    fontSize: '12px',\r\n                    margin: '5px 0',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {loadingIndex === index ? 'Processing...' : approved ? option.label : 'Approve'}\r\n                </Button>\r\n              ))}\r\n            </ImageGrid>\r\n\r\n            <Title style={{ textAlign: 'center' }}>Recent Deposits</Title>\r\n            <DepositList>\r\n              {deposits.map((deposit) => (\r\n                <li key={deposit.transactionId}>\r\n                  <strong>User:</strong> {deposit.user} <br />\r\n                  <strong>Amount:</strong> {ethers.utils.formatUnits(deposit.amount, 18)} VIZSLASWAP <br />\r\n                  <strong>Timestamp:</strong> {new Date(deposit.timestamp * 1000).toLocaleString()}\r\n                </li>\r\n              ))}\r\n            </DepositList>\r\n\r\n       \r\n          </>\r\n        )}\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default VizslaSwap;\r\n","import React from 'react';\r\n\r\nconst EmojiPicker = ({ setNewMessage, newMessage }) => {\r\n  const emojis = ['😊', '😂', '😢', '😍', '😎', '🎉', '🎁', '😜', '🤔', '😇', '🙃', '😅', '🤣', '🤩', '😡', '🥳', '🤯', '😱', '🤗', '😏', '😴', '🤤', '😷', '🤒', '🤕', '🤮', '🤑', '😈', '👻', '💩', '😺', '👀', '💪', '🙏', '👏', '🙌', '👐', '✌️', '👍', '👎', '👊', '🤟'];\r\n\r\n  return (\r\n    <div style={styles.emojiPicker}>\r\n      {emojis.map((emoji) => (\r\n        <span\r\n          key={emoji}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onClick={() => setNewMessage(`${newMessage}${emoji}`)} // Only append emoji, no send\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setNewMessage(`${newMessage}${emoji}`);\r\n            }\r\n          }}\r\n          style={styles.emojiButton}\r\n        >\r\n          {emoji}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  emojiPicker: {\r\n    marginTop: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n  },\r\n  emojiButton: {\r\n    fontSize: '24px',\r\n    margin: '5px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default EmojiPicker;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { Box, Button, Text } from '@pancakeswap/uikit';\r\n\r\nconst runningLightAnimation = keyframes`\r\n  0% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n  50% {\r\n    text-shadow: 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3, 0 0 12.5px #62d5a3;\r\n  }\r\n  100% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n`;\r\nconst hoverEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(255, 255, 255, 0.7);\r\n  }\r\n`;\r\nconst activeEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(83, 178, 140, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(83, 178, 140, 0.7);\r\n  }\r\n`;\r\nconst borderGlow = keyframes`\r\n  0% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n  50% {\r\n    border-color: #4abf88;\r\n    box-shadow: 0 0 15px #4abf88;\r\n  }\r\n  100% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n`;\r\nconst ChatBox = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n    margin-top: 20px;\r\n  overflow-y: scroll;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border: 2px solid #5a9f98;\r\n  border-radius: 8px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  flex-direction: column-reverse;\r\n  animation: ${borderGlow} 2s infinite;\r\n`;\r\nconst Input = styled.input<{ error?: boolean; fontSize?: string; align?: string; isActive?: boolean }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  max-width: 400px\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: ${({ fontSize }) => fontSize || '16px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n  transition: all 0.3s ease;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n\r\n  &:hover {\r\n    animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n  }\r\n\r\n  &:focus {\r\n    animation: ${activeEffect} 0.5s forwards;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  margin: 20px auto;\r\n   border-radius: 15px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  overflow: hidden;\r\n  color: #fff;\r\n`;\r\nconst Title = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 50px;\r\n    margin-top: -20px;\r\n  font-weight: bold; /* Make the text thicker */\r\n  margin-bottom: 20px;\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\nconst TopListTitle = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n    margin-top: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n  font-size: 28px;\r\n  margin-bottom: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\n\r\nexport { runningLightAnimation, hoverEffect,activeEffect,borderGlow,ChatBox,Input,Container,Title,TopListTitle };\r\n","// ChatAppStyles.ts\r\nimport { CSSProperties } from 'react';\r\n\r\nconst styles: { [key: string]: CSSProperties } = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxWidth: '1200px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    borderRadius: '15px',\r\n    color: '#e5e5e5',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n  },\r\n  deleteButton: {\r\n    marginLeft: '10px',\r\n    background: 'transparent',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n    color: '#ff0000', // Red color for the delete button\r\n  },  \r\n  fileButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    fontSize: '20px',\r\n  },\r\n  chatBox: {\r\n    width: '100%',\r\n    height: '300px',\r\n    overflowY: 'scroll',\r\n    marginBottom: '10px',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  messageContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '5px 0',\r\n  },\r\n  emojiFileContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  avatar: {\r\n    width: '45px',\r\n    height: '45px',\r\n    marginRight: '10px',\r\n    borderRadius: '25%',\r\n  },\r\n  message: {\r\n    flex: 1,\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n    borderRadius: '4px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n  },\r\n  searchButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  emojiButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  sendButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  sentImage: {\r\n    maxWidth: '100px',\r\n    maxHeight: '100px',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    marginTop: '10px',\r\n    borderRadius: '8px',\r\n  },\r\n  fileInput: {\r\n    color: '#fff',\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    backgroundColor: '#000',\r\n    borderRadius: '4px',\r\n    padding: '10px',\r\n    border: 'none',\r\n  },\r\n  previewContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  previewText: {\r\n    marginRight: '10px',\r\n    color: '#fff',\r\n  },\r\n  previewImage: {\r\n    maxWidth: '100px',\r\n    maxHeight: '100px',\r\n    borderRadius: '8px',\r\n  },\r\n  topListBox: {\r\n    width: '100%',\r\n    display: 'block',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n    marginTop: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  topList: {\r\n    listStyle: 'none',\r\n    display: 'block',\r\n    padding: '0',\r\n    margin: '10px 0',\r\n    width: '100%',\r\n  },\r\n  topListImage: {\r\n    width: '40px',\r\n    height: '40px',\r\n    borderRadius: '25%',\r\n    marginRight: '10px',\r\n  },\r\n  inputRow: {\r\n    display: 'block',\r\n    width: '100%',\r\n    marginBottom: '10px',\r\n  },\r\n  fileContainer: {\r\n    alignItems: 'left',\r\n    width: '100%',\r\n    marginTop: '10px',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  timestamp: {\r\n    display: 'block',\r\n    fontSize: '0.8em',\r\n    color: '#aaa',\r\n    marginTop: '5px',\r\n  },\r\n  paginationButton: {\r\n    margin: '5px',\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n  },\r\n  lastCollectedInfo: {\r\n    fontSize: '8px',\r\n    textAlign: 'right',\r\n    color: '#fff',\r\n  },\r\n  collectButton: {\r\n    marginTop: '10px',\r\n    padding: '10px',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core/core/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { ButtonMenu, ButtonMenuItem, Button, Flex, Text } from '@pancakeswap/uikit';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { ethers } from 'ethers'; \nimport { createClient } from '@supabase/supabase-js';\nimport Gift from '../Vote2/Gift';\nimport EmojiPicker from './EmojiPicker';\nimport { ChatBox, Input, Container, Title, TopListTitle } from './StyledComponents';\nimport NumberPurchaseABI from './NumberPurchaseABI.json';\nimport contractABI from './contractABI.json';\nimport GiftABI from './GiftABI.json';\nimport TokenABI from './TokenABI.json';\nimport styles from './ChatAppStyles';\nimport FarmsPoolsRowLoader from '../Home/components/FarmsPoolsRowLoader';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nconst Profile: React.FC = () => {\n  const { account } = useWeb3React()\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(''); \n  const [cooldown, setCooldown] = useState(0);\n  const [lastCollector, setLastCollector] = useState(null);\n  const [lastCollectedAmount, setLastCollectedAmount] = useState(null);\n  const chatBoxRef = useRef(null);\n  const location = useLocation();\n  const [topList, setTopList] = useState([]);\n  const [top10Addresses, setTop10Addresses] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [names, setNames] = useState({});\n  const [userNumbers, setUserNumbers] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [emojiPickerVisible, setEmojiPickerVisible] = useState(false);\n  const [image, setImage] = useState(null);\n  const [giftBalance, setGiftBalance] = useState(0);\n  const [contract, setContract] = useState<ethers.Contract | null>(null);\n  const [contract2, setContract2] = useState<ethers.Contract | null>(null);\n  const [giftContract, setGiftContract] = useState<ethers.Contract | null>(null);\n  const [tokenContract, setTokenContract] = useState<ethers.Contract | null>(null);\n  const itemsPerPage = 25;\n  const { t } = useTranslation();\n  const [displayedMessages, setDisplayedMessages] = useState(20);\n  const [isTopListVisible, setIsTopListVisible] = useState(false);\n  const contractAddress = '0x674e3eDc898Aa4b486Bd2E5aa2D1C8653677F471';  \n  const contractAddress2 = '0xBE8C7E554C89e064ED7229952036c3678cd10180';\n  const giftAddress = '0xC8B19e19f52CE07bf9c4745caA4aAC87ab199cDD';  \n  const tokenContractAddress = '0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF';\n  const fileInputRef = useRef(null);\n   \n  useEffect(() => {\n    const updateOnlineStatus = async (status) => { \n      if (!account) return;\n  \n      try {\n        const { error } = await supabase\n          .from('user_data')\n          .update({ online_status: status })\n          .eq('account', account);\n  \n        if (error) {\n          console.error('Error updating online status:', error);\n        }\n      } catch (error) {\n        console.error('Unexpected error updating online status:', error);\n      }\n    };\n  \n    // Set online status to TRUE when the user is on the page\n    updateOnlineStatus(true);\n  \n    // Clean up function to set online status to FALSE when the user leaves the page\n    return () => {\n      updateOnlineStatus(false);\n    };\n  }, [account]);\n  \n  \n    \n  const toggleTopList = () => {\n    setIsTopListVisible(!isTopListVisible);\n};\n\n  useEffect(() => {\n    const initializeContracts = async () => {\n      if (account) {\n        try {\n          const provider = new ethers.providers.Web3Provider((window as any).ethereum);\n          const signer = provider.getSigner();\n      \n          setContract(new ethers.Contract(contractAddress, contractABI, signer));\n          setContract2(new ethers.Contract(contractAddress2, NumberPurchaseABI, signer));\n          setGiftContract(new ethers.Contract(giftAddress, GiftABI, signer));\n          setTokenContract(new ethers.Contract(tokenContractAddress, TokenABI, signer));\n        } catch (error) {\n          console.error('Failed to initialize contracts:', error);\n        }\n      }\n    };\n  \n    initializeContracts();\n  }, [account]);\n  \n  useEffect(() => {\n    const fetchGiftBalance = async () => {\n      if (!tokenContract) return;  // Ellenőrizd, hogy a szerződés létezik-e\n  \n      try {\n        const balance = await tokenContract.balanceOf(giftAddress);\n        const formattedBalance = ethers.utils.formatUnits(balance, 18);\n        setGiftBalance(parseFloat(formattedBalance));\n      } catch (error) {\n        console.error('Error fetching Gift contract balance:', error);\n      }\n    };\n  \n    const fetchLastCollectedData = async () => {\n      if (!giftContract) return;  // Ellenőrizd, hogy a szerződés létezik-e\n  \n      try {\n        const lastCollector = await giftContract.lastCollector();\n        const lastCollectedAmount = await giftContract.lastCollectedAmount();\n        const formattedAmount = ethers.utils.formatUnits(lastCollectedAmount, 18);\n        setLastCollector(lastCollector);\n        setLastCollectedAmount(parseFloat(formattedAmount));\n      } catch (error) { \n        console.error('Error fetching last collected data:', error);\n      } \n    };\n  \n    // Azonnali első lekérdezés\n    fetchGiftBalance();\n    fetchLastCollectedData();\n  \n    // Ismételt lekérdezés 5 másodpercenként\n    const interval = setInterval(() => {\n      fetchGiftBalance();\n      fetchLastCollectedData();\n    }, 5000);\n  \n    // Tisztítás az unmountnál\n    return () => clearInterval(interval);\n  }, [tokenContract, giftContract]);\n  \nconst handleScroll = (e) => {\n  const chatBox = chatBoxRef.current;\n \n  if (chatBox.scrollTop === 0 && displayedMessages < messages.length) {\n    // Calculate the current scroll position relative to the bottom\n    const currentScrollPosition = chatBox.scrollHeight - chatBox.scrollTop;\n\n    // Add 20 more messages to display\n    setDisplayedMessages((prev) => Math.min(prev + 20, messages.length));\n\n    // After state update, reset the scroll position to be relative to the bottom again\n    setTimeout(() => {\n      chatBox.scrollTop = chatBox.scrollHeight - currentScrollPosition;\n    }, 0); // Wait for the messages to be rendered\n  }\n};\n\n\n  const collectTokens = async () => {\n    try {\n      const tx = await giftContract.collect();\n      await tx.wait();\n      alert('Tokens collected successfully!');\n      const lastCollector = await giftContract.lastCollector();\n      const lastCollectedAmount = await giftContract.lastCollectedAmount();\n      const formattedAmount = ethers.utils.formatUnits(lastCollectedAmount, 18);\n      setLastCollector(lastCollector);\n      setLastCollectedAmount(parseFloat(formattedAmount));\n    } catch (error) {\n      console.error('Error collecting tokens:', error);\n      alert('Failed to collect tokens');\n    }\n  };\n\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [account, messages]); \n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const { data, error } = await supabase\n        .from('messages')\n        .select('*')\n        .order('timestamp', { ascending: true });\n  \n      if (error) {\n        console.error('Error fetching messages:', error);\n      } else {\n        setMessages(data);\n        calculateTopList(data);\n      }\n    };\n  \n    fetchMessages();\n  }, []);\n  \n  useEffect(() => {\n    const channel = supabase\n      .channel('public:messages')\n      .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, payload => {\n        const newMessage = payload.new;\n        setMessages(prevMessages => {\n          const updatedMessages = [...prevMessages, newMessage];\n          calculateTopList(updatedMessages);\n          return updatedMessages;\n        });\n      })\n      .subscribe();\n    \n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n  \n  const userList = useMemo(() => {\n    const usersFromMessages = messages.map(msg => msg.sender);\n    const usersFromTopList = topList.map(([user]) => user);\n    return Array.from(new Set([...usersFromMessages, ...usersFromTopList])); // Egyedi felhasználók összegyűjtése\n  }, [messages, topList]);\n\n  useEffect(() => {\n    if (!account || userList.length === 0) return;\n    \n    const fetchUserData = async () => {\n      const newNames = {};\n      const newNumbers = {};\n    \n      await Promise.all(userList.map(async (user) => {\n        try {\n          const { data: existingData, error: fetchError } = await supabase\n            .from('user_data')\n            .select('*')\n            .eq('account', user)\n            .single();\n    \n          if (fetchError && fetchError.code !== 'PGRST116') {\n            console.error(`Error fetching data from Supabase for ${user}:`, fetchError);\n            return;\n          }\n    \n          if (existingData) {\n            newNames[user] = existingData.name;\n            newNumbers[user] = existingData.number;\n          } else {\n            const name = await contract.getName(user);\n            const userPurchase = await contract2.userPurchases(user);\n            const userNumber = userPurchase.number.toNumber();\n    \n            newNames[user] = name;\n            newNumbers[user] = userNumber;\n    \n            const { error } = await supabase.from('user_data').insert([{ account: user, name, number: userNumber }]);\n            if (error) {\n              console.error(`Error inserting data to Supabase for ${user}:`, error);\n            } else {\n              console.log(`User data inserted to Supabase for ${user} successfully`);\n            }\n          }\n        } catch (error) {\n          console.error(`Error fetching data for ${user}:`, error);\n        }\n      }));\n    \n      setNames(newNames);\n      setUserNumbers(newNumbers);\n    };\n    \n    fetchUserData();\n  }, [account, userList, contract, contract2]);\n    \n  useEffect(() => {\n    if (cooldown > 0) {\n      const timer = setTimeout(() => setCooldown(cooldown - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    return undefined; // Hozzáadunk egy visszatérési értéket akkor is, ha cooldown <= 0\n  }, [cooldown]);\n  \n  const toggleSearchMode = () => {\n    setIsSearching(!isSearching);\n    setSearchQuery('');\n  };\n\n  const handleSearchInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n    \n      if (file.size > 1048576) {\n        alert('The file size must be less than 1 MB.');\n        return;\n      }\n    \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSend = async () => {\n    if (cooldown > 0 || !account) return;  // Ellenőrizd, hogy van-e bejelentkezett felhasználó\n    \n    if (!newMessage.trim() && !image) return;\n    \n    const message = {\n      text: newMessage,\n      sender: account,\n      image,\n    };\n    \n    const { data, error } = await supabase\n      .from('messages')\n      .insert([message]);\n    \n    if (error) {\n      console.error('Error sending message:', error);\n      alert(`Failed to send message: ${error.message}`);\n    } else {\n      setNewMessage('');\n      setImage(null);\n      setCooldown(20);\n    }\n  };\n\n  const calculateTopList = (messages) => {\n    const userMessageCount = new Map();\n    \n    messages.forEach((msg) => {\n      if (msg.text && msg.text.trim() !== '') {\n        userMessageCount.set(msg.sender, (userMessageCount.get(msg.sender) || 0) + 1);\n      }\n    });\n    \n    const sortedTopList = Array.from(userMessageCount.entries()).sort((a, b) => b[1] - a[1]);\n    setTopList(sortedTopList);\n    \n    const top10 = sortedTopList.slice(0, 25).map(([user]) => user);\n    setTop10Addresses(top10);\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const getSenderName = (sender) => {\n    if (!sender) {\n      return 'Unknown';\n    }\n    \n    if (sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1') {\n      return 'Admin';\n    }\n    \n    return names[sender] || `${sender.substring(0, 5)}...${sender.substring(sender.length - 5)}`;\n  };\n  \n  const getSenderStyle = (sender) => {\n    if (sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1') {\n      return { color: 'gold' };\n    }\n    const index = topList.findIndex(([user]) => user === sender);\n    if (index >= 0) {\n      if (index < 25) {\n        return { color: '#ffdc73' };\n      }\n      if (index < 100) {\n        return { color: '#E5E4E2' };\n      }\n      if (index < 250) {\n        return { color: '#cd7f32' };\n      }\n    }\n    return { color: '#fff' };\n  };\n\n  const getSenderImage = (sender) => {\n    const userNumber = userNumbers[sender];\n    \n    if (userNumber) {\n      let formattedNumber;\n  \n      if (userNumber < 10) {\n        // Kétjegyűre formázzuk, ha a szám kisebb, mint 10\n        formattedNumber = userNumber.toString().padStart(2, '0');\n      } else {\n        // Háromjegyűre formázzuk, ha a szám 10 vagy nagyobb\n        formattedNumber = userNumber.toString().padStart(3, '0');\n      }\n  \n      return `images/pixel/${formattedNumber}.jpg`;\n    }\n  \n    return 'images/pixel/200.png';  // Alapértelmezett kép, ha nincs szám\n  };\n  \n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp); // Eredeti UTC idő\n    const timeString = date.toLocaleTimeString(navigator.language, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false,\n    });\n    const dateString = date.toLocaleDateString(navigator.language, {\n      month: 'long',     // Hónap neve\n      day: 'numeric',    // Nap\n    });\n    return `${timeString}, ${dateString}`;\n  };\n  \n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentItems = topList.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(topList.length / itemsPerPage);\n\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxPageNumbers = 3;\n    const startPage = currentPage;\n\n    for (let i = 0; i < maxPageNumbers && startPage + i <= totalPages; i++) {\n      pageNumbers.push(startPage + i);\n    }\n\n    return pageNumbers;\n  };\n  \n  const getActiveIndex = (pathname) => {\n    if (\n      pathname.includes('/lockedstaking/all') ||\n      pathname.includes('/lockedstaking/history')\n    ) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const filteredTopList = topList.filter(([user]) => {\n    if (!searchQuery) return true;\n    const userName = getSenderName(user);\n    return userName.toLowerCase().includes(searchQuery.toLowerCase()) || user.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n\n  const filteredMessages = messages.filter((msg) =>\n    msg.text && msg.text.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <Container>\n  \n                    <FarmsPoolsRowLoader />\n          <Title>VizslaChat</Title>\n          <Flex alignItems=\"center\" justifyContent=\"center\" >\n            <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n              <ButtonMenuItem id=\"swap-nav-link\" to=\"/chat\" as={Link}>\n                {t('Public')}\n              </ButtonMenuItem>\n              <ButtonMenuItem id=\"swap-nav-link\" to=\"/privatechat\" as={Link} mt=\"4px\">\n                {t('Private')}\n              </ButtonMenuItem> \n              <ButtonMenuItem id=\"swap-nav-link\" to=\"/settings\" as={Link} mt=\"4px\">\n                {t('Settings')}\n              </ButtonMenuItem> \n            </ButtonMenu>\n          </Flex>\n          {account ? (\n        <>\n         <ChatBox ref={chatBoxRef} onScroll={handleScroll}>\n      {filteredMessages.slice(-displayedMessages).map((msg) => (\n        <div key={msg.id} style={styles.messageContainer}>\n          <img src={getSenderImage(msg.sender)} alt=\"sender\" style={styles.avatar} />\n          <div style={styles.message}>\n            <b style={getSenderStyle(msg.sender)}>{getSenderName(msg.sender)}:</b> {msg.text}\n            {msg.image && <img src={msg.image} alt=\"sent\" style={styles.sentImage} />}\n            <span style={styles.timestamp}>{formatTimestamp(msg.timestamp)}</span>\n          </div>\n        </div>\n      ))}\n      {giftBalance > 199 && (\n        <Flex alignItems=\"left\" justifyContent=\"left\">\n          <Button variant=\"gold\" onClick={collectTokens}>\n            <Flex flexDirection=\"column\">\n              <Text>Collect: {giftBalance} VIZSLASWAP 🎉</Text>\n              <Text fontSize=\"11px\" color=\"gray.500\">\n                Only for users with a profile picture\n              </Text>\n            </Flex>\n          </Button>\n        </Flex>\n      )}\n    </ChatBox>\n  \n          <div style={styles.inputRow}>\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n              <Input\n                type=\"text\"\n                value={isSearching ? searchQuery : newMessage}\n                onChange={isSearching ? handleSearchInputChange : (e) => setNewMessage(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && !isSearching && cooldown === 0) {\n                    handleSend();\n                  }\n                }}\n                style={styles.input}\n                placeholder={isSearching ? 'Search in chatbox...' : (cooldown > 0 ? `Cooldown: ${cooldown}s` : 'Type a message')}\n                disabled={cooldown > 0 && !isSearching}\n              />\n              <Button onClick={handleSend} style={styles.sendButton} disabled={cooldown > 0}>\n                Send\n              </Button>\n              <Button onClick={() => setEmojiPickerVisible(!emojiPickerVisible)} style={styles.emojiButton}>\n                😊\n              </Button>\n              <Button onClick={toggleSearchMode} style={styles.searchButton}>\n                {isSearching ? 'X' : '🔍'}\n              </Button>\n              <Button \n                onClick={() => fileInputRef.current.click()} \n                style={styles.fileButton}>\n                📤\n              </Button>\n            </Flex>\n  \n            {image && (\n  <div style={styles.previewContainer}> \n    <Text style={styles.previewText}>Image selected:</Text>\n    <img src={image} alt=\"Preview\" style={styles.previewImage} />\n    <Button onClick={() => setImage(null)} style={styles.deleteButton}>\n      ❌\n    </Button>\n  </div>\n)}\n\n          </div>\n  \n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleImageChange}\n          />\n\n          {emojiPickerVisible && (\n            <EmojiPicker \n              setNewMessage={setNewMessage} \n              newMessage={newMessage} \n            />\n          )}\n          <Flex alignItems=\"right\" justifyContent=\"right\">\n            <Gift />\n          </Flex>\n          <Flex alignItems=\"right\" justifyContent=\"right\">\n            {lastCollector && lastCollectedAmount && (\n              <div style={styles.lastCollectedInfo}>\n                <Text bold fontSize='13px'>Last gift collected by:</Text>\n                <Text bold fontSize='13px'>{lastCollector}</Text>\n                <Text bold fontSize='13px'>Amount: {lastCollectedAmount} VIZSLASWAP</Text>\n              </div>\n            )}\n          </Flex>\n          <div style={styles.topListBox}>\n    <TopListTitle onClick={toggleTopList}>\n        {isTopListVisible ? 'Hide Top List' : 'Show Top List'}\n    </TopListTitle>\n\n    {isTopListVisible && (\n        <>\n            <Input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                style={styles.input}\n                placeholder=\"Search by name or address\"\n            />\n            <ul style={styles.topList}>\n                {filteredTopList.slice(startIndex, endIndex).map(([user, count], index) => (\n                    <li key={user} style={getSenderStyle(user)}>\n                        <img src={getSenderImage(user)} alt=\"position\" style={styles.topListImage} />\n                        {startIndex + index + 1}. {getSenderName(user)}\n                        <br />\n                        {user}: {count} messages\n                    </li>\n                ))}\n            </ul>\n            <div>\n                {currentPage > 1 && (\n                    <Button onClick={() => handlePageChange(currentPage - 1)} style={styles.paginationButton}>\n                        Previous\n                    </Button>\n                )}\n                {getPageNumbers().map((pageNumber) => (\n                    <Button\n                        key={pageNumber}\n                        onClick={() => handlePageChange(pageNumber)}\n                        style={styles.paginationButton}\n                    >\n                        {pageNumber}\n                    </Button>\n                ))}\n                {currentPage < totalPages && (\n                    <Button onClick={() => handlePageChange(currentPage + 1)} style={styles.paginationButton}>\n                        Next\n                    </Button>\n                )}\n            </div>\n        </>\n    )}\n</div>\n        </>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}