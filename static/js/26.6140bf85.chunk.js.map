{"version":3,"sources":["state/burn/hooks3.ts","views/RemoveLiquidity2/index.tsx","components/Links/index.tsx","hooks/useDebouncedChangeHandler.ts"],"names":["useBurnState","useSelector","state","burn","BorderCard","styled","div","theme","colors","cardBorder","RemoveLiquidity2","history","useHistory","useParams","currencyIdA","currencyIdB","currencyA","useCurrency","undefined","currencyB","useActiveWeb3React","account","chainId","library","useMemo","wrappedCurrency","tokenA","tokenB","t","useTranslation","independentField","typedValue","usePair","pair","relevantTokenBalances","useTokenBalances","liquidityToken","userLiquidity","address","tokens","Field","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","useTotalSupply","liquidityValueA","JSBI","greaterThanOrEqual","raw","TokenAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","Percent","LIQUIDITY_PERCENT","independentAmount","tryParseAmount","greaterThan","liquidityValue","error","parsedAmounts","token","multiply","quotient","useDerivedBurnInfo","_onUserInput","dispatch","useDispatch","onUserInput","useCallback","field","typeInput","useBurnActionHandlers","isValid","useState","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","useTransactionDeadline","useUserSlippageTolerance","allowedSlippage","formattedAmounts","equalTo","lessThan","toFixed","toSignificant","atMaxAmount","pairContract","usePairContract","signatureData","setSignatureData","useApproveCallback","ROUTER_ADDRESS2","approval","approveCallback","a","Error","liquidityAmount","nonces","nonce","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","value","toString","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","then","splitSignature","signature","v","r","s","catch","err","code","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","useTransactionAdder","onRemove","currencyAmountA","currencyAmountB","router","getRouterContract2","calculateSlippageAmount","amountsMin","currencyBIsETH","ETHER","oneCurrencyIsETH","ApprovalState","APPROVED","methodNames","args","Promise","all","map","methodName","estimateGas","calculateGasMargin","console","safeGasEstimates","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","isBigNumber","gasLimit","response","summary","symbol","hash","modalHeader","gap","Row","align","fontSize","currency","size","ml","width","small","textAlign","pt","slippage","modalBottom","assetA","assetB","currency0","currency1","margin","priceOf","disabled","onClick","pendingText","amountA","symbolA","amountB","symbolB","liquidityPercentChangeCallback","oneCurrencyIsWETH","Boolean","currencyEquals","WETH","handleSelectCurrencyA","currencyId","push","handleSelectCurrencyB","handleDismissConfirmation","useDebouncedChangeHandler","Number","parseInt","innerLiquidityPercentage","setInnerLiquidityPercentage","useModal","title","customOnDismiss","content","topContent","bottomContent","onPresentRemoveLiquidity","App","backTo","subtitle","noConfig","variant","scale","bold","mb","style","lineHeight","min","max","onValueChanged","Math","ceil","flexWrap","justifyContent","Column","color","my","textTransform","id","to","onMax","showMaxButton","disableCurrencySelect","onCurrencySelect","hideBalance","label","marginTop","position","mt","NOT_APPROVED","mr","PENDING","Dots","ConnectWalletButton","minWidth","maxWidth","showUnwrapped","StyledInternalLink","Link","primary","onChange","debouncedMs","inner","setInner","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect"],"mappings":"whBAaO,SAASA,IACd,OAAOC,aAAwC,SAACC,GAAD,OAAWA,EAAMC,Q,+BC0B5DC,EAAaC,IAAOC,IAAV,gGACM,qBAAGC,MAAkBC,OAAOC,cAKnC,SAASC,IAAoB,IAAD,gDACnCC,GAAUC,cAChB,GAAqCC,cAA7BC,GAAR,GAAQA,YAAaC,GAArB,GAAqBA,YACdC,GAAP,UAAgCC,YAAYH,WAA5C,aAA4DI,EAA1CC,GAAlB,UAAuEF,YAAYF,WAAnF,aAAmGG,EACnG,GAAsCE,cAA9BC,GAAR,GAAQA,QAASC,GAAjB,GAAiBA,QAASC,GAA1B,GAA0BA,QAC1B,GAAyBC,mBACvB,iBAAM,CAACC,YAAgBT,GAAWM,IAAUG,YAAgBN,GAAWG,OACvE,CAACN,GAAWG,GAAWG,KAFzB,qBAAOI,GAAP,MAAeC,GAAf,MAKQC,GAAMC,cAAND,EAGR,GAAyC5B,IAAjC8B,GAAR,GAAQA,iBAAkBC,GAA1B,GAA0BA,WAC1B,GD3CK,SACLf,EACAG,GAUC,IAAD,UACA,EAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAEjB,EAAyCtB,IAAjC8B,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,WAG1B,EAAiBC,YAAQhB,EAAWG,GAA3Bc,EAAT,oBAGMC,EAAwBC,YAAgB,OAACd,QAAD,IAACA,SAAWH,EAAW,QAACe,QAAD,IAACA,OAAD,EAACA,EAAMG,iBACtEC,EAAsC,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAqB,iBAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAMG,sBAAT,aAAG,EAAsBE,eAAzB,QAAoC,IAExG,EAAyB,CAACb,YAAgBT,EAAWM,GAAUG,YAAgBN,EAAWG,IAAnFI,EAAP,KAAeC,EAAf,KACMY,GAAM,mBACTC,IAAMC,WAAaf,GADV,cAETc,IAAME,WAAaf,GAFV,cAGTa,IAAMG,UAHG,OAGSV,QAHT,IAGSA,OAHT,EAGSA,EAAMG,gBAHf,GAONQ,EAAcC,YAAc,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAMG,gBACnCU,EACJb,GACAW,GACAP,GACAX,GAEAqB,IAAKC,mBAAmBJ,EAAYK,IAAKZ,EAAcY,KACnD,IAAIC,IAAYxB,EAAQO,EAAKkB,kBAAkBzB,EAAQkB,EAAaP,GAAe,GAAOY,UAC1F/B,EACAkC,EACJnB,GACAW,GACAP,GACAV,GAEAoB,IAAKC,mBAAmBJ,EAAYK,IAAKZ,EAAcY,KACnD,IAAIC,IAAYvB,EAAQM,EAAKkB,kBAAkBxB,EAAQiB,EAAaP,GAAe,GAAOY,UAC1F/B,EACAmC,GAAuF,mBAC1Fb,IAAMC,WAAaK,GADuE,cAE1FN,IAAME,WAAaU,GAFuE,GAKzFE,EAA2B,IAAIC,IAAQ,IAAK,OAEhD,GAAIzB,IAAqBU,IAAMgB,kBAC7BF,EAAkB,IAAIC,IAAQxB,EAAY,YAGvC,GAAID,IAAqBU,IAAMG,WAClC,UAAIV,QAAJ,IAAIA,OAAJ,EAAIA,EAAMG,eAAgB,CACxB,IAAMqB,EAAoBC,YAAe3B,EAAYE,EAAKG,gBACtDqB,GAAqBpB,IAAkBoB,EAAkBE,YAAYtB,KACvEiB,EAAkB,IAAIC,IAAQE,EAAkBR,IAAKZ,EAAcY,YAKpE,GAAIV,EAAOT,GAAmB,CACjC,IAAM2B,EAAoBC,YAAe3B,EAAYQ,EAAOT,IACtD8B,EAAiBP,EAAgBvB,GACnC2B,GAAqBG,IAAmBH,EAAkBE,YAAYC,KACxEN,EAAkB,IAAIC,IAAQE,EAAkBR,IAAKW,EAAeX,MAIxE,IAqBIY,EAKyG,EA1BvGC,GAKL,mBACEtB,IAAMgB,kBAAoBF,GAD5B,cAEEd,IAAMG,UACLN,GAAiBiB,GAAmBA,EAAgBK,YAAY,KAC5D,IAAIT,IAAYb,EAAc0B,MAAOT,EAAgBU,SAAS3B,EAAcY,KAAKgB,eACjF/C,GALP,cAMEsB,IAAMC,WACLf,GAAU4B,GAAmBA,EAAgBK,YAAY,MAAQb,EAC7D,IAAII,IAAYxB,EAAQ4B,EAAgBU,SAASlB,EAAgBG,KAAKgB,eACtE/C,GATP,cAUEsB,IAAME,WACLf,GAAU2B,GAAmBA,EAAgBK,YAAY,MAAQP,EAC7D,IAAIF,IAAYvB,EAAQ2B,EAAgBU,SAASZ,EAAgBH,KAAKgB,eACtE/C,GAbP,GAyBD,OARKG,IACHwC,EAAQ,kBAGLC,EAActB,IAAMG,YAAemB,EAActB,IAAMC,aAAgBqB,EAActB,IAAME,cAC9FmB,EAAK,UAAGA,SAAH,QAAY,mBAGZ,CAAE5B,OAAM6B,gBAAeD,SClESK,CAAkB,OAAClD,SAAD,IAACA,WAAaE,EAAd,OAAyBC,SAAzB,IAAyBA,WAAaD,GAAvFe,GAAR,GAAQA,KAAM6B,GAAd,GAAcA,cAAeD,GAA7B,GAA6BA,MACRM,GDoEhB,WAGL,IAAMC,EAAWC,cASjB,MAAO,CACLC,YARkBC,uBAClB,SAACC,EAAczC,GACbqC,EAASK,YAAU,CAAED,QAAOzC,kBAE9B,CAACqC,KC7EmCM,GAA9BJ,YACFK,IAAWd,GAGjB,GAAwCe,oBAAkB,GAA1D,qBAAOC,GAAP,MAAqBC,GAArB,MACA,GAA0CF,oBAAS,GAAnD,qBAAOG,GAAP,MAAsBC,GAAtB,MAGA,GAA4BJ,mBAAiB,IAA7C,qBAAOK,GAAP,MAAeC,GAAf,MACMC,GAAWC,cACjB,GAA0BC,cAAnBC,GAAP,qBAEMC,IAAgB,mBACnB/C,IAAMgB,kBAAoBM,GAActB,IAAMgB,mBAAmBgC,QAAQ,KACtE,IACA1B,GAActB,IAAMgB,mBAAmBiC,SAAS,IAAIlC,IAAQ,IAAK,QACjE,KACAO,GAActB,IAAMgB,mBAAmBkC,QAAQ,IAL/B,cAMnBlD,IAAMG,UACLb,KAAqBU,IAAMG,UAAYZ,GAAvC,oBAAoD+B,GAActB,IAAMG,kBAAxE,aAAoD,EAAgCgD,cAAc,UAAlG,QAAwG,IAPtF,cAQnBnD,IAAMC,WACLX,KAAqBU,IAAMC,WAAaV,GAAxC,oBAAqD+B,GAActB,IAAMC,mBAAzE,aAAqD,EAAiCkD,cAAc,UAApG,QAA0G,IATxF,cAUnBnD,IAAME,WACLZ,KAAqBU,IAAME,WAAaX,GAAxC,oBAAqD+B,GAActB,IAAME,mBAAzE,aAAqD,EAAiCiD,cAAc,UAApG,QAA0G,IAXxF,GAchBC,GAAW,WAAG9B,GAActB,IAAMgB,0BAAvB,cAAG,GAAwCgC,QAAQ,IAAIjC,IAAQ,MAG1EsC,GAAgCC,YAAe,OAAC7D,SAAD,IAACA,IAAD,WAACA,GAAMG,sBAAP,cAAC,GAAsBE,SAG5E,GAA0CsC,mBAAuE,MAAjH,qBAAOmB,GAAP,MAAsBC,GAAtB,MACA,GAAoCC,YAAmBnC,GAActB,IAAMG,WAAYuD,KAAvF,qBAAOC,GAAP,MAAiBC,GAAjB,MAhDyC,8CAkDzC,wCAAAC,EAAA,yDACOR,IAAiB5D,IAASV,IAAY4D,GAD7C,sBAC6D,IAAImB,MAAM,wBADvE,UAEQC,EAAkBzC,GAActB,IAAMG,WAF9C,sBAG8B,IAAI2D,MAAM,4BAHxC,uBAMsBT,GAAaW,OAAOnF,IAN1C,OAMQoF,EANR,OAQQC,EAAe,CACnB,CAAEC,KAAM,OAAQC,KAAM,UACtB,CAAED,KAAM,UAAWC,KAAM,UACzB,CAAED,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,oBAAqBC,KAAM,YAE/BC,EAAS,CACbF,KAAM,qBACNG,QAAS,IACTxF,WACAyF,kBAAmB9E,GAAKG,eAAeE,SAEnC0E,EAAS,CACb,CAAEL,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,WAAYC,KAAM,YAEtBK,EAAU,CACdC,MAAO7F,GACP8F,QAASjB,IACTkB,MAAOb,EAAgBtD,IAAIoE,WAC3BZ,MAAOA,EAAMa,cACbnC,SAAUA,GAASoC,YAEfC,EAAOC,KAAKC,UAAU,CAC1BC,MAAO,CACLjB,eACAM,UAEFH,SACAe,YAAa,SACbX,YAGF1F,GACGsG,KAAK,uBAAwB,CAACxG,GAASmG,IACvCM,KAAKC,kBACLD,MAAK,SAACE,GACLhC,GAAiB,CACfiC,EAAGD,EAAUC,EACbC,EAAGF,EAAUE,EACbC,EAAGH,EAAUG,EACbhD,SAAUA,GAASoC,gBAGtBa,OAAM,SAACC,GAEY,QAAX,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKC,OACPlC,QA1DR,6CAlDyC,sBAkHzC,IAAM9B,GAAcC,uBAClB,SAACC,EAAc4C,GAEb,OADApB,GAAiB,MACV7B,GAAaK,EAAO4C,KAE7B,CAACjD,KAGGoE,GAAmBhE,uBAAY,SAAC6C,GAAD,OAAyB9C,GAAY9B,IAAMG,UAAWyE,KAAQ,CAAC9C,KAC9FkE,GAAmBjE,uBAAY,SAAC6C,GAAD,OAAyB9C,GAAY9B,IAAMC,WAAY2E,KAAQ,CAAC9C,KAC/FmE,GAAmBlE,uBAAY,SAAC6C,GAAD,OAAyB9C,GAAY9B,IAAME,WAAY0E,KAAQ,CAAC9C,KAG/FoE,GAAiBC,cA/HkB,SAgI1BC,KAhI0B,8EAgIzC,sDAAAvC,EAAA,yDACO/E,IAAYC,IAAYF,IAAY8D,GAD3C,sBAC2D,IAAImB,MAAM,wBADrE,UAE8BuC,EAAyD/E,GAA5EtB,IAAMC,YAAkDqG,EAAoBhF,GAAvCtB,IAAME,YAC/CmG,GAAoBC,EAH3B,sBAIU,IAAIxC,MAAM,4BAJpB,UAMQyC,EAASC,YAAmB1H,GAASC,GAASF,IANtD,mBASKmB,IAAMC,WAAawG,YAAwBJ,EAAiBvD,IAAiB,IATlF,cAUK9C,IAAME,WAAauG,YAAwBH,EAAiBxD,IAAiB,IAF1E4D,EARR,EAaOlI,IAAcG,GAbrB,sBAasC,IAAImF,MAAM,kBAbhD,UAcQC,EAAkBzC,GAActB,IAAMG,WAd9C,uBAe8B,IAAI2D,MAAM,4BAfxC,WAiBQ6C,EAAiBhI,KAAciI,IAC/BC,EAAmBrI,KAAcoI,KAASD,EAE3CzH,IAAWC,GApBlB,uBAoBgC,IAAI2E,MAAM,kBApB1C,WAyBMH,KAAamD,IAAcC,SAzBjC,iBA2BQF,GACFG,EAAc,CAAC,qBAAsB,mDACrCC,EAAO,CACLN,EAAiBzH,GAAOY,QAAUX,GAAOW,QACzCiE,EAAgBtD,IAAIoE,WACpB6B,EAAWC,EAAiB3G,IAAMC,WAAaD,IAAME,YAAY2E,WACjE6B,EAAWC,EAAiB3G,IAAME,WAAaF,IAAMC,YAAY4E,WACjEhG,GACA8D,GAASmC,iBAKXkC,EAAc,CAAC,mBACfC,EAAO,CACL/H,GAAOY,QACPX,GAAOW,QACPiE,EAAgBtD,IAAIoE,WACpB6B,EAAW1G,IAAMC,YAAY4E,WAC7B6B,EAAW1G,IAAME,YAAY2E,WAC7BhG,GACA8D,GAASmC,gBAhDjB,2BAqD6B,OAAlBvB,GArDX,iBAuDQsD,GACFG,EAAc,CAAC,+BAAgC,6DAC/CC,EAAO,CACLN,EAAiBzH,GAAOY,QAAUX,GAAOW,QACzCiE,EAAgBtD,IAAIoE,WACpB6B,EAAWC,EAAiB3G,IAAMC,WAAaD,IAAME,YAAY2E,WACjE6B,EAAWC,EAAiB3G,IAAME,WAAaF,IAAMC,YAAY4E,WACjEhG,GACA0E,GAAcZ,UACd,EACAY,GAAckC,EACdlC,GAAcmC,EACdnC,GAAcoC,KAKhBqB,EAAc,CAAC,6BACfC,EAAO,CACL/H,GAAOY,QACPX,GAAOW,QACPiE,EAAgBtD,IAAIoE,WACpB6B,EAAW1G,IAAMC,YAAY4E,WAC7B6B,EAAW1G,IAAME,YAAY2E,WAC7BhG,GACA0E,GAAcZ,UACd,EACAY,GAAckC,EACdlC,GAAcmC,EACdnC,GAAcoC,IApFtB,8BAwFU,IAAI7B,MAAM,kFAxFpB,yBA2F4DoD,QAAQC,IAChEH,EAAYI,KAAI,SAACC,GAAD,aACd,EAAAd,EAAOe,aAAYD,GAAnB,oBAAkCJ,IAC/B3B,KAAKiC,KACL3B,OAAM,SAACC,GACN2B,QAAQnG,MAAR,qBAAoCgG,EAAYJ,EAAMpB,UAhGhE,WA2FQ4B,EA3FR,QA2GuC,KAL/BC,EAA8BD,EAAiBE,WAAU,SAACC,GAAD,OAC7DC,IAAUC,YAAYF,OAvG1B,iBA4GIJ,QAAQnG,MAAM,wDA5GlB,+BA8GUgG,EAAaL,EAAYU,GACzBE,EAAkBH,EAAiBC,GAEzClF,IAAiB,GAjHrB,UAkHU+D,EAAOc,GAAP,MAAAd,EAAM,YAAgBU,GAAhB,QAAsB,CAChCc,SAAUH,MAETtC,MAAK,SAAC0C,GAAmC,IAAD,IACvCxF,IAAiB,GAEjB0D,GAAe8B,EAAU,CACvBC,QAAQ,UAAD,iBAAY3G,GAActB,IAAMC,mBAAhC,aAAY,EAAiCkD,cAAc,GAA3D,mBACL3E,SADK,IACLA,QADK,EACLA,GAAW0J,OADN,0BAEC5G,GAActB,IAAME,mBAFrB,aAEC,EAAiCiD,cAAc,GAFhD,mBAEsDxE,SAFtD,IAEsDA,QAFtD,EAEsDA,GAAWuJ,UAG1ExF,GAAUsF,EAASG,SAEpBvC,OAAM,SAACC,GACNrD,IAAiB,GAEjBgF,QAAQnG,MAAMwE,MAnItB,6CAhIyC,sBAwQzC,SAASuC,KAAe,IAAD,IACrB,OACE,eAAC,IAAD,CAAYC,IAAI,KAAhB,UACE,eAACC,EAAA,EAAD,CAAYC,MAAM,WAAlB,UACE,cAAC,KAAD,CAAMC,SAAS,OAAf,mBAAuBlH,GAActB,IAAMC,mBAA3C,aAAuB,EAAiCkD,cAAc,KACtE,eAACmF,EAAA,EAAD,CAAUD,IAAI,MAAd,UACE,cAAC,IAAD,CAAcI,SAAUjK,GAAWkK,KAAK,SACxC,cAAC,KAAD,CAAMF,SAAS,OAAOG,GAAG,OAAzB,gBACGnK,SADH,IACGA,QADH,EACGA,GAAW0J,eAIlB,cAACI,EAAA,EAAD,UACE,cAAC,IAAD,CAASM,MAAM,WAEjB,eAACN,EAAA,EAAD,CAAYC,MAAM,WAAlB,UACE,cAAC,KAAD,CAAMC,SAAS,OAAf,mBAAuBlH,GAActB,IAAME,mBAA3C,aAAuB,EAAiCiD,cAAc,KACtE,eAACmF,EAAA,EAAD,CAAUD,IAAI,MAAd,UACE,cAAC,IAAD,CAAcI,SAAU9J,GAAW+J,KAAK,SACxC,cAAC,KAAD,CAAMF,SAAS,OAAOG,GAAG,OAAzB,gBACGhK,SADH,IACGA,QADH,EACGA,GAAWuJ,eAKlB,cAAC,KAAD,CAAMW,OAAK,EAACC,UAAU,OAAOC,GAAG,OAAhC,SACG3J,GAAE,mGAAoG,CACrG4J,SAAUlG,GAAkB,WAOtC,SAASmG,KAAe,IAAD,MACrB,OACE,qCACE,eAACX,EAAA,EAAD,WACGlJ,GAAE,2BAA4B,CAAE8J,OAAM,iBAAE1K,SAAF,IAAEA,QAAF,EAAEA,GAAW0J,cAAb,QAAuB,GAAIiB,OAAM,iBAAExK,SAAF,IAAEA,QAAF,EAAEA,GAAWuJ,cAAb,QAAuB,KAC/F,eAACI,EAAA,EAAD,WACE,cAAC,IAAD,CAAoBc,UAAW5K,GAAW6K,UAAW1K,GAAW2K,QAAM,IACtE,cAAC,KAAD,oBAAOhI,GAActB,IAAMG,kBAA3B,aAAO,EAAgCgD,cAAc,WAGxD1D,IACC,qCACE,eAAC6I,EAAA,EAAD,WACE,cAAC,KAAD,UAAOlJ,GAAE,WACT,eAAC,KAAD,uBACKZ,SADL,IACKA,QADL,EACKA,GAAW0J,OADhB,MAC2BhJ,GAASO,GAAK8J,QAAQrK,IAAQiE,cAAc,GAAK,IAD5E,WACkFxE,SADlF,IACkFA,QADlF,EACkFA,GAAWuJ,aAG/F,eAACI,EAAA,EAAD,WACE,wBACA,eAAC,KAAD,uBACK3J,SADL,IACKA,QADL,EACKA,GAAWuJ,OADhB,MAC2B/I,GAASM,GAAK8J,QAAQpK,IAAQgE,cAAc,GAAK,IAD5E,WACkF3E,SADlF,IACkFA,QADlF,EACkFA,GAAW0J,gBAKnG,cAAC,IAAD,CAAQsB,WAAY7F,KAAamD,IAAcC,UAA8B,OAAlBxD,IAAyBkG,QAASrD,GAA7F,SACGhH,GAAE,gBAMX,IAAMsK,GAActK,GAAE,uDAAwD,CAC5EuK,QAAO,sBAAErI,GAActB,IAAMC,mBAAtB,cAAE,GAAiCkD,cAAc,UAAjD,UAAuD,GAC9DyG,QAAO,kBAAEpL,SAAF,IAAEA,QAAF,EAAEA,GAAW0J,cAAb,UAAuB,GAC9B2B,QAAO,sBAAEvI,GAActB,IAAME,mBAAtB,cAAE,GAAiCiD,cAAc,UAAjD,UAAuD,GAC9D2G,QAAO,kBAAEnL,SAAF,IAAEA,QAAF,EAAEA,GAAWuJ,cAAb,UAAuB,KAG1B6B,GAAiChI,uBACrC,SAAC6C,GACC9C,GAAY9B,IAAMgB,kBAAmB4D,EAAMC,cAE7C,CAAC/C,KAGG+E,GAAmBrI,KAAcoI,KAASjI,KAAciI,IACxDoD,GAAoBC,QACxBnL,KACIN,IAAa0L,YAAeC,IAAKrL,IAAUN,KAC1CG,IAAauL,YAAeC,IAAKrL,IAAUH,MAG5CyL,GAAwBrI,uBAC5B,SAAC0G,GACKlK,IAAe8L,YAAW5B,KAAclK,GAC1CJ,GAAQmM,KAAR,qBAA2BD,YAAW5B,GAAtC,YAAmDnK,KAEnDH,GAAQmM,KAAR,qBAA2BD,YAAW5B,GAAtC,YAAmDlK,OAGvD,CAACD,GAAaC,GAAaJ,KAEvBoM,GAAwBxI,uBAC5B,SAAC0G,GACKnK,IAAe+L,YAAW5B,KAAcnK,GAC1CH,GAAQmM,KAAR,qBAA2B/L,GAA3B,YAA0C8L,YAAW5B,KAErDtK,GAAQmM,KAAR,qBAA2BhM,GAA3B,YAA0C+L,YAAW5B,OAGzD,CAACnK,GAAaC,GAAaJ,KAGvBqM,GAA4BzI,uBAAY,WAC5CyB,GAAiB,MAEbf,IACFX,GAAY9B,IAAMgB,kBAAmB,KAEvC0B,GAAU,MACT,CAACZ,GAAaW,KAEjB,GAAgEgI,YAC9DC,OAAOC,SAASrJ,GAActB,IAAMgB,mBAAmBkC,QAAQ,IAC/D6G,IAFF,qBAAOa,GAAP,MAAiCC,GAAjC,MAKA,GAAmCC,aACjC,cAAC,IAAD,CACEC,MAAO3L,GAAE,oBACT4L,gBAAiBR,GACjBjI,cAAeA,GACf4F,KAAM1F,IAAU,GAChBwI,QAAS,kBAAM,cAAC,IAAD,CAA0BC,WAAY9C,GAAa+C,cAAelC,MACjFS,YAAaA,MAEf,GACA,EACA,wBAXK0B,GAAP,qBAcA,OACE,eAAC,IAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEC,OAAO,SACPP,MAAO3L,GAAE,qCAAsC,CAC7C8J,OAAM,kBAAE1K,SAAF,IAAEA,QAAF,EAAEA,GAAW0J,cAAb,UAAuB,GAC7BiB,OAAM,kBAAExK,SAAF,IAAEA,QAAF,EAAEA,GAAWuJ,cAAb,UAAuB,KAE/BqD,SAAQ,4BAAgB/M,SAAhB,IAAgBA,QAAhB,EAAgBA,GAAW0J,OAA3B,uBAAyCvJ,SAAzC,IAAyCA,QAAzC,EAAyCA,GAAWuJ,QAC5DsD,UAAQ,IAGV,eAAC,IAAD,WACE,eAAC,IAAD,CAAYnD,IAAI,OAAhB,UACE,eAACC,EAAA,EAAD,WACE,cAAC,KAAD,UAAOlJ,GAAE,YACT,cAAC,IAAD,CAAQqM,QAAQ,OAAOC,MAAM,KAAKjC,QAAS,kBAAMnH,IAAiBD,KAAlE,SACkBjD,GAAfiD,GAAiB,SAAc,kBAGlCA,IACA,eAACzE,EAAD,WACE,eAAC,KAAD,CAAM4K,SAAS,OAAOmD,MAAI,EAACC,GAAG,OAAOC,MAAO,CAAEC,WAAY,GAA1D,UACG/I,GAAiB/C,IAAMgB,mBAD1B,OAGA,cAAC,KAAD,CACEmD,KAAK,YACL4H,IAAK,EACLC,IAAK,IACLpH,MAAOgG,GACPqB,eAAgB,SAACrH,GAAD,OAAWiG,GAA4BqB,KAAKC,KAAKvH,KACjEgH,GAAG,SAEL,eAAC,IAAD,CAAMQ,SAAS,OAAOC,eAAe,eAArC,UACE,cAAC,IAAD,CAAQZ,QAAQ,WAAWC,MAAM,KAAKjC,QAAS,kBAAM3H,GAAY9B,IAAMgB,kBAAmB,OAA1F,iBAGA,cAAC,IAAD,CAAQyK,QAAQ,WAAWC,MAAM,KAAKjC,QAAS,kBAAM3H,GAAY9B,IAAMgB,kBAAmB,OAA1F,iBAGA,cAAC,IAAD,CAAQyK,QAAQ,WAAWC,MAAM,KAAKjC,QAAS,kBAAM3H,GAAY9B,IAAMgB,kBAAmB,OAA1F,iBAGA,cAAC,IAAD,CAAQyK,QAAQ,WAAWC,MAAM,KAAKjC,QAAS,kBAAM3H,GAAY9B,IAAMgB,kBAAmB,QAA1F,2BAONqB,IACA,qCACE,cAACiK,EAAA,EAAD,UACE,cAAC,IAAD,CAAeC,MAAM,aAAa3D,MAAM,OAAO4D,GAAG,WAEpD,eAAC,IAAD,CAAYnE,IAAI,OAAhB,UACE,cAAC,KAAD,CAAMsD,MAAI,EAACY,MAAM,YAAY/D,SAAS,OAAOiE,cAAc,YAA3D,SACGrN,GAAE,sBAEL,eAAC,IAAD,WACE,eAAC,IAAD,CAAMiN,eAAe,gBAAgBT,GAAG,MAAxC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnD,SAAUjK,KACxB,cAAC,KAAD,CAAMqK,OAAK,EAAC0D,MAAM,aAAaG,GAAG,iCAAiC/D,GAAG,MAAtE,gBACGnK,SADH,IACGA,QADH,EACGA,GAAW0J,YAGhB,cAAC,KAAD,CAAMW,OAAK,EAAX,SAAa9F,GAAiB/C,IAAMC,aAAe,SAErD,eAAC,IAAD,CAAMoM,eAAe,gBAArB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAc5D,SAAU9J,KACxB,cAAC,KAAD,CAAMkK,OAAK,EAAC0D,MAAM,aAAaG,GAAG,iCAAiC/D,GAAG,MAAtE,gBACGhK,SADH,IACGA,QADH,EACGA,GAAWuJ,YAGhB,cAAC,KAAD,CAAMW,OAAK,EAAX,SAAa9F,GAAiB/C,IAAME,aAAe,SAEpDpB,KAAYkL,IAAqBnD,IAChC,cAACyB,EAAA,EAAD,CAAYuD,MAAO,CAAEQ,eAAgB,WAAY7D,SAAU,QAA3D,SACG3B,GACC,cAAC,IAAD,CACE8F,GAAE,qBAAgBnO,KAAcoI,IAAQuD,IAAKrL,IAASgB,QAAUxB,GAA9D,YACAK,KAAciI,IAAQuD,IAAKrL,IAASgB,QAAUvB,IAFlD,SAKGa,GAAE,kBAEH4K,GACF,cAAC,IAAD,CACE2C,GAAE,qBAAgBnO,IAAa0L,YAAe1L,GAAW2L,IAAKrL,KAAY,MAAQR,GAAhF,YACAK,IAAauL,YAAevL,GAAWwL,IAAKrL,KAAY,MAAQP,IAFpE,SAKGa,GAAE,iBAEH,OAEJ,cAMXiD,IACC,eAAC,IAAD,CAAKmK,GAAG,OAAR,UACE,cAAC,IAAD,CACE5H,MAAO7B,GAAiB/C,IAAMG,WAC9B2B,YAAaiE,GACb6G,MAAO,WACL9K,GAAY9B,IAAMgB,kBAAmB,QAEvC6L,eAAgBzJ,GAChB0J,uBAAqB,EACrBrE,SAAQ,OAAEhJ,SAAF,IAAEA,QAAF,EAAEA,GAAMG,eAChBH,KAAMA,GACNiN,GAAG,mBACHK,iBAAkB,kBAAM,QAE1B,cAACT,EAAA,EAAD,UACE,cAAC,IAAD,CAAe1D,MAAM,OAAO4D,GAAG,WAEjC,cAAC,IAAD,CACEQ,aAAW,EACXpI,MAAO7B,GAAiB/C,IAAMC,YAC9B6B,YAAakE,GACb4G,MAAO,kBAAM9K,GAAY9B,IAAMgB,kBAAmB,QAClD6L,eAAgBzJ,GAChBqF,SAAUjK,GACVyO,MAAO7N,GAAE,UACT2N,iBAAkB3C,GAClBsC,GAAG,4BAEL,cAACJ,EAAA,EAAD,UACE,cAAC,IAAD,CAAS1D,MAAM,OAAO4D,GAAG,WAE3B,cAAC,IAAD,CACEQ,aAAW,EACXpI,MAAO7B,GAAiB/C,IAAME,YAC9B4B,YAAamE,GACb2G,MAAO,kBAAM9K,GAAY9B,IAAMgB,kBAAmB,QAClD6L,eAAgBzJ,GAChBqF,SAAU9J,GACVsO,MAAO7N,GAAE,UACT2N,iBAAkBxC,GAClBmC,GAAG,+BAIRjN,IACC,eAAC,IAAD,CAAY4I,IAAI,OAAOwD,MAAO,CAAEqB,UAAW,QAA3C,UACE,cAAC,KAAD,CAAMvB,MAAI,EAACY,MAAM,YAAY/D,SAAS,OAAOiE,cAAc,YAA3D,SACGrN,GAAE,YAEL,eAAC,IAAD,WACE,eAAC,IAAD,CAAMiN,eAAe,gBAArB,UACE,eAAC,KAAD,CAAMxD,OAAK,EAAC0D,MAAM,aAAlB,sBACK/N,SADL,IACKA,QADL,EACKA,GAAW0J,OADhB,QAGA,eAAC,KAAD,CAAMW,OAAK,EAAX,UACG3J,GAASO,GAAK8J,QAAQrK,IAAQiE,cAAc,GAAK,IADpD,WAC0DxE,SAD1D,IAC0DA,QAD1D,EAC0DA,GAAWuJ,aAGvE,eAAC,IAAD,CAAMmE,eAAe,gBAArB,UACE,eAAC,KAAD,CAAMxD,OAAK,EAAC0D,MAAM,aAAlB,sBACK5N,SADL,IACKA,QADL,EACKA,GAAWuJ,OADhB,QAGA,eAAC,KAAD,CAAMW,OAAK,EAAX,UACG1J,GAASM,GAAK8J,QAAQpK,IAAQgE,cAAc,GAAK,IADpD,WAC0D3E,SAD1D,IAC0DA,QAD1D,EAC0DA,GAAW0J,mBAM7E,cAAC,IAAD,CAAKiF,SAAS,WAAWC,GAAG,OAA5B,SACIvO,GAGA,eAACyJ,EAAA,EAAD,WACE,cAAC,IAAD,CACEmD,QAAS9H,KAAamD,IAAcC,UAA8B,OAAlBxD,GAAyB,UAAY,UACrFkG,QAvkByB,4CAwkBzBD,SAAU7F,KAAamD,IAAcuG,cAAkC,OAAlB9J,GACrDqF,MAAM,OACN0E,GAAG,SALL,SAOG3J,KAAamD,IAAcyG,QAC1B,cAACC,EAAA,EAAD,UAAOpO,GAAE,cACPuE,KAAamD,IAAcC,UAA8B,OAAlBxD,GACzCnE,GAAE,WAEFA,GAAE,YAGN,cAAC,IAAD,CACEqM,SACGtJ,IAAab,GAActB,IAAMC,aAAiBqB,GAActB,IAAME,YACnE,SACA,UAENuJ,QAAS,WACP2B,MAEFxC,MAAM,OACNY,UAAWrH,IAA8B,OAAlBoB,IAA0BI,KAAamD,IAAcC,SAV9E,SAYG1F,IAASjC,GAAE,eA9BhB,cAACqO,EAAA,EAAD,YAsCPhO,GACC,cAAC,IAAD,CAAYoM,MAAO,CAAE6B,SAAU,QAAS9E,MAAO,OAAQ+E,SAAU,QAAST,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBU,cAAe5D,GAAmBvK,KAAMA,OAE7D,U,6DCtpBJoO,EAAqBhQ,YAAOiQ,IAAPjQ,CAAH,0RAGb,qBAAGE,MAAkBC,OAAO+P,WAiBxBF,O,qFChBA,SAASpD,EACtB7F,EACAoJ,GAE0B,IAD1BC,EACyB,uDADX,IAEd,EAA0B7L,oBAAY,kBAAMwC,KAA5C,mBAAOsJ,EAAP,KAAcC,EAAd,KACMC,EAAQC,mBAERC,EAAgBvM,uBACpB,SAACwM,GACCJ,EAASI,GACLH,EAAMI,SACRC,aAAaL,EAAMI,SAErBJ,EAAMI,QAAUE,YAAW,WACzBV,EAASO,GACTH,EAAMI,aAAU9P,IACfuP,KAEL,CAACA,EAAaD,IAWhB,OARAW,qBAAU,WACJP,EAAMI,UACRC,aAAaL,EAAMI,SACnBJ,EAAMI,aAAU9P,GAElByP,EAASvJ,KACR,CAACA,IAEG,CAACsJ,EAAOI","file":"static/js/26.6140bf85.chunk.js","sourcesContent":["import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from '@pancakeswap2/sdk'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { usePair } from 'hooks/usePairs3'\nimport useTotalSupply from 'hooks/useTotalSupply3'\n\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks3'\nimport { useTokenBalances } from '../wallet/hooks3'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: CurrencyAmount\n    [Field.CURRENCY_B]?: CurrencyAmount\n  }\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else if (tokens[independentField]) {\n    const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n    const liquidityValue = liquidityValues[independentField]\n    if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n      percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\n        : undefined,\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onUserInput,\n  }\n}\n","import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from '@pancakeswap2/sdk'\nimport { Button, Text, AddIcon, ArrowDownIcon, CardBody, Slider, Box, Flex, useModal } from '@pancakeswap/uikit'\nimport { useHistory, useParams } from 'react-router'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { MinimalPositionCard } from '../../components/PositionCard3'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\nimport { LightGreyCard } from '../../components/Card'\n\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency } from '../../hooks/Tokens3'\nimport { usePairContract } from '../../hooks/useContract3'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline3'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks3'\nimport StyledInternalLink from '../../components/Links'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index3'\nimport { currencyId } from '../../utils/currencyId3'\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency3'\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback3'\nimport Dots from '../../components/Loader/Dots'\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks3'\n\nimport { Field } from '../../state/burn/actions'\nimport { useUserSlippageTolerance } from '../../state/user/hooks/index3'\nimport Page from '../Page2'\n\nconst BorderCard = styled.div`\n  border: solid 1px ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n  padding: 16px;\n`\n\nexport default function RemoveLiquidity2() {\n  const history = useHistory()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const [tokenA, tokenB] = useMemo(\n    () => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)],\n    [currencyA, currencyB, chainId],\n  )\n\n  const { t } = useTranslation()\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const deadline = useTransactionDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS2)\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ]\n    const domain = {\n      name: 'ApeSwapFinance LPs',\n      version: '1',\n      chainId,\n      verifyingContract: pair.liquidityToken.address,\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' },\n    ]\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS2,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber(),\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit,\n      },\n      domain,\n      primaryType: 'Permit',\n      message,\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then((signature) => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber(),\n        })\n      })\n      .catch((err) => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (err?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, value: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, value)\n    },\n    [_onUserInput],\n  )\n\n  const onLiquidityInput = useCallback((value: string): void => onUserInput(Field.LIQUIDITY, value), [onUserInput])\n  const onCurrencyAInput = useCallback((value: string): void => onUserInput(Field.CURRENCY_A, value), [onUserInput])\n  const onCurrencyBInput = useCallback((value: string): void => onUserInput(Field.CURRENCY_B, value), [onUserInput])\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract2(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB === ETHER\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[]\n    let args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((err) => {\n            console.error(`estimateGas failed`, methodName, args, err)\n            return undefined\n          }),\n      ),\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate),\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencyA?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n        .catch((err: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(err)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\">\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\n            <Text fontSize=\"24px\" ml=\"10px\">\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <AddIcon width=\"16px\" />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\n            <Text fontSize=\"24px\" ml=\"10px\">\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <Text small textAlign=\"left\" pt=\"12px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          {t('%assetA%/%assetB% Burned', { assetA: currencyA?.symbol ?? '', assetB: currencyB?.symbol ?? '' })}\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\n            <Text>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text>{t('Price')}</Text>\n              <Text>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <Button disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          {t('Confirm')}\n        </Button>\n      </>\n    )\n  }\n\n  const pendingText = t('Removing %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencyA?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencyB?.symbol ?? '',\n  })\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput],\n  )\n\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\n        (currencyB && currencyEquals(WETH[chainId], currencyB))),\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        history.push(`/removeape/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        history.push(`/removeape/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history],\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        history.push(`/removeape/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        history.push(`/removeape/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback,\n  )\n\n  const [onPresentRemoveLiquidity] = useModal(\n    <TransactionConfirmationModal\n      title={t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash || ''}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n    />,\n    true,\n    true,\n    'removeLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          backTo=\"/pool2\"\n          title={t('Remove %assetA%-%assetB% liquidity', {\n            assetA: currencyA?.symbol ?? '',\n            assetB: currencyB?.symbol ?? '',\n          })}\n          subtitle={`To receive ${currencyA?.symbol} and ${currencyB?.symbol}`}\n          noConfig\n        />\n\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            <RowBetween>\n              <Text>{t('Amount')}</Text>\n              <Button variant=\"text\" scale=\"sm\" onClick={() => setShowDetailed(!showDetailed)}>\n                {showDetailed ? t('Simple') : t('Detailed')}\n              </Button>\n            </RowBetween>\n            {!showDetailed && (\n              <BorderCard>\n                <Text fontSize=\"40px\" bold mb=\"16px\" style={{ lineHeight: 1 }}>\n                  {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\n                </Text>\n                <Slider\n                  name=\"lp-amount\"\n                  min={0}\n                  max={100}\n                  value={innerLiquidityPercentage}\n                  onValueChanged={(value) => setInnerLiquidityPercentage(Math.ceil(value))}\n                  mb=\"16px\"\n                />\n                <Flex flexWrap=\"wrap\" justifyContent=\"space-evenly\">\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}>\n                    25%\n                  </Button>\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}>\n                    50%\n                  </Button>\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}>\n                    75%\n                  </Button>\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}>\n                    Max\n                  </Button>\n                </Flex>\n              </BorderCard>\n            )}\n          </AutoColumn>\n          {!showDetailed && (\n            <>\n              <ColumnCenter>\n                <ArrowDownIcon color=\"textSubtle\" width=\"24px\" my=\"16px\" />\n              </ColumnCenter>\n              <AutoColumn gap=\"10px\">\n                <Text bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                  {t('You will receive')}\n                </Text>\n                <LightGreyCard>\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\n                    <Flex>\n                      <CurrencyLogo currency={currencyA} />\n                      <Text small color=\"textSubtle\" id=\"remove-liquidity-tokena-symbol\" ml=\"4px\">\n                        {currencyA?.symbol}\n                      </Text>\n                    </Flex>\n                    <Text small>{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\n                  </Flex>\n                  <Flex justifyContent=\"space-between\">\n                    <Flex>\n                      <CurrencyLogo currency={currencyB} />\n                      <Text small color=\"textSubtle\" id=\"remove-liquidity-tokenb-symbol\" ml=\"4px\">\n                        {currencyB?.symbol}\n                      </Text>\n                    </Flex>\n                    <Text small>{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\n                  </Flex>\n                  {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                    <RowBetween style={{ justifyContent: 'flex-end', fontSize: '14px' }}>\n                      {oneCurrencyIsETH ? (\n                        <StyledInternalLink\n                          to={`/removeape/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\n                            currencyB === ETHER ? WETH[chainId].address : currencyIdB\n                          }`}\n                        >\n                          {t('Receive WBNB')}\n                        </StyledInternalLink>\n                      ) : oneCurrencyIsWETH ? (\n                        <StyledInternalLink\n                          to={`/removeape/${currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'BNB' : currencyIdA}/${\n                            currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'BNB' : currencyIdB\n                          }`}\n                        >\n                          {t('Receive BNB')}\n                        </StyledInternalLink>\n                      ) : null}\n                    </RowBetween>\n                  ) : null}\n                </LightGreyCard>\n              </AutoColumn>\n            </>\n          )}\n\n          {showDetailed && (\n            <Box my=\"16px\">\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.LIQUIDITY]}\n                onUserInput={onLiquidityInput}\n                onMax={() => {\n                  onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                }}\n                showMaxButton={!atMaxAmount}\n                disableCurrencySelect\n                currency={pair?.liquidityToken}\n                pair={pair}\n                id=\"liquidity-amount\"\n                onCurrencySelect={() => null}\n              />\n              <ColumnCenter>\n                <ArrowDownIcon width=\"24px\" my=\"16px\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                hideBalance\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onCurrencyAInput}\n                onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                showMaxButton={!atMaxAmount}\n                currency={currencyA}\n                label={t('Output')}\n                onCurrencySelect={handleSelectCurrencyA}\n                id=\"remove-liquidity-tokena\"\n              />\n              <ColumnCenter>\n                <AddIcon width=\"24px\" my=\"16px\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                hideBalance\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onCurrencyBInput}\n                onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                showMaxButton={!atMaxAmount}\n                currency={currencyB}\n                label={t('Output')}\n                onCurrencySelect={handleSelectCurrencyB}\n                id=\"remove-liquidity-tokenb\"\n              />\n            </Box>\n          )}\n          {pair && (\n            <AutoColumn gap=\"10px\" style={{ marginTop: '16px' }}>\n              <Text bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Prices')}\n              </Text>\n              <LightGreyCard>\n                <Flex justifyContent=\"space-between\">\n                  <Text small color=\"textSubtle\">\n                    1 {currencyA?.symbol} =\n                  </Text>\n                  <Text small>\n                    {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                  </Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                  <Text small color=\"textSubtle\">\n                    1 {currencyB?.symbol} =\n                  </Text>\n                  <Text small>\n                    {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                  </Text>\n                </Flex>\n              </LightGreyCard>\n            </AutoColumn>\n          )}\n          <Box position=\"relative\" mt=\"16px\">\n            {!account ? (\n              <ConnectWalletButton />\n            ) : (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\n                  onClick={onAttemptToApprove}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                  width=\"100%\"\n                  mr=\"0.5rem\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>{t('Enabling')}</Dots>\n                  ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable')\n                  )}\n                </Button>\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    onPresentRemoveLiquidity()\n                  }}\n                  width=\"100%\"\n                  disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                >\n                  {error || t('Remove')}\n                </Button>\n              </RowBetween>\n            )}\n          </Box>\n        </CardBody>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Page>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n// An internal link from the react-router-dom library that is correctly styled\nconst StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport default StyledInternalLink\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100,\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange],\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n"],"sourceRoot":""}