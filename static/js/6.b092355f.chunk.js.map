{"version":3,"sources":["views/Vote2/StyledComponents2.tsx","views/Vote2/Gift.tsx","views/Profile/EmojiPicker.js","views/Profile/StyledComponents.tsx","views/Profile/index.tsx"],"names":["Container","styled","Box","DepositList","ul","ArrowButton","Button","HeaderContainer","div","Title","h2","ImageGrid","span","InfoText","Text","VizslaSwap","account","useWeb3React","provider","useMemo","ethers","providers","Web3Provider","window","ethereum","tokenContract","Contract","tokenABI","getSigner","contractAddress","vizslaSwapContract","GiftABI","useState","approved","setApproved","showDropdown","setShowDropdown","loadingIndex","setLoadingIndex","deposits","setDeposits","currentPage","setCurrentPage","depositOptions","amount","utils","parseUnits","label","color","useEffect","a","maxAmount","allowance","gte","console","error","checkApprovalStatus","i","promises","currentIndex","push","getDepositDetails","then","deposit","id","catch","Promise","all","fetchedDeposits","validDeposits","filter","sortedDeposits","reverse","map","user","timestamp","transactionId","fetchDeposits","approve","index","tx","wait","makeDeposit","alert","handleButtonClick","alignItems","justifyContent","onClick","style","display","gridTemplateColumns","gap","marginBottom","option","disabled","background","padding","fontSize","margin","textAlign","toString","formatUnits","Date","toLocaleString","marginTop","prev","Math","max","length","styles","emojiPicker","flexWrap","border","borderRadius","backgroundColor","emojiButton","cursor","EmojiPicker","setNewMessage","newMessage","handleSend","emoji","role","tabIndex","onKeyDown","e","key","runningLightAnimation","keyframes","hoverEffect","activeEffect","borderGlow","ChatBox","Input","input","theme","colors","failure","text","align","primary","isActive","TopListTitle","supabase","createClient","process","container","flexDirection","width","maxWidth","position","overflow","fileButton","marginLeft","chatBox","height","overflowY","messageContainer","emojiFileContainer","avatar","marginRight","message","flex","inputContainer","searchButton","sendButton","sentImage","maxHeight","fileInput","previewContainer","previewText","previewImage","topListBox","topList","listStyle","topListImage","inputRow","fileContainer","boxShadow","paginationButton","lastCollectedInfo","collectButton","Profile","library","useActiveWeb3React","messages","setMessages","cooldown","setCooldown","lastCollector","setLastCollector","lastCollectedAmount","setLastCollectedAmount","chatBoxRef","useRef","location","useLocation","setTopList","setTop10Addresses","names","setNames","userNumbers","setUserNumbers","isSearching","setIsSearching","searchQuery","setSearchQuery","emojiPickerVisible","setEmojiPickerVisible","image","setImage","giftBalance","setGiftBalance","contract","setContract","contract2","setContract2","giftContract","setGiftContract","setTokenContract","t","useTranslation","giftAddress","fileInputRef","signer","contractABI","NumberPurchaseABI","TokenABI","fetchGiftBalance","balanceOf","balance","formattedBalance","parseFloat","fetchLastCollectedData","formattedAmount","collectTokens","collect","current","scrollTop","scrollHeight","from","select","order","ascending","data","calculateTopList","fetchMessages","channel","on","event","schema","table","payload","new","prevMessages","updatedMessages","subscribe","removeChannel","userList","usersFromMessages","msg","sender","usersFromTopList","Array","Set","newNames","newNumbers","eq","single","existingData","fetchError","code","name","number","getName","userPurchases","userPurchase","userNumber","toNumber","insert","log","fetchUserData","timer","setTimeout","clearTimeout","pathname","trim","userMessageCount","Map","forEach","set","get","sortedTopList","entries","sort","b","top10","slice","handlePageChange","page","getSenderName","substring","getSenderStyle","findIndex","getSenderImage","formattedNumber","startIndex","endIndex","totalPages","ceil","filteredTopList","toLowerCase","includes","filteredMessages","activeIndex","scale","variant","to","as","Link","mt","ref","src","alt","toLocaleTimeString","hour","minute","second","type","value","onChange","target","placeholder","click","accept","files","file","size","reader","FileReader","onload","result","readAsDataURL","Gift","bold","count","pageNumbers","startPage","getPageNumbers","pageNumber","ConnectWalletButton"],"mappings":"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","file":"static/js/6.b092355f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Box, Button, Text } from '@pancakeswap/uikit';\r\n\r\nconst Container = styled(Box)`\r\n  max-width: 350px;\r\n    align-items: right;\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n  border: 2px solid #5a9f98;\r\n  justify-content: right;\r\n  border-radius: 12px;\r\n  background-color: #000;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  color: #fff;\r\n`;\r\nconst DepositList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-top: 20px;\r\n  background-color: #1e1e1e;\r\n  border-radius: 8px;\r\n    font-size: 0.9rem;\r\n\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  color: #e5e5e5;\r\n\r\n  li {\r\n    padding: 15px;\r\n    border-bottom: 1px solid #333;\r\n    \r\n    &:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    strong {\r\n      color: #62d5a3;\r\n    }\r\n  }\r\n`;\r\nconst ArrowButton = styled(Button)`\r\n  background-color: #62d5a3;\r\n  color: #1e1e1e;\r\n  font-weight: bold;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #4abf88;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #3aa47b;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #3aa47b;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 0;\r\n  font-size: 1.2rem;\r\n  color: #62d5a3;\r\n`;\r\n\r\nconst ArrowIcon = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 1.5rem;\r\n  color: #62d5a3;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImageGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImageItem = styled.div`\r\n  text-align: center;\r\n\r\n  img {\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  p {\r\n    color: #e5e5e5;\r\n    font-size: 0.9rem;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100%;\r\n  padding: 12px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  background-color: #62d5a3;\r\n  color: #1e1e1e;\r\n  border-radius: 8px;\r\n  margin-top: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #4abf88;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #3aa47b;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst InfoText = styled(Text)`\r\n  font-size: 1.2rem;\r\n  color: #e5e5e5;\r\n`;\r\n\r\nconst InfoText2 = styled(Text)`\r\n  font-size: 1.2rem;\r\n  color: #e5e5e5;\r\n`;\r\nexport { Container, HeaderContainer, Title, ArrowIcon, Content, ImageGrid, ImageItem, StyledButton, InfoText,InfoText2, DepositList, ArrowButton };\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { useWeb3React } from '@web3-react/core/core/core';\r\nimport { Button,Flex } from '@pancakeswap/uikit';\r\nimport { Container, HeaderContainer, Title, ImageGrid, DepositList, ArrowButton , InfoText } from './StyledComponents2';\r\nimport tokenABI from './TokenABI.json';\r\nimport GiftABI from './GiftABI.json';\r\n\r\nconst VizslaSwap = () => {\r\n  const { account } = useWeb3React();\r\n  const provider = useMemo(() => new ethers.providers.Web3Provider(window.ethereum), []);\r\n  \r\n  const tokenContractAddress = '0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF'; \r\n  const tokenContract = useMemo(() => new ethers.Contract(tokenContractAddress, tokenABI, provider.getSigner()), [provider]);\r\n\r\n  const contractAddress = '0xC8B19e19f52CE07bf9c4745caA4aAC87ab199cDD';\r\n  const vizslaSwapContract = useMemo(() => new ethers.Contract(contractAddress, GiftABI, provider.getSigner()), [provider]);\r\n\r\n  const [approved, setApproved] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [loadingIndex, setLoadingIndex] = useState<number | null>(null);\r\n  const [deposits, setDeposits] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const depositOptions = useMemo(() => [\r\n    {\r\n      amount: ethers.utils.parseUnits('200', 18),\r\n      label: '200 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #62D5A3 0%, #38A169 100%)', // Zöld gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('500', 18),\r\n      label: '500 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #CD7F32 0%, #8C4A00 100%)', // Bronz gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('1000', 18),\r\n      label: '1000 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #6E6E6E 0%, #4B4B4B 100%)', // Ezüst gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('5000', 18),\r\n      label: '5000 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #B8860B 0%, #8B7500 100%)', // Arany gradiens\r\n    },\r\n  ], []);\r\n  \r\n\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const maxAmount = ethers.utils.parseUnits('5000', 18); \r\n        const allowance = await tokenContract.allowance(account, contractAddress);\r\n        setApproved(allowance.gte(maxAmount));\r\n      } catch (error) {\r\n        console.error('Error checking allowance:', error);\r\n      }\r\n    };\r\n\r\n    if (account) {\r\n      checkApprovalStatus();\r\n    }\r\n  }, [account, tokenContract, contractAddress]);\r\n\r\n  useEffect(() => {\r\n    const fetchDeposits = async () => {\r\n      try {\r\n        let i = currentPage * 5;\r\n        const promises = [];\r\n  \r\n        while (true) {\r\n          const currentIndex = i;\r\n          promises.push(\r\n            vizslaSwapContract.getDepositDetails(currentIndex)\r\n              .then(deposit => ({ ...deposit, id: currentIndex }))\r\n              .catch(error => {\r\n                console.error('Stopping fetch due to error:', error);\r\n                return null;\r\n              })\r\n          );\r\n          i++;\r\n          if (i >= currentPage * 5 + 5) break;\r\n        }\r\n  \r\n        const fetchedDeposits = await Promise.all(promises);\r\n        const validDeposits = fetchedDeposits.filter(deposit => deposit !== null);\r\n  \r\n        const sortedDeposits = validDeposits.reverse();\r\n  \r\n        setDeposits(sortedDeposits.map((deposit) => ({\r\n          user: deposit[0],\r\n          amount: deposit[1],\r\n          timestamp: deposit[2],\r\n          transactionId: deposit.id,\r\n        })));\r\n      } catch (error) {\r\n        console.error('Error fetching deposits:', error);\r\n      }\r\n    };\r\n  \r\n    if (showDropdown) {\r\n      fetchDeposits();\r\n    }\r\n  }, [currentPage, vizslaSwapContract, showDropdown]);\r\n  \r\n  \r\n\r\n  const approve = async (index: number) => {\r\n    try {\r\n      const tx = await tokenContract.approve(contractAddress, depositOptions[index].amount);\r\n      setLoadingIndex(index);\r\n      await tx.wait();\r\n      const allowance = await tokenContract.allowance(account, contractAddress);\r\n      if (allowance.gte(depositOptions[index].amount)) {\r\n        setApproved(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Approval failed:', error);\r\n    } finally {\r\n      setLoadingIndex(null);\r\n    }\r\n  };\r\n\r\n  const deposit = async (index: number) => {\r\n    try {\r\n      setLoadingIndex(index);\r\n      const tx = await vizslaSwapContract.makeDeposit(index + 1);\r\n      await tx.wait();\r\n      alert('Deposit successful!');\r\n      setShowDropdown(false);\r\n    } catch (error) {\r\n      console.error('Deposit failed:', error);\r\n    } finally {\r\n      setLoadingIndex(null);\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async (index: number) => {\r\n    if (!approved) {\r\n      await approve(index);\r\n    } else {\r\n      await deposit(index);\r\n    }\r\n  };\r\n \r\n  return (\r\n    <Flex alignItems=\"right\" justifyContent=\"right\">\r\n    <Container> \r\n      <HeaderContainer onClick={() => setShowDropdown(!showDropdown)}>\r\n        <InfoText>Send Gift 🎁</InfoText>\r\n      </HeaderContainer> \r\n\r\n      {showDropdown && (\r\n        <>\r\n          <ImageGrid style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px', marginBottom: '20px' }}>\r\n            {depositOptions.map((option, index) => (\r\n              <Button\r\n                key={option.amount.toString()}\r\n                disabled={loadingIndex !== null}\r\n                onClick={() => handleButtonClick(index)}\r\n                style={{\r\n                  background: option.color,\r\n                  padding: '10px',\r\n                  fontSize: '12px',\r\n                  margin: '5px 0',\r\n                  textAlign: 'center', \r\n                }}\r\n              >\r\n                {loadingIndex === index ? 'Processing...' : approved ? option.label : 'Approve'}\r\n              </Button>\r\n            ))}\r\n          </ImageGrid>\r\n\r\n          <Title style={{ textAlign: 'center' }}>Recent Deposits</Title>\r\n          <DepositList>\r\n            {deposits.map((deposit) => (\r\n              <li key={deposit.transactionId}>\r\n                <strong>User:</strong> {deposit.user} <br />\r\n                <strong>Amount:</strong> {ethers.utils.formatUnits(deposit.amount, 18)} VIZSLASWAP <br />\r\n                <strong>Timestamp:</strong> {new Date(deposit.timestamp * 1000).toLocaleString()}\r\n              </li>\r\n            ))}\r\n          </DepositList>\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\r\n            <ArrowButton onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 0))} disabled={currentPage === 0}>\r\n              &larr; Previous\r\n            </ArrowButton>\r\n            <ArrowButton onClick={() => setCurrentPage((prev) => prev + 1)} disabled={deposits.length < 5}>\r\n              Next &rarr;\r\n            </ArrowButton>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n    </Flex>\r\n  );\r\n}; \r\n\r\nexport default VizslaSwap;\r\n","import React from 'react';\r\n\r\nconst EmojiPicker = ({ setNewMessage, newMessage, handleSend }) => {\r\n  const emojis = ['😊', '😂', '😢', '😍', '😎', '🎉', '🎁', '😜', '🤔', '😇', '🙃', '😅', '🤣', '🤩', '😡', '🥳', '🤯', '😱', '🤗', '😏', '😴', '🤤', '😷', '🤒', '🤕', '🤮', '🤑', '😈', '👻', '💩', '😺', '👀', '💪', '🙏', '👏', '🙌', '👐', '✌️', '👍', '👎', '👊', '🤟'];\r\n\r\n  return (\r\n    <div style={styles.emojiPicker}>\r\n      {emojis.map((emoji) => (\r\n        <span\r\n          key={emoji}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onClick={() => { \r\n            setNewMessage(`${newMessage}${emoji}`); \r\n            handleSend(); \r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setNewMessage(`${newMessage}${emoji}`);\r\n              handleSend();\r\n            }\r\n          }}\r\n          style={styles.emojiButton}\r\n        >\r\n          {emoji}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  emojiPicker: {\r\n    marginTop: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n  },\r\n  emojiButton: {\r\n    fontSize: '24px',\r\n    margin: '5px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default EmojiPicker;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { Box, Button, Text } from '@pancakeswap/uikit';\r\n\r\nconst runningLightAnimation = keyframes`\r\n  0% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n  50% {\r\n    text-shadow: 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3, 0 0 12.5px #62d5a3;\r\n  }\r\n  100% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n`;\r\nconst hoverEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(255, 255, 255, 0.7);\r\n  }\r\n`;\r\nconst activeEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(83, 178, 140, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(83, 178, 140, 0.7);\r\n  }\r\n`;\r\nconst borderGlow = keyframes`\r\n  0% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n  50% {\r\n    border-color: #4abf88;\r\n    box-shadow: 0 0 15px #4abf88;\r\n  }\r\n  100% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n`;\r\nconst ChatBox = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n    margin-top: 20px;\r\n  overflow-y: scroll;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border: 2px solid #5a9f98;\r\n  border-radius: 8px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  flex-direction: column-reverse;\r\n  animation: ${borderGlow} 2s infinite;\r\n`;\r\nconst Input = styled.input<{ error?: boolean; fontSize?: string; align?: string; isActive?: boolean }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  max-width: 400px\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: ${({ fontSize }) => fontSize || '16px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n  transition: all 0.3s ease;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n\r\n  &:hover {\r\n    animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n  }\r\n\r\n  &:focus {\r\n    animation: ${activeEffect} 0.5s forwards;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  margin: 20px auto;\r\n   border-radius: 15px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  overflow: hidden;\r\n  color: #fff;\r\n`;\r\nconst Title = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 50px;\r\n    margin-top: -20px;\r\n  font-weight: bold; /* Make the text thicker */\r\n  margin-bottom: 20px;\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\nconst TopListTitle = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n    margin-top: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n  font-size: 28px;\r\n  margin-bottom: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\n\r\nexport { runningLightAnimation, hoverEffect,activeEffect,borderGlow,ChatBox,Input,Container,Title,TopListTitle };\r\n","import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core/core/core';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useTranslation } from 'contexts/Localization';\nimport { ButtonMenu, ButtonMenuItem, Button, Flex, Text } from '@pancakeswap/uikit';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { ethers } from 'ethers'; \nimport { createClient } from '@supabase/supabase-js';\nimport Gift from '../Vote2/Gift';\nimport EmojiPicker from './EmojiPicker';  // Import the EmojiPicker component\nimport { ChatBox, Input, Container, Title, TopListTitle } from './StyledComponents';\nimport NumberPurchaseABI from './NumberPurchaseABI.json';\nimport contractABI from './contractABI.json';\nimport GiftABI from './GiftABI.json';\nimport TokenABI from './TokenABI.json';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\n\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nconst Profile = () => {\n    const { account } = useWeb3React();\n    const { library } = useActiveWeb3React();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(''); \n    const [cooldown, setCooldown] = useState(0);\n    const [lastCollector, setLastCollector] = useState(null);\n    const [lastCollectedAmount, setLastCollectedAmount] = useState(null);\n    const chatBoxRef = useRef(null);\n    const location = useLocation();\n    const [topList, setTopList] = useState([]);\n    const [top10Addresses, setTop10Addresses] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [names, setNames] = useState({});\n    const [userNumbers, setUserNumbers] = useState({});\n    const [isSearching, setIsSearching] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [emojiPickerVisible, setEmojiPickerVisible] = useState(false);\n    const [image, setImage] = useState(null);\n    const [giftBalance, setGiftBalance] = useState(0);\n    const [contract, setContract] = useState<ethers.Contract | null>(null);\nconst [contract2, setContract2] = useState<ethers.Contract | null>(null);\nconst [giftContract, setGiftContract] = useState<ethers.Contract | null>(null);\nconst [tokenContract, setTokenContract] = useState<ethers.Contract | null>(null);\n\n    const itemsPerPage = 25;\n    const [currentName, setCurrentName] = useState<string | null>(null); // vagy csak string ha biztosan van name\nconst [totalUsers, setTotalUsers] = useState<number>(0);\n    const { t } = useTranslation();\n    const contractAddress = '0x674e3eDc898Aa4b486Bd2E5aa2D1C8653677F471';  \n    const contractAddress2 = '0xBE8C7E554C89e064ED7229952036c3678cd10180';\n    const giftAddress = '0xC8B19e19f52CE07bf9c4745caA4aAC87ab199cDD';  \n    const tokenContractAddress = '0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF';\n    const fileInputRef = useRef(null);\n   \n    useEffect(() => {\n      if (library) {\n          const signer = library.getSigner();\n          setContract(new ethers.Contract(contractAddress, contractABI, signer));\n          setContract2(new ethers.Contract(contractAddress2, NumberPurchaseABI, signer));\n          setGiftContract(new ethers.Contract(giftAddress, GiftABI, signer));\n          setTokenContract(new ethers.Contract(tokenContractAddress, TokenABI, signer));\n      }\n  }, [library]);\n  \n    useEffect(() => {\n      const fetchGiftBalance = async () => {\n        try {\n          const balance = await tokenContract.balanceOf(giftAddress);\n          const formattedBalance = ethers.utils.formatUnits(balance, 18);\n          setGiftBalance(parseFloat(formattedBalance));\n        } catch (error) {\n          console.error('Error fetching Gift contract balance:', error);\n        }\n      };\n\n      const fetchLastCollectedData = async () => {\n        try {\n          const lastCollector = await giftContract.lastCollector();\n          const lastCollectedAmount = await giftContract.lastCollectedAmount();\n          const formattedAmount = ethers.utils.formatUnits(lastCollectedAmount, 18);\n          setLastCollector(lastCollector);\n          setLastCollectedAmount(parseFloat(formattedAmount));\n        } catch (error) {\n          console.error('Error fetching last collected data:', error);\n        }\n      };\n    \n      fetchGiftBalance();\n      fetchLastCollectedData();\n    }, [tokenContract, giftContract]);\n\n    const collectTokens = async () => {\n      try {\n        const tx = await giftContract.collect();\n        await tx.wait();\n        alert('Tokens collected successfully!');\n        const lastCollector = await giftContract.lastCollector();\n        const lastCollectedAmount = await giftContract.lastCollectedAmount();\n        const formattedAmount = ethers.utils.formatUnits(lastCollectedAmount, 18);\n        setLastCollector(lastCollector);\n        setLastCollectedAmount(parseFloat(formattedAmount));\n      } catch (error) {\n        console.error('Error collecting tokens:', error);\n        alert('Failed to collect tokens');\n      }\n    };\n\n    useEffect(() => {\n      if (chatBoxRef.current) {\n        chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n      }\n    }, [account, messages]); \n\n    useEffect(() => {\n      const fetchMessages = async () => {\n        const { data, error } = await supabase\n          .from('messages')\n          .select('*')\n          .order('timestamp', { ascending: true });\n    \n        if (error) {\n          console.error('Error fetching messages:', error);\n        } else {\n          setMessages(data);\n          calculateTopList(data);\n        }\n      };\n    \n      fetchMessages();\n    }, []);\n\n    useEffect(() => {\n      const channel = supabase\n        .channel('public:messages')\n        .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, payload => {\n          const newMessage = payload.new;\n          setMessages(prevMessages => {\n            const updatedMessages = [...prevMessages, newMessage];\n            calculateTopList(updatedMessages);\n            return updatedMessages;\n          });\n        })\n        .subscribe();\n    \n      return () => {\n        supabase.removeChannel(channel);\n      };\n    }, []);\n      const userList = useMemo(() => {\n    const usersFromMessages = messages.map(msg => msg.sender);\n    const usersFromTopList = topList.map(([user]) => user);\n    return Array.from(new Set([...usersFromMessages, ...usersFromTopList])); // Egyedi felhasználók összegyűjtése\n  }, [messages, topList]);\n\n    useEffect(() => {\n      if (!account || userList.length === 0) return;\n    \n      const fetchUserData = async () => {\n        const newNames = {};\n        const newNumbers = {};\n    \n        await Promise.all(userList.map(async (user) => {\n          try {\n            // Próbáljuk meg először a Supabase-ből lekérni az adatokat\n            const { data: existingData, error: fetchError } = await supabase\n              .from('user_data')\n              .select('*')\n              .eq('account', user)\n              .single();\n    \n            if (fetchError && fetchError.code !== 'PGRST116') {\n              console.error(`Error fetching data from Supabase for ${user}:`, fetchError);\n              return;\n            }\n    \n            if (existingData) {\n              // Ha vannak adatok a Supabase-ben, használjuk azokat\n              newNames[user] = existingData.name;\n              newNumbers[user] = existingData.number;\n            } else {\n              // Ha nincsenek adatok a Supabase-ben, kérjük le a smart contractból\n              const name = await contract.getName(user);\n              const userPurchase = await contract2.userPurchases(user);\n              const userNumber = userPurchase.number.toNumber();\n    \n              newNames[user] = name;\n              newNumbers[user] = userNumber;\n    \n              // Az új adatokat elmentjük a Supabase-be\n              const { error } = await supabase.from('user_data').insert([{ account: user, name, number: userNumber }]);\n              if (error) {\n                console.error(`Error inserting data to Supabase for ${user}:`, error);\n              } else {\n                console.log(`User data inserted to Supabase for ${user} successfully`);\n              }\n            }\n          } catch (error) {\n            console.error(`Error fetching data for ${user}:`, error);\n          }\n        }));\n    \n        setNames(newNames);\n        setUserNumbers(newNumbers);\n      };\n    \n      fetchUserData();\n    }, [account, userList, contract, contract2]);\n    \n    \n\n    useEffect(() => {\n      if (cooldown > 0) {\n        const timer = setTimeout(() => setCooldown(cooldown - 1), 1000);\n        return () => clearTimeout(timer);\n      }\n      return undefined;\n    }, [cooldown]);\n  \n    const toggleSearchMode = () => {\n      setIsSearching(!isSearching);\n      setSearchQuery('');\n    };\n  \n    const handleSearchInputChange = (e) => {\n      setSearchQuery(e.target.value);\n    };\n\n    const handleImageChange = (e) => {\n      if (e.target.files && e.target.files[0]) {\n        const file = e.target.files[0];\n    \n        if (file.size > 1048576) {\n          alert('The file size must be less than 1 MB.');\n          return;\n        }\n    \n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setImage(e.target.result);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const handleSend = async () => {\n      if (cooldown > 0) return;\n    \n      if (!newMessage.trim() && !image) return;\n    \n      const message = {\n        text: newMessage,\n        sender: account,\n        image,\n      };\n    \n      const { data, error } = await supabase\n        .from('messages')\n        .insert([message]);\n    \n      if (error) {\n        console.error('Error sending message:', error);\n        alert(`Failed to send message: ${error.message}`);\n      } else {\n        setNewMessage('');\n        setImage(null);\n        setCooldown(30);\n      }\n    };\n  \n    const calculateTopList = (messages) => {\n      const userMessageCount = new Map();\n    \n      messages.forEach((msg) => {\n        if (msg.text && msg.text.trim() !== '') {\n          userMessageCount.set(msg.sender, (userMessageCount.get(msg.sender) || 0) + 1);\n        }\n      });\n    \n      const sortedTopList = Array.from(userMessageCount.entries()).sort((a, b) => b[1] - a[1]);\n      setTopList(sortedTopList);\n    \n      const top10 = sortedTopList.slice(0, 25).map(([user]) => user);\n      setTop10Addresses(top10);\n    };\n  \n    const handlePageChange = (page) => {\n      setCurrentPage(page);\n    };\n  \n    const getSenderName = (sender) => {\n      if (!sender) {\n        return 'Unknown';\n      }\n      \n      if (sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1') {\n        return 'Admin';\n      }\n      \n      return names[sender] || `${sender.substring(0, 5)}...${sender.substring(sender.length - 5)}`;\n    };\n    \n    const getSenderStyle = (sender) => {\n        if (sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1') {\n            return { color: 'gold' };\n        }\n        const index = topList.findIndex(([user]) => user === sender);\n        if (index >= 0) {\n            if (index < 25) {\n                return { color: '#ffdc73' };\n            }\n            if (index < 100) {\n                return { color: '#E5E4E2' };\n            }\n            if (index < 250) {\n                return { color: '#cd7f32' };\n            }\n        }\n        return { color: '#fff' };\n    };\n    \n    const getSenderImage = (sender) => {\n      const userNumber = userNumbers[sender];\n      if (userNumber) {\n        const formattedNumber = userNumber < 10 ? `0${userNumber}` : `${userNumber}`;\n        return `images/pixel/${formattedNumber}.jpg`;\n      }\n      return 'images/pixel/200.png';\n    };\n  \n    const formatTimestamp = (timestamp) => {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' });\n    };\n    \n  \n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentItems = topList.slice(startIndex, endIndex);\n  \n    const totalPages = Math.ceil(topList.length / itemsPerPage);\n  \n    const getPageNumbers = () => {\n      const pageNumbers = [];\n      const maxPageNumbers = 3;\n      const startPage = currentPage;\n  \n      for (let i = 0; i < maxPageNumbers && startPage + i <= totalPages; i++) {\n        pageNumbers.push(startPage + i);\n      }\n  \n      return pageNumbers;\n    };\n    \n    const getActiveIndex = (pathname) => {\n      if (\n        pathname.includes('/lockedstaking/all') ||\n        pathname.includes('/lockedstaking/history')\n      ) {\n        return 1;\n      }\n      return 0;\n    };\n  \n    const filteredTopList = topList.filter(([user]) => {\n      if (!searchQuery) return true;\n      const userName = getSenderName(user);\n      return userName.toLowerCase().includes(searchQuery.toLowerCase()) || user.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n  \n    const filteredMessages = messages.filter((msg) =>\n      msg.text && msg.text.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n      <Container>\n        {account ? (\n          <>\n            <Title>VizslaChat</Title>\n            <Flex alignItems=\"center\" justifyContent=\"center\" >\n              <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n                <ButtonMenuItem id=\"swap-nav-link\" to=\"/chat\" as={Link}>\n                  {t('Public')}\n                </ButtonMenuItem>\n                <ButtonMenuItem id=\"swap-nav-link\" to=\"/privatechat\" as={Link} mt=\"4px\">\n                  {t('Private')}\n                </ButtonMenuItem> \n                <ButtonMenuItem id=\"swap-nav-link\" to=\"/nameregistration\" as={Link} mt=\"4px\">\n                  {t('Settings')}\n                </ButtonMenuItem> \n              </ButtonMenu>\n            </Flex>\n\n            <ChatBox ref={chatBoxRef}>\n              {filteredMessages.length > 0 ? (\n                filteredMessages\n                  .filter((msg) => new Date(msg.timestamp))\n                  .map((msg) => (\n                    <div key={msg.id} style={styles.messageContainer}>\n                      <img src={getSenderImage(msg.sender)} alt=\"sender\" style={styles.avatar} />\n                      <div style={styles.message}>\n                        <b style={getSenderStyle(msg.sender)}>{getSenderName(msg.sender)}:</b> {msg.text}\n                        {msg.image && <img src={msg.image} alt=\"sent\" style={styles.sentImage} />}\n                        <span style={styles.timestamp}>{formatTimestamp(msg.timestamp)}</span>\n                      </div>\n                    </div>\n                  ))\n              ) : (\n                <div style={styles.message}>No messages yet.</div>\n              )}\n              {giftBalance > 200 && (\n                <>\n                              <Flex alignItems=\"left\" justifyContent=\"left\">\n                  <Button variant='gold' onClick={collectTokens} >\n                    Collect: {giftBalance} VIZSLASWAP 🎉\n                  </Button>\n                                </Flex>\n                </>\n              )}\n            </ChatBox>\n    \n            <div style={styles.inputRow}>\n              <Flex alignItems=\"center\" justifyContent=\"center\">\n                <Input\n                  type=\"text\"\n                  value={isSearching ? searchQuery : newMessage}\n                  onChange={isSearching ? handleSearchInputChange : (e) => setNewMessage(e.target.value)}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' && !isSearching && cooldown === 0) {\n                      handleSend();\n                    }\n                  }}\n                  style={styles.input}\n                  placeholder={isSearching ? 'Search in chatbox...' : (cooldown > 0 ? `Cooldown: ${cooldown}s` : 'Type a message')}\n                  disabled={cooldown > 0 && !isSearching}\n                />\n                <Button onClick={handleSend} style={styles.sendButton} disabled={cooldown > 0}>\n                  Send\n                </Button>\n                <Button onClick={() => setEmojiPickerVisible(!emojiPickerVisible)} style={styles.emojiButton}>\n                  😊\n                </Button>\n                <Button onClick={toggleSearchMode} style={styles.searchButton}>\n                  {isSearching ? 'X' : '🔍'}\n                </Button>\n                <Button \n                  onClick={() => fileInputRef.current.click()} \n                  style={styles.fileButton}>\n                  📤\n                </Button>\n              </Flex>\n    \n              {image && (\n                <div style={styles.previewContainer}>\n                  <Text style={styles.previewText}>Image selected:</Text>\n                  <img src={image} alt=\"Preview\" style={styles.previewImage} />\n                </div>\n              )}\n            </div>\n    \n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              ref={fileInputRef}\n              style={{ display: 'none' }}\n              onChange={handleImageChange}\n            />\n    \n    {emojiPickerVisible && (\n              <EmojiPicker \n                setNewMessage={setNewMessage} \n                newMessage={newMessage} \n                handleSend={handleSend} \n              />\n            )}\n                  <Flex alignItems=\"right\" justifyContent=\"right\">\n\n            <Gift />\n            </Flex>\n            <Flex alignItems=\"right\" justifyContent=\"right\">\n            {lastCollector && lastCollectedAmount && (\n                    <div style={styles.lastCollectedInfo}>\n                      <Text bold fontSize='13px'>Last collected by:</Text>\n                      <Text bold fontSize='13px'>{lastCollector}</Text>\n                      <Text bold fontSize='13px'>Amount: {lastCollectedAmount} VIZSLASWAP</Text>\n                    </div>\n                  )}\n                              </Flex>\n            <div style={styles.topListBox}>\n              <TopListTitle>Top List</TopListTitle>\n              <Input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                style={styles.input}\n                placeholder=\"Search by name or address\"\n              />\n              <ul style={styles.topList}>\n                {filteredTopList.slice(startIndex, endIndex).map(([user, count], index) => (\n                  <li key={user} style={getSenderStyle(user)}>\n                    <img src={getSenderImage(user)} alt=\"position\" style={styles.topListImage} />\n                    {startIndex + index + 1}. {getSenderName(user)}\n                    <br />\n                    {user}: {count} messages\n                  </li>\n                ))}\n              </ul>\n              <div>\n                {currentPage > 1 && (\n                  <Button onClick={() => handlePageChange(currentPage - 1)} style={styles.paginationButton}>\n                    Previous\n                  </Button>\n                )}\n                {getPageNumbers().map((pageNumber) => (\n                  <Button\n                    key={pageNumber}\n                    onClick={() => handlePageChange(pageNumber)}\n                    style={styles.paginationButton}\n                  >\n                    {pageNumber}\n                  </Button>\n                ))}\n                {currentPage < totalPages && (\n                  <Button onClick={() => handlePageChange(currentPage + 1)} style={styles.paginationButton}>\n                    Next\n                  </Button>\n                )}\n              </div>\n            </div>\n          </>\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </Container>\n    );    \n};\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: '20px',\n    borderRadius: '15px',\n    color: '#e5e5e5',\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  fileButton: {\n    marginLeft: '5px',\n    padding: '8px',\n    backgroundColor: '#5a9f98',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '20px',\n  },\n  chatBox: {\n    width: '100%',\n    height: '300px',\n    overflowY: 'scroll',\n    marginBottom: '10px',\n    padding: '10px',\n    border: '2px solid #5a9f98',\n    borderRadius: '8px',\n    backgroundColor: '#000',\n    color: '#fff',\n    flexDirection: 'column-reverse',\n  },\n  messageContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '5px 0',\n  },\n  emojiFileContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '10px',\n  },\n  avatar: {\n    width: '45px',\n    height: '45px',\n    marginRight: '10px',\n    borderRadius: '25%',\n  },\n  message: {\n    flex: 1,\n  },\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    marginBottom: '10px',\n    borderRadius: '4px',\n    backgroundColor: '#000',\n    color: '#fff',\n  },\n  searchButton: {\n    marginLeft: '5px',\n    padding: '8px',\n    backgroundColor: '#5a9f98',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  },\n  emojiButton: {\n    marginLeft: '5px',\n    padding: '8px',\n    backgroundColor: '#5a9f98',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  },\n  sendButton: {\n    marginLeft: '5px',\n    padding: '8px',\n    backgroundColor: '#5a9f98',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  },\n  sentImage: {\n    maxWidth: '100px',\n    maxHeight: '100px',\n    height: 'auto',\n    width: 'auto',\n    marginTop: '10px',\n    borderRadius: '8px',\n  },\n  fileInput: {\n    color: '#fff',\n    cursor: 'pointer',\n    width: '100%',\n    backgroundColor: '#000',\n    borderRadius: '4px',\n    padding: '10px',\n    border: 'none',\n  },\n  previewContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '10px',\n  },\n  previewText: {\n    marginRight: '10px',\n    color: '#fff',\n  },\n  previewImage: {\n    maxWidth: '100px',\n    maxHeight: '100px',\n    borderRadius: '8px',\n  },\n  topListBox: {\n    width: '100%',\n    display: 'block',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '10px',\n    border: '2px solid #5a9f98',\n    borderRadius: '8px',\n    backgroundColor: '#000',\n    color: '#fff',\n    marginTop: '40px',\n    textAlign: 'center',\n  },\n  topList: {\n    listStyle: 'none',\n    display: 'block',\n    padding: '0',\n    margin: '10px 0',\n    width: '100%',\n  },\n  topListImage: {\n    width: '40px',\n    height: '40px',\n    borderRadius: '25%',\n    marginRight: '10px',\n  },\n  inputRow: {\n    display: 'block',\n    width: '100%',\n    marginBottom: '10px',\n  },\n  fileContainer: {\n    alignItems: 'left',\n    width: '100%',\n    marginTop: '10px',\n    padding: '10px',\n    border: '2px solid #5a9f98',\n    borderRadius: '8px',\n    backgroundColor: '#000',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n  },\n  timestamp: {\n    display: 'block',\n    fontSize: '0.8em',\n    color: '#aaa',\n    marginTop: '5px',\n  },\n  paginationButton: {\n    margin: '5px',\n    backgroundColor: '#333',\n    color: '#fff',\n  },\n  lastCollectedInfo: {\n    fontSize: '8px',\n    textAlign: 'right',\n    color: '#fff',\n  },\n  collectButton: {\n    marginTop: '10px',\n    padding: '10px',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  },\n};\n\nexport default Profile;\n"],"sourceRoot":""}