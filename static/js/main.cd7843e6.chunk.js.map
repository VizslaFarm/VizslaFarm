{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/mint/actions.ts","components/Layout/Row.tsx","hooks/useActiveWeb3React.ts","state/swap/actions.ts","components/Layout/Column.tsx","config/constants/tokens.ts","utils/addressHelpers.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/index.ts","config/constants/types.ts","utils/index.ts","config/constants/multicall/index.ts","hooks/useContract.ts","utils/contractHelpers.ts","state/multicall/hooks.ts","config/constants/index3.ts","components/Balance.tsx","state/user/actions.ts","utils/index3.ts","components/Logo/DoubleLogo.tsx","utils/multicall.ts","hooks/Tokens.ts","state/user/hooks/index.tsx","state/pools/hooks.ts","utils/wrappedCurrency.ts","components/SearchModal/types.ts","config/constants/contracts.ts","config/constants/lists.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","config/constants/tokens3.ts","hooks/useTokenAllowance3.ts","hooks/useApproveCallback3.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","utils/wrappedCurrency3.ts","config/index.ts","views/Pools/helpers.tsx","components/Card/index.tsx","state/lists/hooks.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","state/user/hooks/useUserAddedTokens3.ts","hooks/Tokens3.ts","utils/addressHelpers2.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/prices3.ts","utils/prices.ts","state/multicall/actions.ts","state/farms/hooks.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","state/predictions/helpers.ts","state/predictions/queries.ts","components/ConnectWalletButton.tsx","components/Logo/DoubleLogo2.tsx","state/wallet/hooks3.ts","state/wallet/hooks.ts","config/constants/endpoints.ts","hooks/useRefresh.ts","state/transactions/hooks.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","state/transactions/actions.ts","state/lists/hooks3.ts","state/user/hooks/index3.tsx","config/localization/languages.ts","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","config/constants/farms.ts","hooks/useDebounce.ts","components/Logo/CurrencyLogo.tsx","utils/isZero.ts","state/swap/hooks.ts","utils/compoundApyHelpers.ts","state/lottery/helpers.ts","config/constants/multicall/index3.ts","hooks/useContract3.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","components/Loader/Dots.tsx","components/Loader/CircleLoader.tsx","hooks/usePairs3.ts","hooks/usePairs.ts","state/swap/hooks3.ts","hooks/useTokenBalance.ts","state/transactions/hooks3.tsx","contexts/Localization/helpers.ts","config/index3.ts","state/block/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","utils/wallet.ts","config/constants/nfts.ts","hooks/useAuth.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","utils/getRpcUrl.ts","config/abi/erc20.ts","components/Logo/CurrencyLogo2.tsx","utils/currencyId.ts","utils/currencyId3.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","state/user/hooks/helpers3.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","utils/trades3.ts","hooks/Trades3.ts","utils/wallet3.ts","components/TransactionConfirmationModal3/index.tsx","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","hooks/usePreviousValue.ts","components/Tags.tsx","config/constants/ifo.ts","utils/web3React.ts","state/block/index.ts","hooks/useFetchListCallback.ts","utils/ENS/parseENSAddress.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/ImportToken.tsx","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel3/NumericalInput.tsx","components/CurrencyInputPanel3/index.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/SearchModal/filtering3.ts","utils/getTokenLogoURL.ts","config/constants/teams.ts","hooks/useTotalSupply.ts","hooks/useTotalSupply3.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","components/Menu/SubNav2.tsx","views/Page2.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","components/Logo/ListLogo.tsx","state/application/actions.ts","utils/getTokenList.ts","utils/contenthashToUri.ts","utils/ENS/resolveENSContentHash.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","hooks/useParsedQueryString.ts","utils/maxAmountSpend3.ts","utils/maxAmountSpend.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","state/burn/actions.ts","hooks/usePersistState.ts","utils/achievements.ts","utils/latinise.ts","components/UnsupportedCurrencyFooter3.tsx","state/mint/hooks3.ts","views/AddLiquidity2/ConfirmAddModalBottom2.tsx","views/AddLiquidity2/PoolPriceBar3.tsx","views/AddLiquidity2/index.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","utils/getTimePeriods.ts","components/App/AppBody.tsx","components/Loader/PageLoader.tsx","state/collectibles/index.ts","components/PositionCard/index.tsx","components/PositionCard3/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","components/App/Settings/TransactionSettings.tsx","state/transactions/actions3.ts","state/achievements/helpers.ts","state/achievements/index.ts","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/ImportRow3.tsx","components/SearchModal/CurrencyList3.tsx","components/SearchModal/sorting3.ts","components/SearchModal/CurrencySearch3.tsx","components/SearchModal/ImportToken3.tsx","hooks/useFetchListCallback2.ts","components/SearchModal/ImportList2.tsx","components/SearchModal/CurrencySearchModal3.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/ApeSwap/components/AddressInputPanel3.tsx","views/ApeSwap/components/styleds.tsx","views/ApeSwap/components/FormattedPriceImpact3.tsx","views/ApeSwap/components/SwapModalFooter3.tsx","views/ApeSwap/components/SwapModalHeader3.tsx","views/ApeSwap/components/ConfirmSwapModal3.tsx","hooks/useLast.ts","views/ApeSwap/components/SwapRoute3.tsx","views/ApeSwap/components/AdvancedSwapDetails3.tsx","views/ApeSwap/components/AdvancedSwapDetailsDropdown3.tsx","views/ApeSwap/components/TradePrice3.tsx","views/ApeSwap/components/ImportTokenWarningModal.tsx","views/ApeSwap/components/ProgressSteps.tsx","hooks/useSwapCallback3.ts","hooks/useWrapCallback3.ts","views/ApeSwap/components/SwapWarningModal/SafemoonWarning.tsx","views/ApeSwap/components/SwapWarningModal/BondlyWarning.tsx","views/ApeSwap/components/SwapWarningModal/Acknowledgement.tsx","views/ApeSwap/components/SwapWarningModal/index.tsx","views/ApeSwap/index.tsx","views/ApeSwap/components/confirmPriceImpactWithoutFee3.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/AddLiquidity2/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/RemoveLiquidity2/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Field","typeInput","createAction","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","Column","ColumnCenter","AutoColumn","CAKE","ChainId","MAINNET","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","tokens","bnb","symbol","projectLink","cake","address","decimals","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","babyvizsla","vizslaswap","shib","lamea","test1","ample","skeleton","hvi","bvc","ace","etc","hank","fps","getAddress","getCakeAddress","getHVIAddress","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getWbnbAddress","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","BIG_ZERO","BigNumber","BIG_ONE","BIG_NINE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","ROUTER_ADDRESS","ROUTER_ADDRESS2","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","JSBI","BigInt","ONE_BIPS","Percent","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","PoolIds","PoolCategory","NftType","LotteryStatus","AuctionStatus","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","MULTICALL_NETWORKS","useIfoV1Contract","useMemo","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useERC721","getErc721Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLotteryV2Contract","getLotteryV2Contract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useFarmAuctionContract","getFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","abi","signer","signerOrProvider","bep20Abi","erc721Abi","ifoV1Abi","ifoV2Abi","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","cakeAbi","getHVIContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","lotteryV2Abi","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","farmAuctionAbi","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","useSelector","multicall","dispatch","useDispatch","serializedCallKeys","JSON","stringify","filter","c","map","toCallKey","sort","callKeys","parse","length","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useSingleCallResult","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","FarmStakedOnly","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","getRouterContract2","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","res","i","multicallv2","requireSuccess","tryAggregate","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","reduce","newMap","token","tokenMap_","useAllTokens","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","currencyId","isBNB","toUpperCase","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","serializedToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","CurrencyModalView","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","summary","approval","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","activeListUrls","url","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","listUrl","requestId","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","serializedTokensMap","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","usePriceHVIBusd","useTheme","StyledThemeContext","tokensymbol2","tokensymbol3","tokensymbol4","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","request","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","RefreshContext","fast","slow","useAllTransactions","isTransactionRecent","allTransactions","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","resolverAddress","resolverAddressResult","resolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","code","languageList","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","singleHopOnly","setSingleHopOnly","onChangeRecipient","useSwapActionHandlers","title","onBack","maxWidth","variant","mb","window","prompt","bold","fontSize","TransactionSettings","rawSlippage","setRawSlippage","setDeadline","mt","ml","checked","onChange","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","href","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","justifyContent","scale","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","mr","as","Link","to","lpSymbol1","lpSymbol2","lpSymbol3","lpAddresses","isEvent","isCommunity","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","StyledLogo","Logo","uriLocations","useHttpLocations","srcs","getTokenLogoURL","alt","hexNumberString","useSwapState","onCurrencySelection","onSwitchTokens","onUserInput","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","Dots","span","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useTotalSupply2","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","getItem","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","getNodeUrl","sample","uriToHttp","uri","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","small","textAlign","TransactionSubmittedContent","currencyToAdd","external","isMetaMask","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","usePreviousValue","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","blockSlice","useFetchListCallback","useWeb3Provider","ensResolver","resolveENSContentHash","sendDispatch","nanoid","getTokenList","parseENSAddress","ensAddress","ensPath","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","inactiveTokenList","isAdded","opacity","minWidth","ImportToken","handleCurrencySelect","setConfirmed","addToken","gridTemplateRows","gridGap","userSelect","disabled","className","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","placeholder","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","selectedCurrencyBalance","translatedLabel","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","val","CurrencySearchModal","ens","resolvedContentHash","contenthash","useENSContentHash","contenthashToUri","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","textColor","users","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","DEFAULT_META","StyledPage","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","StyledNav","nav","Nav","location","activeIndex","xs","flexGrow","SubNav","setStateLastUpdated","previousLastUpdated","StyledListLogo","ListLogo","tokenListValidator","Ajv","allErrors","compile","schema","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","parseArrays","ignoreQueryPrefix","maxAmountSpend","greaterThan","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","height","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","handleInput","e","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","Footer","ManageTokens","setSearchQuery","inputRef","checksummedInput","searchToken","removeToken","handleRemoveAll","isAddressValid","isWarning","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity2","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","marginTop","showUnwrapped","AddLiquidity","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","BodyWrapper","AppBody","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","onBlur","isSuccess","pl","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Outer","Inner","PageHeader","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","onSelect","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","fixedList","debouncedQuery","invertSearchOrder","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","focus","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","earningsBusd2","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","endIcon","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","ImageWrapper","ApeSwap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","Swap","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectToAddLiquidity2","RedirectOldAddLiquidityPathStructure2","RedirectDuplicateTokenIds2","RedirectOldRemoveLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure2","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Listing","Partnership","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","Liquidity2","PoolFinder","PoolFinder2","RemoveLiquidity","RemoveLiquidity2","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd7843e6.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpSymbol2: string\n  lpSymbol3: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens3'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index3'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks3'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { ChainId, Token } from '@pancakeswap2/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index3'\nimport useTokenAllowance from './useTokenAllowance3'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks3'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices3'\nimport { calculateGasMargin } from '../utils/index3'\nimport { useTokenContract } from './useContract3'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers3'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks3'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens3'\nimport { isAddress } from '../utils/index3'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract3'\nimport { filterTokens } from '../components/SearchModal/filtering3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens3'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index3'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index3'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 21,\n    stakingToken: tokens.lamea,\n    earningToken: tokens.lamea,\n    number:'21',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LAMEA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.69',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 22,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lamea,\n    number:'22',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x495Cd5Fc0dF972A028AD50c7be23d2350702B228',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 23,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lamea,\n    number:'23',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 20,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.etc,\n    number:'20',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x78D1d79449da238bA76FB47CAff92De04C468622',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000037128',\n    sortOrder: 200,\n    isFinished: false,\n    },\n    {\n      sousId: 19,\n      stakingToken: tokens.vizslaswap,\n      earningToken: tokens.etc,\n      number:'19',\n      tokensymbol2: 'OPEN',\n      tokensymbol3: 'VIZSLASWAP',\n      tokensymbol4: 'ANTIWHALE',\n      withdrawtime: 'WITHDRAWAL FEE',\n      withdrawtime2: '4%',\n      withdrawtime3: '',\n      withdrawtime4: '',\n      contractAddress: {\n        97: '',\n        56: '0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E',\n      },\n      poolCategory: PoolCategory.CORE,\n      harvest: true,\n      tokenPerBlock: '0.0000037128',\n      sortOrder: 200,\n      isFinished: false,\n      },\n   {\n    sousId: 18,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ace,\n    number:'18',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x89Cf97e3D99FDE78670BB9D87266BA366B626bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '14',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 17,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hank,\n    number:'17',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3472000',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009722',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000053125',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000002776',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   \n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { Currency } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo2'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { useMulticallContract } from 'hooks/useContract3'\nimport { isAddress } from 'utils/index3'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ChainId, Token } from '@pancakeswap2/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist2.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { Pair, Token } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers3'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'APE-LP', 'ApeSwapFinance LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpSymbol2: '',\n    lpSymbol3: '',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 18,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol2: '(APESWAP)',\n    lpSymbol3: 'apeliquidity',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 19,\n    lpSymbol: 'LAMEA-BNB LP',\n    lpSymbol1:'19',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 15,\n    lpSymbol: 'HANK-BNB LP',\n    lpSymbol1:'15',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x16B84784B13183c55e57C9F586697a369eBCF367',\n    },\n    token: tokens.hank,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 16,\n    lpSymbol: 'ACE-BNB LP',\n    lpSymbol1:'16',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x2f9916c808b3F7687d51880aeda629F61051e4Ef',\n    },\n    token: tokens.ace,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 17,\n    lpSymbol: 'ETC-BNB LP',\n    lpSymbol1:'17',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x4d2d10B785BF000Dfd19e92cE2D2aE79E119b956',\n    },\n    token: tokens.etc,\n    quoteToken: tokens.wbnb,\n   },\n  \n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers3'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index3'\nimport { getContract } from '../utils/index3'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpSymbol2: '?',\n    lpSymbol3: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens3'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades3'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices3'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index3'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions3'\nimport { TransactionDetails } from './reducer3'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks3'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index3'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades3'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index3'\nimport { PairState, usePairs } from './usePairs3'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nimport { useUnsupportedTokens } from './Tokens3'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index3'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet3'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index3'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index3'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal3'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index2'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { isAddress } from '../../utils/index3'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","const getTokenLogoURL = (address: string) =>\n  `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useTokenContract } from './useContract3'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool2') ||\n    pathname.includes('/createape') ||\n    pathname.includes('/addapeliquidity') ||\n    pathname.includes('/removeape') ||\n    pathname.includes('/apefind') ||\n    pathname.includes('/apeliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool2\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav2'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk'\nimport { MIN_BNB } from '../config/constants/index3'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs3'\nimport useTotalSupply from 'hooks/useTotalSupply3'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency3'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks3'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index3'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenuItem, ButtonMenu } from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard3'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index3'\nimport { PairState } from '../../hooks/usePairs3'\nimport { useCurrency } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback3'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks3'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks3'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index3'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency3'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom2'\nimport { currencyId } from '../../utils/currencyId3'\nimport PoolPriceBar from './PoolPriceBar3'\nimport Page from '../Page2'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity2() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addapeliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addapeliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addapeliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addapeliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addapeliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n             <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link , useLocation} from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n       <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply3'\n\nimport { useTokenBalance } from '../../state/wallet/hooks3'\nimport { currencyId } from '../../utils/currencyId3'\nimport { unwrappedToken } from '../../utils/wrappedCurrency3'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo2'\nimport { DoubleCurrencyLogo } from '../Logo/index2'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index3'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeape/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addapeliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks3'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens3'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index2'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index3'\nimport ImportRow from './ImportRow3'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks3'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens3'\nimport { isAddress } from '../../utils/index3'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList3'\nimport { filterTokens, useSortedTokensByQuery } from './filtering3'\nimport useTokenComparator from './sorting3'\n\nimport ImportRow from './ImportRow3'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index3'\nimport { getBscScanLink } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport { ListLogo } from 'components/Logo/index2'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback2'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks3'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch3'\nimport ImportToken from './ImportToken3'\nimport Manage from './Manage'\nimport ImportList from './ImportList2'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: 'https://lottery.cryptochiptoken.com/',\n    status: {\n      text: t('Win').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: '/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: '/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n  \n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n  const earningsBusd2 = earningsBusd.div(cakePriceBusd)\n  \n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      \n      <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n      <Text  color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text  color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n        <Text color=\"textSubtle\">{t('Collect in VIZSLASWAP')}</Text>\n        {earningsBusd2 && !earningsBusd2.isNaN() ? (\n              <Balance\n                decimals={earningsBusd2.gt(0) ? 3 : 0}\n                fontSize=\"18px\"\n                bold\n                lineHeight=\"1\"\n                value={earningsBusd2.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n      </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : antiwhalepools\n  } \n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as=\"a\" width={50} height={35}  href=\"/pools\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as=\"a\"width={50} height={35}  href=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index3'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices3'\nimport { ONE_BIPS } from '../../../config/constants/index3'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index2'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal3'\nimport SwapModalFooter from './SwapModalFooter3'\nimport SwapModalHeader from './SwapModalHeader3'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport SwapRoute from './SwapRoute3'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails3'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index3'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { useCurrencyBalance } from '../state/wallet/hooks3'\nimport { useWETHContract } from './useContract3'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon,ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers2'\nimport AddressInputPanel from './components/AddressInputPanel3'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown3'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee3'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice3'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback3'\nimport { useSwapCallback } from '../../hooks/useSwapCallback3'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback3'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks3'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices3'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page2'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function ApeSwap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/apeswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n        <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index3'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon, ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n          <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity2 from './index'\n\nexport function RedirectToAddLiquidity2() {\n  return <Redirect to=\"/addapeliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure2() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addapeliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity2 />\n}\n\nexport function RedirectDuplicateTokenIds2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addapeliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity2 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure2() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool2\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeape/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure2\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport ApeSwap from './views/ApeSwap'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport {\n  RedirectDuplicateTokenIds2,\n  RedirectOldAddLiquidityPathStructure2,\n  RedirectToAddLiquidity2,\n} from './views/AddLiquidity2/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure2 from './views/RemoveLiquidity2/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Listing = lazy(() => import('./views/Listing'))\nconst Partnership = lazy(() => import('./views/Partnership'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst AddLiquidity2 = lazy(() => import('./views/AddLiquidity2'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst Liquidity2 = lazy(() => import('./views/Pool2'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst PoolFinder2 = lazy(() => import('./views/PoolFinder2'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst RemoveLiquidity2 = lazy(() => import('./views/RemoveLiquidity2'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route exact path=\"/whitepaper\">\n              <Listing />\n            </Route>\n            <Route exact path=\"/partnership\">\n              <Partnership />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/apeswap\">\n              <ApeSwap />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/apefind\">\n              <PoolFinder2 />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/apeliquidity\">\n              <Liquidity2 />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact strict path=\"/createape\">\n              <RedirectToAddLiquidity2 />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/addapeliquidity\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/addapeliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/createape\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/createape/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/removeape/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure2 />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n            <Route exact strict path=\"/removeape/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity2 />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pool2\">\n              <Redirect to=\"/apeliquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}