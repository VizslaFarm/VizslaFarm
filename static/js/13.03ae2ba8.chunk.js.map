{"version":3,"sources":["views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Teams/components/TeamCard.tsx","views/Teams/Team.tsx","state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx"],"names":["NoProfileCard","t","useTranslation","mb","isActive","alignItems","justifyContent","flexDirection","scale","as","Link","to","id","mt","TeamHeader","useProfile","isInitialized","profile","showProfileCallout","HeaderWrapper","color","bold","SecondaryCard","styled","Text","theme","colors","tertiary","defaultProps","p","StatBox","Icon","icon","title","subtitle","isDisabled","props","width","mr","textTransform","fontSize","Wrapper","div","mediaQueries","md","Avatar","img","AvatarWrap","StyledCard","Card","StyledCardHeader","CardHeader","bg","TeamName","Heading","attrs","StatRow","TeamCard","team","background","src","images","alt","textColor","name","description","CommunityIcon","users","PrizeIcon","ComingSoon","Team","idStr","useParams","Number","isValidTeamId","teams","findIndex","useTeam","Page","PageLoader","useSelector","state","data","dispatch","useAppDispatch","useEffect","fetchTeam","useTeams","isLoading","fetchTeams","textSubtle","children","height"],"mappings":"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","file":"static/js/13.03ae2ba8.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Link } from 'react-router-dom'\n\nconst NoProfileCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading scale=\"lg\" mb=\"8px\">\n              {t('You havenâ€™t set up your profile yet!')}\n            </Heading>\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\n          </div>\n          <Button as={Link} to=\"/profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\n            {t('Set up now')}\n          </Button>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\nimport NoProfileCard from './NoProfileCard'\n\nconst TeamHeader = () => {\n  const { t } = useTranslation()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Team } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport ComingSoon from 'views/Profile/components/ComingSoon'\nimport StatBox from 'views/Profile/components/StatBox'\n\ninterface TeamCardProps {\n  team: Team\n}\n\nconst Wrapper = styled.div`\n  padding-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 24px;\n  }\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  height: 64px;\n  margin-top: -12px;\n  width: 64px;\n  border: solid 2px white;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 128px;\n    margin-top: -24px;\n    width: 128px;\n  }\n`\n\nconst AvatarWrap = styled.div`\n  margin-bottom: 8px;\n  text-align: center;\n`\n\nconst StyledCard = styled(Card)`\n  overflow: visible;\n`\n\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\n  position: relative;\n  background: url(${({ bg }) => bg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  padding-top: 0;\n  text-align: center;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst StatRow = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 32px;\n  }\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ team }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <StyledCard>\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\n          <AvatarWrap>\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n          </AvatarWrap>\n          <TeamName color={team.textColor}>{team.name}</TeamName>\n          <Text as=\"p\" color={team.textColor}>\n            {t(team.description)}\n          </Text>\n        </StyledCardHeader>\n        <CardBody>\n          <StatRow>\n            <StatBox icon={CommunityIcon} title={team.users} subtitle={t('Active Members')} />\n            <StatBox icon={PrizeIcon} title={t('Coming Soon')} subtitle={t('Team Points')} isDisabled />\n          </StatRow>\n          <Heading as=\"h3\">{t('Team Achievements')}</Heading>\n          <ComingSoon />\n        </CardBody>\n      </StyledCard>\n    </Wrapper>\n  )\n}\n\nexport default TeamCard\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport { Link, Redirect, useParams } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text } from '@pancakeswap/uikit'\nimport PageLoader from 'components/Loader/PageLoader'\nimport teams from 'config/constants/teams'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTeam } from 'state/teams/hooks'\nimport TeamCard from './components/TeamCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Team = () => {\n  const { id: idStr }: { id: string } = useParams()\n  const id = Number(idStr)\n  const { t } = useTranslation()\n  const isValidTeamId = teams.findIndex((team) => team.id === id) !== -1\n  const team = useTeam(id)\n\n  if (!isValidTeamId) {\n    return <Redirect to=\"/404\" />\n  }\n\n  if (!team) {\n    return <PageLoader />\n  }\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex mb=\"24px\">\n        <Link to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </Link>\n      </Flex>\n      <TeamCard team={team} />\n    </Page>\n  )\n}\n\nexport default Team\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n"],"sourceRoot":""}