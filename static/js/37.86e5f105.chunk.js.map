{"version":3,"sources":["components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/hooks/useUnstakeFarms.ts","views/Farms/hooks/useStakeFarms.ts","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/hooks/useApproveFarm.ts","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ModalInfo.tsx","views/Farms/components/InfoCard.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx"],"names":["Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","t","useTranslation","role","color","bold","defaultProps","ViewMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","width","height","href","symbol","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol1","lpLabel2","alignItems","mb","src","alt","flexDirection","mt","split","fontSize","variant","StyledSpacer","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledTokenInput","input","isWarning","shadows","warning","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","onChange","onSelectMax","value","inputTitle","decimals","isBalanceZero","style","position","pl","balance","balanceBigNumber","BigNumber","gt","lt","toLocaleString","toFixed","ROUND_DOWN","displayBalance","pattern","inputMode","step","min","placeholder","scale","mr","external","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","useToast","toastSuccess","toastError","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","fullBalanceNumber","handleChange","useCallback","e","currentTarget","validity","valid","replace","handleSelectMax","title","disabled","isFinite","eq","a","console","error","alignSelf","WithdrawModal","useUnstakeFarms","pid","masterChefContract","useMasterchef","onUnstake","amount","unstakeFarm","useStakeFarms","onStake","stakeFarm","txHash","info","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","location","useLocation","dispatch","useAppDispatch","account","useWeb3React","lpPrice","useLpTokenPrice","handleStake","fetchFarmUserDataAsync","pids","handleUnstake","stakedBalanceBigNumber","getBalanceAmount","useModal","onPresentDeposit","onPresentWithdraw","Balance","getBalanceNumber","times","unit","prefix","some","item","pathname","includes","useHarvestFarm","farmPid","onReward","harvestFarm","HarvestAction","earnings","cakePrice","usePriceCakeBusd","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","toNumber","useApproveFarm","lpContract","onApprove","approve","address","ethers","constants","MaxUint256","tx","wait","receipt","status","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpAddress","getAddress","isApproved","isGreaterThan","useERC20","handleApprove","textTransform","pr","lpSymbol","ConnectWalletButton","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","secondary","FarmCard","displayApr","showExpandableSection","setShowExpandableSection","liquidity","undefined","maximumFractionDigits","toUpperCase","lpSymbol2","earnLabel","dual","lpLabel3","lpSymbol3","liquidityUrlPathParts","quoteToken","token","BASE_ADD_LIQUIDITY_URL","isPromotedFarm","isEvent","lpSymbol1","toLocaleLowerCase","isActive","isCommunity","tokenSymbol2","display","apr","CardActionsContainer","getBscScanLink","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","IconImage","Image","Farm","image","label","label2","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","ref","LiquidityWrapper","Liquidity","displayLiquidity","Number","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","ml","Staked","marginBottom","marginTop","expandAnimation","keyframes","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","useEffect","isXs","tableSchema","columnNames","column","Object","keys","key","columnIndex","indexOf","createElement","colSpan","card","dropShadow","background","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","useRef","data","columns","rows","useTable","sortColumn","row","original","current","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ModalInfo","backgroundDisabled","TooltipComponent","useTheme","useCakeVaultContract","useCakeVault","estimatedCakeBountyReward","callFee","totalPendingCakeHarvest","fees","bnbprice0","usePriceBnbBusd","bnbprice","cakePriceBusd","vizslaprice","hviprice0","usePriceHVIBusd","hviprice","lgcprice0","usePriceLGCBusd","lgcprice","lameaprice0","usePriceLameaBusd","lameaprice","bvcprice0","usePriceBVCBusd","bvcprice","babyvizslaprice0","usePriceBABYVIZSLABusd","babyvizslaprice","fpsprice0","usePriceFpsBusd","fpsprice","skeletonprice0","usePriceskeletonBusd","skeletonprice","ethprice0","usePriceETCBusd","ehtprice","buildprice0","usePricebuildBusd","buildprice","ataliraprice0","usePriceATALIRABusd","ataliraprice","exzoprice0","usePriceEXZOBusd","exzoprice","tripprice0","usePricetripBusd","tripprice","liraprice0","usePriceliraBusd","liraprice","babyprice0","usePricebabyBusd","babyprice","vizslalpbalance","useFarm1","getCakeAddress","bnblpbalance","kombo1","useTotalSupplyFarm1","kombo2","teljes","teljes2","teljes3","minden","masterfarm1","useMaster1","getFarm1Address","farm1","vizslalpbalance2","useFarm2","bnblpbalance2","kombo3","useTotalSupplyFarm2","kombo4","teljes4","teljes5","teljes6","minden1","masterfarm2","getFarm2Address","farm2","vizslalpbalance3","useFarm3","busdlpbalance","getBusdAddress","kombo5","useTotalSupplyFarm3","kombo6","teljes7","teljes8","teljes9","minden2","masterfarm3","getFarm3Address","farm3","vizslalpbalance4","useFarm4","busdlpbalance2","kombo7","useTotalSupplyFarm4","kombo8","teljes10","teljes11","teljes12","minden3","masterfarm4","getFarm4Address","farm4","hvilpbalance","useFarm5","getHVIAddress","bnblpbalance3","kombo9","useTotalSupplyFarm5","kombo10","teljes13","teljes14","teljes15","minden4","masterfarm5","getFarm5Address","farm5","hvilpbalance2","useFarm6","busdlpbalance3","kombo11","useTotalSupplyFarm6","kombo12","teljes16","teljes17","teljes18","minden5","masterfarm6","getFarm6Address","farm6","hvilpbalance3","useFarm7","vizslalpbalance5","kombo13","useTotalSupplyFarm7","farm7","getFarm7Address","lamealpbalance","useFarm8","getLAMEAAddress","vizslalpbalance6","kombo15","useTotalSupplyFarm8","farm8","getFarm8Address","bvclpbalance","useFarm9","getbvcAddress","vizslalpbalance7","kombo17","useTotalSupplyFarm9","farm9","getFarm9Address","babylpbalance","useFarm10","getbabyvizslaAddress","vizslalpbalance8","kombo19","useTotalSupplyFarm10","farm10","getFarm10Address","vizslalpbalance9","useFarm11","fpslpbalance","getfpsAddress","kombo21","useTotalSupplyFarm11","farm11","getFarm11Address","vizslalpbalance10","useFarm12","skeletonlpbalance","getskeletonAddress","kombo23","useTotalSupplyFarm12","farm12","getFarm12Address","vizslalpbalance11","useFarm13","buildlpbalance","getbuildAddress","kombo25","useTotalSupplyFarm13","farm13","getFarm13Address","vizslalpbalance12","useFarm14","ethlpbalance","getethAddress","kombo27","useTotalSupplyFarm14","farm14","getFarm14Address","vizslalpbalance13","useFarm15","ataliralpbalance","getataliraAddress","kombo29","useTotalSupplyFarm15","farm15","getFarm15Address","vizslalpbalance16","useFarm16","exzolpbalance","getexzoAddress","kombo31","useTotalSupplyFarm16","farm16","getFarm16Address","bnblpbalance4","useFarm17","lamealpbalance2","kombo33","useTotalSupplyFarm17","farm17","getFarm17Address","bnblpbalance5","useFarm18","bvclpbalance2","kombo35","useTotalSupplyFarm18","farm18","getFarm18Address","bnblpbalance6","useFarm19","babyvizslalpbalance","kombo37","useTotalSupplyFarm19","farm19","getFarm19Address","vizslalpbalance17","useFarm20","triplpbalance","gettripAddress","kombo39","useTotalSupplyFarm20","farm20","getFarm20Address","vizslalpbalance18","useFarm22","liralpbalance","geLiraAddress","kombo43","useTotalSupplyFarm22","farm22","getFarm22Address","vizslalpbalance19","useFarm23","lgclpbalance","getlgcAddress","kombo45","useTotalSupplyFarm23","farm23","getFarm23Address","bnblpbalance7","useFarm24","lgclpbalance2","kombo47","useTotalSupplyFarm24","farm24","getFarm24Address","bnblpbalance8","useFarm26","babybalance","getbabyAddress","kombo49","useTotalSupplyFarm26","farm25","getFarm26Address","vizslalpbalance20","useFarm27","babybalance2","kombo51","useTotalSupplyFarm27","farm26","getFarm27Address","estimatedDollarBountyReward","hasFetchedDollarBounty","gte","hasFetchedCakeBounty","fee","tooltipPadding","right","BountyCard","fontWeight","onPresentBountyModal","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","getDisplayApr","cakeRewardsApr","lpRewardsApr","Farms","path","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","localStorageKey","setViewMode","sortOption","setSortOption","chosenFarmsLength","isArchived","isInactive","farmminden","usePollFarmsData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","ChainId","MAINNET","lowercaseQuery","latinise","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","chosenFarmsMemoized","chosenFarms","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","PageHeader","InfoCard","Page","checked","Select","options","option","marginLeft","SearchInput","event","target","sort","b","exact","renderContent","Loading"],"mappings":"ybAUMA,EAAUC,IAAOC,IAAV,sJAOD,qBAAGC,MAAkBC,OAAOC,WAIlCC,EAAkE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1EC,EAAMC,cAAND,EAER,OACE,eAACT,EAAD,CAAS,aAAYS,EAAE,mCAAoCE,KAAK,SAASJ,QAAS,kBAAMA,KAAxF,UACE,cAAC,KAAD,CAAMK,MAAM,UAAUC,MAAI,EAA1B,SACcJ,EAAXD,EAAa,OAAY,aAE3BA,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCF,EAAwBQ,aAAe,CACrCN,UAAU,GAGGF,I,0HCyDHS,G,eDzDGT,K,SEvBAU,GAXkB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aAE/CC,EAAoBC,eACpBC,EAAkCJ,EAAoBA,EAF5CK,IAEyE,KACnFC,EAA6BL,EAAeA,EAHlCI,IAG0D,KAGpEE,EAAcD,GAAsBA,IAAuBJ,EAA4BI,EAAR,MACrF,MAAM,GAAN,OAFGF,GAA2BA,IAA4BF,EAA4BE,EAAR,MAE9E,YAAuBG,ICEnBxB,GAAUC,IAAOC,IAAV,iDAIPuB,GAAqBxB,YAAOyB,KAAPzB,CAAH,iDA6BT0B,GAzB0C,SAAC,GAOnD,IANLC,EAMI,EANJA,eACAC,EAKI,EALJA,YACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEQxB,EAAMC,cAAND,EAER,OACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMyB,eAAe,gBAArB,UACE,eAAC,KAAD,WAAOzB,EAAE,mBAAT,OACCsB,EAAsB,cAAC,KAAD,UAAOA,IAA8B,cAAC,KAAD,CAAUI,MAAO,GAAIC,OAAQ,SAEzFN,GACA,cAACL,GAAD,CAAoBY,KAAMJ,EAA1B,SAA4CxB,EAAE,eAAgB,CAAE6B,OAAQN,MAE1E,cAACP,GAAD,CAAoBY,KAAMT,EAA1B,SAA2CnB,EAAE,mBAC7C,cAACgB,GAAD,CAAoBY,KAAMR,EAA1B,SAAwCpB,EAAE,uB,SC3B1CT,GAAUC,YAAOsC,IAAPtC,CAAH,kEAMPuC,GAAgBvC,YAAOwC,KAAPxC,CAAH,iDA8BJyC,GA1BuC,SAAC,GAOhD,IANLV,EAMI,EANJA,QACAW,EAKI,EALJA,WACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,OACE,eAAC,GAAD,CAASb,eAAe,gBAAgBc,WAAW,SAASC,GAAG,OAA/D,UACE,cAAC,KAAD,CAAOC,IAAG,wBAAmBL,EAAnB,QAAoCM,IAAKL,EAAeX,MAAO,GAAIC,OAAQ,KACrF,eAAC,IAAD,CAAMgB,cAAc,SAASJ,WAAW,WAAxC,UACE,cAAC,IAAD,CAASK,GAAG,MAAZ,SAAmBrB,EAAQsB,MAAM,KAAK,KACtC,eAAC,IAAD,CAAMF,cAAc,SAASJ,WAAW,WAAxC,UACA,cAAC,KAAD,CAAMO,SAAS,OAAO3C,MAAM,UAAWqC,GAAG,MAA1C,SAAiDF,EAASO,MAAM,KAAK,KACrE,eAAC,IAAD,CAAMpB,eAAe,SAArB,UACGU,EAAkB,cAAC,KAAD,IAAmB,cAAC,KAAD,IACtC,cAACJ,GAAD,CAAegB,QAAQ,YAAvB,SAAoCb,iB,iECZxCc,GAAexD,IAAOC,IAAV,+DACN,SAACwD,GAAD,OAAWA,EAAMC,QAClB,SAACD,GAAD,OAAWA,EAAMC,QAGbC,GA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACL,GAAD,CAAcE,KAAME,KCLvBI,GAAqBhE,IAAOC,IAAV,qIAEF,SAACwD,GAAD,OAAWA,EAAMvD,MAAMC,OAAO8D,eAGvC,SAACR,GAAD,OAAWA,EAAMvD,MAAM2D,QAAQ,MAGtCK,GAAoBlE,IAAOC,IAAV,wCAIRkE,GA1BgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUK,OAC3C,OACE,cAACT,GAAD,UACGM,IAAMC,SAASG,IAAIN,GAAU,SAACO,EAAOC,GAAR,OAC5B,qCACE,cAACV,GAAD,UAAoBS,IACnBC,EAAIP,EAAI,GAAK,cAAC,GAAD,aCelBQ,GAAmB7E,IAAOC,IAAV,0MAGA,qBAAGC,MAAkBC,OAAO2E,SAX7B,SAAC,GAAkC,IAAD,IAA/BC,iBAA+B,SAAZ7E,EAAY,EAAZA,MACzC,OAAI6E,EACK7E,EAAM8E,QAAQC,QAGhB/E,EAAM8E,QAAQE,SASZ,qBAAGhF,MAAkBC,OAAOgF,QAKjCC,GAAcpF,YAAOqF,KAAPrF,CAAH,0KAMb,qBAAGE,MAAkBoF,aAAaC,MAIlC,qBAAGrF,MAAkBoF,aAAaE,MAKhCC,GAAqBzF,YAAO0F,KAAP1F,CAAH,uGAmET2F,GA3D+B,SAAC,GASxC,IARLC,EAQI,EARJA,IACAvD,EAOI,EAPJA,OACAwD,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,MACA/D,EAGI,EAHJA,gBACAgE,EAEI,EAFJA,WAEI,IADJC,gBACI,MADO,GACP,EACIzF,EAAMC,cAAND,EACF0F,EAAwB,MAARN,IAAgBA,EAatC,OACE,sBAAKO,MAAO,CAAEC,SAAU,YAAxB,UACE,eAACvB,GAAD,CAAkBE,UAAWmB,EAA7B,UACE,eAAC,IAAD,CAAMjE,eAAe,gBAAgBoE,GAAG,OAAxC,UACE,cAAC,KAAD,CAAM/C,SAAS,OAAf,SAAuB0C,IACvB,cAAC,KAAD,CAAM1C,SAAS,OAAf,SAAuB9C,EAAE,qBAAsB,CAAE8F,QAhBlC,SAACA,GACtB,GAAIJ,EACF,MAAO,IAET,IAAMK,EAAmB,IAAIC,YAAUF,GACvC,OAAIC,EAAiBE,GAAG,IAAMF,EAAiBG,GAAG,MACzCH,EAAiBI,iBAEnBJ,EAAiBK,QAAQ,EAAGJ,YAAUK,YAQmBC,CAAelB,UAE3E,eAAC,IAAD,CAAM7C,WAAW,WAAWd,eAAe,eAA3C,UACE,cAACmD,GAAD,CACE2B,QAAO,8BAAyBd,EAAzB,MACPe,UAAU,UACVC,KAAK,MACLC,IAAI,IACJrB,SAAUA,EACVsB,YAAY,IACZpB,MAAOA,IAET,cAAC,IAAD,CAAQqB,MAAM,KAAK9G,QAASwF,EAAauB,GAAG,MAA5C,SACG7G,EAAE,SAEL,cAAC,KAAD,CAAM8C,SAAS,OAAf,SAAuBjB,UAG1B6D,GACC,eAACT,GAAD,CAAoBnC,SAAS,OAAO3C,MAAM,UAA1C,UACGH,EAAE,sBADL,IAC6B,IAC3B,cAAC,KAAD,CAAM8C,SAAS,OAAO1C,MAAM,EAAOwB,KAAMJ,EAAiBsF,UAAQ,EAAC3G,MAAM,UAAzE,SACGH,EAAE,eAAgB,CAAE6B,oB,SCzBlBkF,GAtEmC,SAAC,GAAoE,IAAlE3B,EAAiE,EAAjEA,IAAK4B,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,UAAiD,IAAtCC,iBAAsC,MAA1B,GAA0B,EAAtB1F,EAAsB,EAAtBA,gBAC9F,EAAsB2F,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAqCC,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACtB,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACQ1H,EAAMC,cAAND,EACF2H,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsBzC,KAC5B,CAACA,IAEE0C,EAAY,IAAI9B,IAAUoB,GAC1BW,EAAoB,IAAI/B,IAAU2B,GAElCK,EAAeC,uBACnB,SAACC,GACKA,EAAEC,cAAcC,SAASC,OAC3BhB,EAAOa,EAAEC,cAAc5C,MAAM+C,QAAQ,KAAM,QAG/C,CAACjB,IAGGkB,EAAkBN,uBAAY,WAClCZ,EAAOM,KACN,CAACA,EAAaN,IAEjB,OACE,eAAC,KAAD,CAAOmB,MAAOxI,EAAE,mBAAoBiH,UAAWA,EAA/C,UACE,cAAC,GAAD,CACE1B,MAAO6B,EACP9B,YAAaiD,EACblD,SAAU2C,EACV5C,IAAKuC,EACL9F,OAAQqF,EACR1F,gBAAiBA,EACjBgE,WAAYxF,EAAE,WAEhB,eAAC,GAAD,WACE,cAAC,IAAD,CAAQ+C,QAAQ,YAAYjD,QAASmH,EAAWvF,MAAM,OAAO+G,SAAUhB,EAAvE,SACGzH,EAAE,YAEL,cAAC,IAAD,CACE0B,MAAM,OACN+G,SAAUhB,IAAcK,EAAUY,YAAcZ,EAAUa,GAAG,IAAMb,EAAU7B,GAAG8B,GAChFjI,QAAO,wBAAE,uBAAA8I,EAAA,6DACPlB,GAAa,GADN,kBAGCV,EAAUI,GAHX,OAILG,EAAavH,EAAE,WAAYA,EAAE,4CAC7BiH,IALK,gDAOLO,EACExH,EAAE,SACFA,EAAE,uFAEJ6I,QAAQC,MAAR,MAXK,yBAaLpB,GAAa,GAbR,4EAHX,SAoBe1H,EAAZyH,EAAc,aAAkB,gBAGrC,cAAC,KAAD,CAAc7F,KAAMJ,EAAiBmE,MAAO,CAAEoD,UAAW,UAAzD,SACG/I,EAAE,eAAgB,CAAE6B,OAAQqF,UCCtB8B,GAlEqC,SAAC,GAAmD,IAAjDhC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAW7B,EAA0B,EAA1BA,IAA0B,IAArB8B,iBAAqB,MAAT,GAAS,EACrG,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAqCC,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACtB,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACQ1H,EAAMC,cAAND,EACF2H,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsBzC,KAC5B,CAACA,IAEE0C,EAAY,IAAI9B,IAAUoB,GAC1BW,EAAoB,IAAI/B,IAAU2B,GAElCK,EAAeC,uBACnB,SAACC,GACKA,EAAEC,cAAcC,SAASC,OAC3BhB,EAAOa,EAAEC,cAAc5C,MAAM+C,QAAQ,KAAM,QAG/C,CAACjB,IAGGkB,EAAkBN,uBAAY,WAClCZ,EAAOM,KACN,CAACA,EAAaN,IAEjB,OACE,eAAC,KAAD,CAAOmB,MAAOxI,EAAE,qBAAsBiH,UAAWA,EAAjD,UACE,cAAC,GAAD,CACE3B,YAAaiD,EACblD,SAAU2C,EACVzC,MAAO6B,EACPhC,IAAKuC,EACL9F,OAAQqF,EACR1B,WAAYxF,EAAE,aAEhB,eAAC,GAAD,WACE,cAAC,IAAD,CAAQ+C,QAAQ,YAAYjD,QAASmH,EAAWvF,MAAM,OAAO+G,SAAUhB,EAAvE,SACGzH,EAAE,YAEL,cAAC,IAAD,CACEyI,SAAUhB,IAAcK,EAAUY,YAAcZ,EAAUa,GAAG,IAAMb,EAAU7B,GAAG8B,GAChFjI,QAAO,wBAAE,uBAAA8I,EAAA,6DACPlB,GAAa,GADN,kBAGCV,EAAUI,GAHX,OAILG,EAAavH,EAAE,aAAcA,EAAE,0DAC/BiH,IALK,gDAOLO,EACExH,EAAE,SACFA,EAAE,uFAEJ6I,QAAQC,MAAR,MAXK,yBAaLpB,GAAa,GAbR,4EAgBThG,MAAM,OAlBR,SAoBe1B,EAAZyH,EAAc,aAAkB,oB,UCzD5BwB,GAbS,SAACC,GACvB,IAAMC,EAAqBC,eAS3B,MAAO,CAAEC,UAPapB,sBAAW,yCAC/B,WAAOqB,GAAP,UAAAV,EAAA,sEACQW,aAAYJ,EAAoBD,EAAKI,GAD7C,2CAD+B,sDAI/B,CAACH,EAAoBD,MCOVM,GAdO,SAACN,GACrB,IAAMC,EAAqBC,eAU3B,MAAO,CAAEK,QARWxB,sBAAW,yCAC7B,WAAOqB,GAAP,gBAAAV,EAAA,sEACuBc,aAAUP,EAAoBD,EAAKI,GAD1D,OACQK,EADR,OAEEd,QAAQe,KAAKD,GAFf,2CAD6B,sDAK7B,CAACR,EAAoBD,MCanBW,GAAoBrK,IAAOC,IAAV,8EA8FRqK,GAvFqC,SAAC,GAM9C,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,aACA9C,EAGI,EAHJA,UACAgC,EAEI,EAFJA,IACA1H,EACI,EADJA,gBAEQxB,EAAMC,cAAND,EACAyJ,EAAYD,GAAcN,GAA1BO,QACAJ,EAAcJ,GAAgBC,GAA9BG,UACFY,EAAWC,cACXC,EAAWC,eACTC,EAAYC,cAAZD,QACFE,EAAUC,YAAgBtD,GAE1BuD,EAAW,yCAAG,WAAOnB,GAAP,UAAAV,EAAA,sEACZa,EAAQH,GADI,OAElBa,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAFhC,2CAAH,sDAKX0B,EAAa,yCAAG,WAAOtB,GAAP,UAAAV,EAAA,sEACdS,EAAUC,GADI,OAEpBa,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAF9B,2CAAH,sDAKb5C,EAAiB2B,uBAAY,WACjC,IAAM4C,EAAyBC,YAAiBf,GAChD,OAAIc,EAAuB5E,GAAG,IAAM4E,EAAuB3E,GAAG,MACrD2E,EAAuBzE,QAAQ,GAAIJ,IAAUK,YAElDwE,EAAuB5E,GAAG,IAAM4E,EAAuB3E,GAAG,MACrD2B,YAAsBkC,GAAe5D,iBAEvC0E,EAAuBzE,QAAQ,EAAGJ,IAAUK,cAClD,CAAC0D,IAEJ,EAA2BgB,aACzB,cAAC,GAAD,CAAc3F,IAAK4E,EAAchD,UAAWyD,EAAavD,UAAWA,EAAW1F,gBAAiBA,KAD3FwJ,EAAP,oBAGA,EAA4BD,aAC1B,cAAC,GAAD,CAAe3F,IAAK2E,EAAe/C,UAAW4D,EAAe1D,UAAWA,KADnE+D,EAAP,oBA4BA,OACE,eAAC,IAAD,CAAMxJ,eAAe,gBAAgBc,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMI,cAAc,SAASJ,WAAW,aAAxC,UACE,cAAC,IAAD,CAASpC,MAAO4J,EAAcpB,GAAG,GAAK,eAAiB,OAAvD,SAAgErC,MAC/DyD,EAAc9D,GAAG,IAAMsE,EAAQtE,GAAG,IACjC,cAACiF,EAAA,EAAD,CACEpI,SAAS,OACT3C,MAAM,aACNsF,SAAU,EACVF,MAAO4F,YAAiBZ,EAAQa,MAAMrB,IACtCsB,KAAK,OACLC,OAAO,SAlCRvB,EAAcpB,GAAG,GACtB,cAAC,IAAD,CACE7I,QAASkL,EACTvC,SAAU,CAAC,UAAW,YAAY8C,MAAK,SAACC,GAAD,OAAUvB,EAASwB,SAASC,SAASF,MAF9E,SAIGxL,EAAE,cAGL,eAAC6J,GAAD,WACE,cAAC,KAAD,CAAY9G,QAAQ,WAAWjD,QAASmL,EAAmBpE,GAAG,MAA9D,SACE,cAAC,KAAD,CAAW1G,MAAM,UAAUuB,MAAM,WAEnC,cAAC,KAAD,CACEqB,QAAQ,WACRjD,QAASkL,EACTvC,SAAU,CAAC,UAAW,YAAY8C,MAAK,SAACC,GAAD,OAAUvB,EAASwB,SAASC,SAASF,MAH9E,SAKE,cAAC,IAAD,CAASrL,MAAM,UAAUuB,MAAM,kB,SC/E1BiK,GAVQ,SAACC,GACtB,IAAMzC,EAAqBC,eAM3B,MAAO,CAAEyC,SAJa5D,sBAAW,wBAAC,uBAAAW,EAAA,sEAC1BkD,aAAY3C,EAAoByC,GADN,2CAE/B,CAACA,EAASzC,MC8DA4C,GApDuC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAU9C,EAAU,EAAVA,IACzDmB,EAAYC,cAAZD,QACR,EAAqC/C,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACdxH,EAAMC,cAAND,EACR,EAAkCmH,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACQmE,EAAaF,GAAezC,GAA5B2C,SACFI,EAAYC,cACZ/B,EAAWC,eACX+B,EAAqB9B,EAAUS,YAAiBkB,GAAYI,KAC5D9F,EAAiB6F,EAAmB/F,QAAQ,EAAGJ,IAAUK,YACzDgG,EAAeF,EAAqBA,EAAmBG,aAAaL,GAAWM,WAAa,EAMlG,OACE,eAAC,IAAD,CAAM/J,GAAG,MAAMf,eAAe,gBAAgBc,WAAW,SAAzD,UACE,eAAC,IAAD,CAAMI,cAAc,SAASJ,WAAW,aAAxC,UACE,cAAC,IAAD,CAASpC,MAAOgM,EAAmBxD,GAAG,GAAK,eAAiB,OAA5D,SAAqErC,IACpE+F,EAAe,GACd,cAACnB,EAAA,EAAD,CAASpI,SAAS,OAAO3C,MAAM,aAAasF,SAAU,EAAGF,MAAO8G,EAAchB,KAAK,OAAOC,OAAO,SAGrG,cAAC,IAAD,CACE7C,SAAU0D,EAAmBxD,GAAG,IAAMlB,EACtC3H,QAAO,wBAAE,uBAAA8I,EAAA,6DACPlB,GAAa,GADN,kBAGCmE,IAHD,OAILtE,EAAa,GAAD,OACPvH,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE6B,OAAQ,gBANlE,gDASL2F,EACExH,EAAE,SACFA,EAAE,uFAEJ6I,QAAQC,MAAR,MAbK,yBAeLpB,GAAa,GAfR,qBAiBPyC,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAjB3C,+DAFX,SAsBelJ,EAAZyH,EAAc,aAAkB,iB,SC9C1B+E,GAfQ,SAACC,GACtB,IAAMtD,EAAqBC,eAW3B,MAAO,CAAEsD,UAVazE,sBAAW,wBAAC,+BAAAW,EAAA,+EAEb6D,EAAWE,QAAQxD,EAAmByD,QAASC,KAAOC,UAAUC,YAFnD,cAExBC,EAFwB,gBAGRA,EAAGC,OAHK,cAGxBC,EAHwB,yBAIvBA,EAAQC,QAJe,4DAMvB,GANuB,0DAQ/B,CAACV,EAAYtD,MCCZiE,GAAS5N,IAAOC,IAAV,kDAsFG4N,GAzEqC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMjD,EAA+B,EAA/BA,QAAS7I,EAAsB,EAAtBA,gBAC5DxB,EAAMC,cAAND,EACR,EAAkDmH,oBAAS,GAA3D,mBAAOoG,EAAP,KAA0BC,EAA1B,KACQtE,EAAqBoE,EAArBpE,IAAKuE,EAAgBH,EAAhBG,YACb,EAKIH,EAAKI,UAAY,GALrB,IACEC,UAAWC,OADb,MACiC,EADjC,MAEE5D,aAAc6D,OAFhB,MAEuC,EAFvC,MAGE9D,cAAe+D,OAHjB,MAGyC,EAHzC,MAIE9B,SAAU+B,OAJZ,MAI+B,EAJ/B,EAMMJ,EAAY,IAAI3H,IAAU4H,GAC1B5D,EAAe,IAAIhE,IAAU6H,GAC7B9D,EAAgB,IAAI/D,IAAU8H,GAC9B9B,EAAW,IAAIhG,IAAU+H,GACzBC,EAAYC,YAAWR,GACvBS,EAAa7D,GAAWsD,GAAaA,EAAUQ,cAAc,GAC7DhE,EAAWC,eAEXqC,EAAa2B,aAASJ,GAEpBtB,EAAcF,GAAeC,GAA7BC,UAEF2B,EAAgBpG,sBAAW,wBAAC,uBAAAW,EAAA,sEAE9B4E,GAAqB,GAFS,SAGxBd,IAHwB,OAI9BvC,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAClDsE,GAAqB,GALS,gDAO9B3E,QAAQC,MAAR,MAP8B,yDAS/B,CAAC4D,EAAWvC,EAAUE,EAASnB,IAkBlC,OACE,eAACkE,GAAD,WACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMhN,MAAI,EAACkO,cAAc,YAAYnO,MAAM,YAAY2C,SAAS,OAAOyL,GAAG,MAA1E,wBAGA,cAAC,KAAD,CAAMnO,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAjE,SACG9C,EAAE,eAGP,cAAC,GAAD,CAAegM,SAAUA,EAAU9C,IAAKA,IACxC,eAAC,IAAD,WACE,cAAC,KAAD,CAAM9I,MAAI,EAACkO,cAAc,YAAYnO,MAAM,YAAY2C,SAAS,OAAOyL,GAAG,MAA1E,SACGjB,EAAKkB,WAER,cAAC,KAAD,CAAMpO,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAjE,SACG9C,EAAE,eAGLqK,EAlCG6D,EACL,cAAC,GAAD,CACEnE,cAAeA,EACfC,aAAcA,EACd9C,UAAWoG,EAAKkB,SAChBtF,IAAKA,EACL1H,gBAAiBA,IAGnB,cAAC,IAAD,CAAQoB,GAAG,MAAMlB,MAAM,OAAO+G,SAAU8E,EAAmBzN,QAASuO,EAApE,SACGrO,EAAE,qBAwBO,cAACyO,GAAA,EAAD,CAAqB7L,GAAG,MAAMlB,MAAM,aC3EhDgN,GAAalP,YAAOmP,IAAPnP,CAAH,qDAIVoP,GAAyBpP,YAAOsC,IAAPtC,CAAH,2GAMtBqP,GAAmBrP,IAAOC,IAAV,iGAEI,qBAAGC,MAAkBC,OAAOmP,aA0FvCC,GA9E2B,SAAC,GAAuD,IAArDzB,EAAoD,EAApDA,KAAM0B,EAA8C,EAA9CA,WAAY3N,EAAkC,EAAlCA,QAAoBgJ,GAAc,EAAzB4B,UAAyB,EAAd5B,SACzErK,EAAMC,cAAND,EAER,EAA0DmH,oBAAS,GAAnE,mBAAO8H,EAAP,KAA8BC,EAA9B,KAEM5N,EACJgM,EAAK6B,WAAa7B,EAAK6B,UAAUlJ,GAAG,GAApC,WACQqH,EAAK6B,UAAU5C,WAAWpG,oBAAeiJ,EAAW,CAAEC,sBAAuB,KACjF,GAEA9N,EAAU+L,EAAKkB,UAAYlB,EAAKkB,SAASc,cAAchH,QAAQ,UAAW,IAC1EhG,EAAWgL,EAAKiC,WAAajC,EAAKiC,UAAUD,cAAchH,QAAQ,GAAI,IACtEkH,EAAYlC,EAAKmC,KAAOnC,EAAKmC,KAAKD,UAAYxP,EAAE,cAChD0P,EAAWpC,EAAKqC,WAAarC,EAAKqC,UAElCC,EAAwBrP,GAAyB,CACrDC,kBAAmB8M,EAAKuC,WAAWjD,QACnCnM,aAAc6M,EAAKwC,MAAMlD,UAGrBpL,EAAe,UAAMuO,MAAN,OAA+BL,EAA/B,YAA2CE,GAC1D5B,EAAYC,YAAWX,EAAKG,aAC5BuC,GAAmC,IAAlB1C,EAAK2C,QACtB7N,EAAYkL,EAAK4C,UAAUrN,MAAM,KAAK,GAAGsN,oBAE/C,OACE,eAACzB,GAAD,CAAY0B,SAAUJ,EAAtB,UACE,eAACpB,GAAD,WACE,cAAC,GAAD,CACErN,QAASA,EACTe,SAAUA,EACVJ,WAAYoL,EAAKpL,WACjBC,gBAAiBmL,EAAK+C,YACtBjO,UAAWA,EACXC,aAAciL,EAAKwC,MAAMjO,OACzByO,aAAchD,EAAKwC,MAAMjO,UAEzBR,GACA,eAAC,IAAD,CAAMI,eAAe,gBAAgBc,WAAW,SAAhD,UACE,eAAC,KAAD,WAAOvC,EAAE,OAAT,OACA,cAAC,KAAD,CAAMI,MAAI,EAACuF,MAAO,CAAE4K,QAAS,OAAQhO,WAAY,UAAjD,SACG+K,EAAKkD,IACJ,qCACGxB,EADH,OAIA,cAAC,KAAD,CAAUrN,OAAQ,GAAID,MAAO,UAKrC,eAAC,IAAD,CAAMD,eAAe,gBAArB,UACE,eAAC,KAAD,WAAOzB,EAAE,QAAT,OACA,cAAC,KAAD,CAAMI,MAAI,EAAV,SAAYoP,OAEd,cAACiB,GAAD,CAAsBnD,KAAMA,EAAMjD,QAASA,EAAS7I,gBAAiBA,OAGvE,eAACqN,GAAD,WACE,cAAC,GAAD,CACE/O,QAAS,kBAAMoP,GAA0BD,IACzClP,SAAUkP,IAEXA,GACC,cAAC,GAAD,CACE5N,QAASA,EACTF,eAAgBuP,YAAe1C,EAAW,WAC1C5M,YAAW,wCAAmC4M,GAC9C1M,oBAAqBA,EACrBC,QAASA,EACTC,gBAAiBA,W,UChGvBmP,GAAYnR,IAAOC,IAAV,4MAGJ,qBAAGC,MAAkBC,OAAOgF,QAQvB,qBAAGjF,MAAkBC,OAAOiR,cAMtCC,GAAarR,IAAOC,IAAV,uEAqCDqR,GAhCiB,SAAC,GAQ1B,IAPLvL,EAOI,EAPJA,MAEA9E,GAKI,EANJc,QAMI,EALJd,cACAD,EAII,EAJJA,kBAEAuQ,GAEI,EAHJ9E,UAGI,EAFJ8E,eAGMnB,GADF,EADJoB,WAE8BzQ,GAAyB,CAAEC,oBAAmBC,kBACvD,UAAMsP,KAAN,YAAgCH,GAErD,OAAyB,IAAlBmB,EACL,cAACJ,GAAD,UACGI,EACC,mCACE,eAACF,GAAD,WAAatL,EAAb,SAIF,cAACsL,GAAD,UACE,cAAC,KAAD,CAAUnP,MAAO,SAKvB,cAACiP,GAAD,UACE,eAACE,GAAD,WAAaE,EAAb,UCtDAE,GAAYzR,YAAO0R,KAAP1R,CAAH,oHAIX,qBAAGE,MAAkBoF,aAAaE,MAMhC2L,GAAYnR,IAAOC,IAAV,wIAKX,qBAAGC,MAAkBoF,aAAaE,MAmCvBmM,GA9BkC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,OAAQpI,EAAU,EAAVA,IAChEa,EAAkBwH,YAAYrI,GAA9Ba,cACA/J,EAAMC,cAAND,EACFwR,EAAmBrG,YAAiBpB,GAc1C,OACE,eAAC,GAAD,WACE,cAACkH,GAAD,CAAWxO,IAAG,wBAAmB2O,EAAnB,QAAgC1O,IAAI,OAAOhB,MAAO,GAAIC,OAAQ,GAAIkF,GAAG,SACnF,gCAdE2K,EAEA,cAAC,KAAD,CAAMrR,MAAM,YAAY2C,SAAS,OAAO1C,MAAI,EAACkO,cAAc,YAA3D,SACGtO,EAAE,aAKF,KAQH,cAAC,KAAD,CAAMI,MAAI,EAAV,SAAYiR,IACZ,cAAC,KAAD,CAAMlR,MAAM,OAAO2C,SAAS,OAAO1C,MAAI,EAAvC,SAAyCkR,WC5C3CG,GAASjS,IAAOkS,KAAV,uFACD,gBAAGC,EAAH,EAAGA,OAAQjS,EAAX,EAAWA,MAAX,OAAwBiS,EAASjS,EAAMC,OAAOgF,KAAOjF,EAAMC,OAAOiS,gBAgB9DC,GAXiD,SAAC,GAAiC,IAA/B7F,EAA8B,EAA9BA,SACjE,OAD+F,EAApB8F,cAElE,cAACL,GAAD,CAAQE,OAAQ3F,EAAhB,SAA2BA,EAAS7F,mBAG3C,cAACsL,GAAD,CAAQE,OAAQ,EAAhB,SACE,cAAC,KAAD,CAAUjQ,MAAO,QChBjBiP,GAAYnR,IAAOC,IAAV,6KAKJ,qBAAGC,MAAkBC,OAAOC,WAEnC,qBAAGF,MAAkBoF,aAAaE,MAKhC+M,GAAYvS,YAAOwS,IAAPxS,CAAH,kEACA,qBAAGyS,QAAyB,iBAAmB,eAiB/CC,GAbyB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjCnS,EAAMC,cAAND,EAEFoS,GADWC,eAATC,KAGR,OACE,eAAC,GAAD,YACIF,GAAYpS,EAAE,WAChB,cAAC+R,GAAD,CAAW5R,MAAM,UAAU8R,QAASE,QC7BpCI,GAAmB/S,IAAOC,IAAV,wDAQhB+S,GAAoBhT,IAAOC,IAAV,uKACZ,qBAAGC,MAAkBC,OAAOgF,QAKnC,qBAAGjF,MAAkBoF,aAAa2N,MAMhC9B,GAAYnR,IAAOC,IAAV,wEAgCAiT,GA3B8C,SAAC,GAAoB,IAAlBxQ,EAAiB,EAAjBA,WACxDyQ,EAAoBzQ,EAAaA,EAAW0Q,cAAgB,cAAC,KAAD,CAAUlR,MAAO,KAC3E1B,EAAMC,cAAND,EACF6S,EACJ,qCACG7S,EAAE,8EACH,uBACA,uBACCA,EAAE,4HAGP,EAA+C8S,aAAWD,EAAgB,CACxEE,UAAW,UACXC,cAAe,CAAC,GAAI,MAFdC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,eAAC,GAAD,WACE,cAACX,GAAD,UAAoBG,IACpB,cAACJ,GAAD,CAAkBa,IAAKH,EAAvB,SACE,cAAC,IAAD,CAAU9S,MAAM,iBAEjBgT,GAAkBD,MC9CnBX,GAAmB/S,IAAOC,IAAV,wDAQhB4T,GAAmB7T,IAAOC,IAAV,iLAMlB,qBAAGC,MAAkBoF,aAAa2N,MAMhC9B,GAAYnR,IAAOC,IAAV,wEA+BA6T,GA1B4C,SAAC,GAAmB,IAAjBnE,EAAgB,EAAhBA,UACtDoE,EACJpE,GAAaA,EAAUlJ,GAAG,GAA1B,WACMuN,OAAOrE,GAAWhJ,oBAAeiJ,EAAW,CAAEC,sBAAuB,KAEzE,cAAC,KAAD,CAAU3N,MAAO,KAEb1B,EAAMC,cAAND,EACR,EAA+C8S,aAC7C9S,EAAE,+DACF,CAAE+S,UAAW,UAAWC,cAAe,CAAC,GAAI,MAFtCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,eAAC,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,UAAOE,MAET,cAAC,GAAD,CAAkBH,IAAKH,EAAvB,SACE,cAAC,IAAD,CAAU9S,MAAM,iBAEjBgT,GAAkBD,MClDZO,GAAkBjU,IAAOC,IAAV,0XAEN,qBAAGC,MAAkBC,OAAO2E,SAM9C,qBAAG5E,MAAkBoF,aAAaE,MAOlC,qBAAGtF,MAAkBoF,aAAa4O,MAQzBC,GAAenU,IAAOC,IAAV,gDAIZmU,GAAgBpU,IAAOC,IAAV,2GC4DXsM,GApEoD,SAAC,GAAsC,IAApC7C,EAAmC,EAAnCA,IAAKwE,EAA8B,EAA9BA,SAAUoE,EAAoB,EAApBA,cACnF,EAAqCxK,eAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAChBqM,EAAoB,IAAI7N,IAAU0H,EAAS1B,UAC3CC,EAAYC,cACdF,EAAWI,KACXC,EAAe,EACf/F,EAAiBwL,EAAgB9F,EAAS7F,iBAAmB,cAAC,KAAD,CAAUzE,MAAO,KAG7EmS,EAAkBC,WAErBzH,GADAL,EAAWlB,YAAiB+I,IACJvH,aAAaL,GAAWM,WAChDjG,EAAiB0F,EAAS5F,QAAQ,EAAGJ,IAAUK,aAGjD,MAAkCc,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACQmE,EAAaF,GAAezC,GAA5B2C,SACA7L,EAAMC,cAAND,EACFmK,EAAWC,eACTC,EAAYC,cAAZD,QAER,OACE,eAACoJ,GAAD,WACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAMvT,MAAI,EAACkO,cAAc,YAAYnO,MAAM,YAAY2C,SAAS,OAAOyL,GAAG,MAA1E,wBAGA,cAAC,KAAD,CAAMnO,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAjE,SACG9C,EAAE,eAGP,eAAC4T,GAAD,WACE,gCACE,cAAC,IAAD,UAAUtN,IACT+F,EAAe,GACd,cAACnB,EAAA,EAAD,CAASpI,SAAS,OAAO3C,MAAM,aAAasF,SAAU,EAAGF,MAAO8G,EAAchB,KAAK,OAAOC,OAAO,SAGrG,cAAC,IAAD,CACE7C,SAAUuD,EAASrD,GAAG,IAAMlB,IAAcqK,EAC1ChS,QAAO,wBAAE,uBAAA8I,EAAA,6DACPlB,GAAa,GADN,kBAGCmE,IAHD,OAILtE,EAAa,GAAD,OACPvH,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE6B,OAAQ,gBANlE,gDASL2F,EACExH,EAAE,SACFA,EAAE,uFAEJ6I,QAAQC,MAAR,MAbK,yBAeLpB,GAAa,GAfR,qBAiBPyC,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAjB3C,+DAmBT6K,GAAG,MArBL,SAuBe/T,EAAZyH,EAAc,aAAkB,oBCzDrCoC,GAAoBrK,IAAOC,IAAV,gDAgMRuU,GAxL6C,SAAC,GAQtD,IAPL9K,EAOI,EAPJA,IACAsF,EAMI,EANJA,SACAf,EAKI,EALJA,YACAoC,EAII,EAJJA,WACAC,EAGI,EAHJA,MACAgC,EAEI,EAFJA,cACAnC,EACI,EADJA,UAEQ3P,EAAMC,cAAND,EACAqK,EAAYC,cAAZD,QACR,EAAkDlD,oBAAS,GAA3D,mBAAOoG,EAAP,KAA0BC,EAA1B,KACA,EAAmD+D,YAAYrI,GAAvDyE,EAAR,EAAQA,UAAW3D,EAAnB,EAAmBA,aAAcD,EAAjC,EAAiCA,cACzBN,EAAYD,GAAcN,GAA1BO,QACAJ,EAAcJ,GAAgBC,GAA9BG,UACFY,EAAWC,cACXK,EAAUC,YAAgBgE,GAE1BN,EAAa7D,GAAWsD,GAAaA,EAAUQ,cAAc,GAE7DH,EAAYC,YAAWR,GACvBmC,EAAwBrP,GAAyB,CACrDC,kBAAmBqP,EAAWjD,QAC9BnM,aAAcqP,EAAMlD,UAGhBpL,EAAe,UAAMuO,MAAN,OAA+BJ,EAA/B,YAA4CC,GAE3DnF,EAAW,yCAAG,WAAOnB,GAAP,UAAAV,EAAA,sEACZa,EAAQH,GADI,OAElBa,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAFhC,2CAAH,sDAKX0B,EAAa,yCAAG,WAAOtB,GAAP,UAAAV,EAAA,sEACdS,EAAUC,GADI,OAEpBa,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAF9B,2CAAH,sDAKb5C,EAAiB2B,uBAAY,WACjC,IAAM4C,EAAyBC,YAAiBf,GAChD,OAAIc,EAAuB5E,GAAG,IAAM4E,EAAuB3E,GAAG,MACrD2E,EAAuBzE,QAAQ,GAAIJ,YAAUK,YAElDwE,EAAuB5E,GAAG,IAAM4E,EAAuB3E,GAAG,MACrD2B,YAAsBkC,GAAe5D,iBAEvC0E,EAAuBzE,QAAQ,EAAGJ,YAAUK,cAClD,CAAC0D,IAEJ,EAA2BgB,aACzB,cAAC,GAAD,CAAc3F,IAAK4E,EAAchD,UAAWyD,EAAavD,UAAWsH,EAAUhN,gBAAiBA,KAD1FwJ,EAAP,oBAGA,EAA4BD,aAC1B,cAAC,GAAD,CAAe3F,IAAK2E,EAAe/C,UAAW4D,EAAe1D,UAAWsH,KADnEvD,EAAP,oBAGMwB,EAAa2B,aAASJ,GACtB7D,EAAWC,eACTsC,EAAcF,GAAeC,GAA7BC,UAEF2B,EAAgBpG,sBAAW,wBAAC,uBAAAW,EAAA,sEAE9B4E,GAAqB,GAFS,SAGxBd,IAHwB,OAI9BvC,EAASO,aAAuB,CAAEL,UAASM,KAAM,CAACzB,MAElDsE,GAAqB,GANS,gDAQ9B3E,QAAQC,MAAR,MAR8B,yDAU/B,CAAC4D,EAAWvC,EAAUE,EAASnB,IAElC,OAAKmB,EAeD6D,EACEnE,EAAc9D,GAAG,GAEjB,eAACwN,GAAD,WACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAMvT,MAAI,EAACkO,cAAc,YAAYnO,MAAM,YAAY2C,SAAS,OAAOyL,GAAG,MAA1E,SACGC,IAEH,cAAC,KAAD,CAAMpO,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAjE,SACG9C,EAAE,eAGP,eAAC4T,GAAD,WACE,gCACE,cAAC,IAAD,UAAUtN,MACTyD,EAAc9D,GAAG,IAAMsE,EAAQtE,GAAG,IACjC,cAACiF,EAAA,EAAD,CACEpI,SAAS,OACT3C,MAAM,aACNsF,SAAU,EACVF,MAAO4F,YAAiBZ,EAAQa,MAAMrB,IACtCsB,KAAK,OACLC,OAAO,SAIb,eAAC,GAAD,WACE,cAAC,KAAD,CAAYvI,QAAQ,YAAYjD,QAASmL,EAAmBpE,GAAG,MAA/D,SACE,cAAC,KAAD,CAAW1G,MAAM,UAAUuB,MAAM,WAEnC,cAAC,KAAD,CACEqB,QAAQ,YACRjD,QAASkL,EACTvC,SAAU,CAAC,UAAW,YAAY8C,MAAK,SAACC,GAAD,OAAUvB,EAASwB,SAASC,SAASF,MAH9E,SAKE,cAAC,IAAD,CAASrL,MAAM,UAAUuB,MAAM,oBASzC,eAAC+R,GAAD,WACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAMvT,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAOyL,GAAG,MAA3E,SACCvO,EAAE,WAEH,cAAC,KAAD,CAAMI,MAAI,EAACkO,cAAc,YAAYnO,MAAM,YAAY2C,SAAS,OAAhE,SACG0L,OAGL,cAACoF,GAAD,UACE,cAAC,IAAD,CACElS,MAAM,OACN5B,QAASkL,EACTjI,QAAQ,YACR0F,SAAU,CAAC,UAAW,YAAY8C,MAAK,SAACC,GAAD,OAAUvB,EAASwB,SAASC,SAASF,MAJ9E,SAMGxL,EAAE,mBAOR8R,EAgBH,eAAC2B,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAMvT,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAjE,SACG9C,EAAE,mBAGP,cAAC4T,GAAD,UACE,cAAC,IAAD,CAAQlS,MAAM,OAAO+G,SAAU8E,EAAmBzN,QAASuO,EAAetL,QAAQ,YAAlF,SACG/C,EAAE,iBAtBP,eAACyT,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAMvT,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAjE,SACG9C,EAAE,qBAGP,cAAC4T,GAAD,UACE,cAAC,KAAD,CAAUlS,MAAO,IAAKuS,aAAc,GAAIC,UAAW,UAzFvD,eAACT,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAMvT,MAAI,EAACkO,cAAc,YAAYnO,MAAM,aAAa2C,SAAS,OAAjE,SACG9C,EAAE,qBAGP,cAAC4T,GAAD,UACE,cAACnF,GAAA,EAAD,CAAqB/M,MAAM,eCxF/ByS,GAAkBC,YAAH,wGASfC,GAAoBD,YAAH,wGASjBzD,GAAYnR,IAAOC,IAAV,4PACA,qBAAGM,SAEVuU,YADI,0EAEAH,IAEJG,YAJI,0EAKAD,OASR,qBAAG3U,MAAkBoF,aAAa2N,MAMhCzR,GAAqBxB,YAAOyB,KAAPzB,CAAH,mDAIlB+U,GAAiB/U,IAAOC,IAAV,4KACT,qBAAGC,MAAkBC,OAAOgF,QAKnC,qBAAGjF,MAAkBoF,aAAaE,MAKhCwP,GAAgBhV,IAAOC,IAAV,oRAKf,qBAAGC,MAAkBoF,aAAaE,MAgBhCyO,GAAkBjU,IAAOC,IAAV,sLAIjB,qBAAGC,MAAkBoF,aAAaE,MAQhCyP,GAAgBjV,IAAOC,IAAV,mDAIbiV,GAAiBlV,IAAOC,IAAV,qFAGhB,qBAAGC,MAAkBoF,aAAa2N,MAKhCkC,GAAenV,IAAOC,IAAV,+HAoEHmV,GA7DgD,SAAC,GAOzD,IANLC,EAMI,EANJA,QACArE,EAKI,EALJA,IACAtO,EAII,EAJJA,WACAiN,EAGI,EAHJA,UACA2C,EAEI,EAFJA,cACA/R,EACI,EADJA,SAEMuN,EAAOuH,EAEL7U,EAAMC,cAAND,EACFoQ,EAA+B,OAApB9C,EAAKpL,WACd2N,EAAuCvC,EAAvCuC,WAAYC,EAA2BxC,EAA3BwC,MAAOL,EAAoBnC,EAApBmC,KAAOE,EAAarC,EAAbqC,UAC5BpO,EAAU+L,EAAKkB,UAAYlB,EAAKkB,SAASc,cAAchH,QAAQ,UAAW,IAC1EsH,EAAwBrP,GAAyB,CACrDC,kBAAmBqP,EAAWjD,QAC9BnM,aAAcqP,EAAMlD,UAEhBoB,EAAYC,YAAWX,EAAKG,aAC5BqH,EAAMpE,YAAe1C,EAAW,WAChCpE,EAAI,wCAAoCoE,GAE9C,OACE,eAAC,GAAD,CAAWjO,SAAUA,EAArB,UACE,eAAC0U,GAAD,WACGrE,GACC,cAACmE,GAAD,UACE,cAAC,GAAD,CAAoB3S,KAAI,cAAS+N,EAAT,YAAsBC,GAA9C,SACG5P,EAAE,eAAgB,CAAE6B,OAAQN,QAInC,cAAC,GAAD,CAAoBK,KAAMkT,EAA1B,SAAgC9U,EAAE,mBAClC,cAAC,GAAD,CAAoB4B,KAAMgI,EAA1B,SAAiC5J,EAAE,mBACnC,eAACwU,GAAD,WACGlH,EAAK+C,YAAc,cAAC,KAAD,IAAmB,cAAC,KAAD,IACtCZ,EAAO,cAAC,KAAD,IAAc,WAG1B,eAACiF,GAAD,WACE,eAACC,GAAD,WACE,cAAC,KAAD,UAAO3U,EAAE,SACT,cAAC,GAAD,eAASwQ,OAEX,eAACmE,GAAD,WACE,cAAC,KAAD,UAAO3U,EAAE,gBACT,cAAC,GAAD,eAAgBkC,OAElB,eAACyS,GAAD,WACE,cAAC,KAAD,UAAO3U,EAAE,eACT,cAAC,GAAD,eAAemP,UAGnB,eAAC,GAAD,WACE,cAAC,GAAD,2BAAmB7B,GAAnB,IAAyBwE,cAAeA,KACxC,cAACiD,GAAD,2BAAkBzH,GAAlB,IAAwBwE,cAAeA,YCxLzCkD,GAAQxV,IAAOC,IAAV,sFAEA,qBAAGC,MAAkBC,OAAOiR,cAIjCqE,GAAmBzV,IAAOC,IAAV,6FAmBPyV,GAT+B,SAAC,GAA8B,IAAD,IAA3B7D,aAA2B,MAAnB,GAAmB,EAAfzN,EAAe,EAAfA,SAC3D,OACE,gCACGyN,GAAS,cAAC2D,GAAD,UAAQ3D,IAClB,cAAC4D,GAAD,UAAmBrR,Q3BMZuR,GAAwC,CACnD,CACEC,GAAI,EACJC,KAAM,OACNC,UAAU,EACVjE,MAAO,IAET,CACE+D,GAAI,EACJC,KAAM,SACNC,UAAU,EACVjE,MAAO,UAET,CACE+D,GAAI,EACJC,KAAM,MACNC,UAAU,EACVjE,MAAO,OAET,CACE+D,GAAI,EACJC,KAAM,UACNC,UAAU,EACVjE,MAAO,KAIEkE,GAAyC,CACpD,CACEH,GAAI,EACJC,KAAM,OACNC,UAAU,EACVjE,MAAO,IAET,CACE+D,GAAI,EACJC,KAAM,SACNC,UAAU,EACVjE,MAAO,UAET,CACE+D,GAAI,EACJC,KAAM,MACNC,UAAU,EACVjE,MAAO,OAET,CACE+D,GAAI,EACJC,KAAM,YACNC,UAAU,EACVjE,MAAO,aAET,CACE+D,GAAI,EACJC,KAAM,aACNC,UAAU,EACVjE,MAAO,cAET,CACE+D,GAAI,EACJC,KAAM,UACNC,UAAU,EACVjE,MAAO,M,SAIC/Q,K,cAAAA,E,aAAAA,Q,K4BhEZ,I,gDAAMkV,GAAQ,CACZhF,IAAKM,GACLxD,KAAM6D,GACNQ,OAAQE,GACRgD,QAAS3C,GACThQ,WAAYwQ,GACZvD,UAAWmE,IAGPmC,GAAYjW,IAAOC,IAAV,+KAOX,qBAAGC,MAAkBoF,aAAa4O,MAKhCgC,GAAWlW,IAAOmW,GAAV,4FAKRC,GAAmBpW,IAAOqW,GAAV,4DAIhBC,GAAgBtW,IAAOqW,GAAV,6EAKbE,GAAiBvW,IAAOqW,GAAV,oDAwHLG,GApH2C,SAAC/S,GACzD,IAAQ4R,EAA2B5R,EAA3B4R,QAAS/C,EAAkB7O,EAAlB6O,cACXmE,IAAoB1E,YAAYsD,EAAQ3L,KAAKa,cAAcwC,WACjE,EAAsDpF,mBAAS8O,GAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KACMC,EAAoBC,aAAkBH,EAAqB,KACzDlW,EAAMC,cAAND,EAEFsW,EAAoB,WACxBH,GAAwBD,IAG1BK,qBAAU,WACRJ,EAAuBF,KACtB,CAACA,IAEJ,MAAuB5D,eAAfC,EAAR,EAAQA,KAAMkE,EAAd,EAAcA,KAERpE,GAAYE,EACZmE,EAAcrE,EAAW+C,GAAqBI,GAC9CmB,EAAcD,EAAYvS,KAAI,SAACyS,GAAD,OAAYA,EAAOtB,QAmFvD,OACE,qCAjFKmB,EA+CH,eAACd,GAAD,CAAU5V,QAASwW,EAAnB,UACE,+BACE,6BACE,cAACP,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,eAAU9S,EAAMqK,aAItB,+BACE,cAACsI,GAAD,UACE,cAAC,GAAD,CAAYvE,MAAOrR,EAAE,UAArB,SACE,cAAC,GAAD,2BAAYiD,EAAM0O,QAAlB,IAA0BG,cAAeA,SAG7C,cAACgE,GAAD,UACE,cAAC,GAAD,CAAYzE,MAAOrR,EAAE,OAArB,SACE,cAAC,GAAD,2BAASiD,EAAMuN,KAAf,IAAoBQ,YAAU,eAKtC,6BACE,cAACyE,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAStD,mBAAoB+D,aAtEnC,cAACR,GAAD,CAAU5V,QAASwW,EAAnB,SACGM,OAAOC,KAAK5T,GAAOiB,KAAI,SAAC4S,GACvB,IAAMC,EAAcL,EAAYM,QAAQF,GACxC,IAAqB,IAAjBC,EACF,OAAO,KAGT,OAAQD,GACN,IAAK,UACH,OACE,6BACE,cAACrB,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAStD,mBAAoB+D,SAH1BY,GAQb,IAAK,MACH,OACE,6BACE,cAACrB,GAAD,UACE,cAAC,GAAD,CAAYpE,MAAOrR,EAAE,OAArB,SACE,cAAC,GAAD,2BAASiD,EAAMuN,KAAf,IAAoBQ,WAAYoB,UAH7B0E,GAQb,QACE,OACE,6BACE,cAACrB,GAAD,UACE,cAAC,GAAD,CAAYpE,MAAOrR,EAAEyW,EAAYM,GAAa1F,OAA9C,SACGvN,IAAMmT,cAAczB,GAAMsB,GAA1B,2BAAqC7T,EAAM6T,IAA3C,IAAiDhF,wBAH/CgF,SAmDpBV,GACC,6BACE,oBAAIc,QAAS,EAAb,SACE,cAAC,GAAD,2BAAiBjU,GAAjB,IAAwBlD,SAAUmW,aCpKxCvF,GAAYnR,IAAOC,IAAV,+HACH,qBAAGC,MAAkByX,KAAKC,cAEtB,qBAAG1X,MAAkByX,KAAKE,cAKpCC,GAAe9X,IAAOC,IAAV,yGAQZ8X,GAAc/X,IAAOgY,MAAV,oKASXC,GAAYjY,IAAOkY,MAAV,qHASTC,GAAiBnY,IAAOC,IAAV,qDAIdmY,GAAwBpY,IAAOC,IAAV,yHA2CZoY,GApC0B,SAAC5U,GACxC,IAAM6U,EAAiBC,iBAAuB,MACtC/X,EAAMC,cAAND,EACAgY,EAAiC/U,EAAjC+U,KAAMC,EAA2BhV,EAA3BgV,QAASnG,EAAkB7O,EAAlB6O,cAEfoG,EAASC,aAASF,EAASD,EAAM,CAAE1C,UAAU,EAAM8C,WAAY,SAA/DF,KAQR,OACE,cAAC,GAAD,UACE,eAACP,GAAD,WACE,cAACL,GAAD,CAAclE,IAAK0E,EAAnB,SACE,cAACP,GAAD,UACE,cAACE,GAAD,UACGS,EAAKhU,KAAI,SAACmU,GACT,OAAO,wBAAC,GAAD,2BAASA,EAAIC,UAAb,IAAuBxG,cAAeA,EAAegF,IAAG,oBAAeuB,EAAIjD,gBAK1F,cAACwC,GAAD,UACE,eAAC,IAAD,CAAQ7U,QAAQ,OAAOjD,QAnBX,WAClBgY,EAAeS,QAAQC,eAAe,CACpCC,SAAU,YAiBN,UACGzY,EAAE,UACH,cAAC,IAAD,CAAeG,MAAM,uB,SCxClBuY,GArCuC,SAAC,GAAiC,IAKlFC,EALmDC,EAA8B,EAA9BA,wBAC/CC,EAAQC,cAARD,IACF5O,EAAWC,cACTlK,EAAMC,cAAND,EAGR,OAAQiK,EAASwB,UACf,IAAK,SACHkN,EAAc,EACd,MACF,IAAK,iBACHA,EAAc,EACd,MACF,IAAK,kBACHA,EAAc,EACd,MACF,QACEA,EAAc,EAIlB,OACE,cAAC,GAAD,UACE,eAAC,IAAD,CAAYA,YAAaA,EAAa/R,MAAM,KAAK7D,QAAQ,SAAzD,UACE,cAAC,IAAD,CAAgBgW,GAAIC,KAAMC,GAAE,UAAKJ,GAAjC,SACG7Y,EAAE,UAEL,cAAC,KAAD,CAAiBkZ,KAAMN,EAAvB,SACE,cAAC,IAAD,CAAgBG,GAAIC,KAAMC,GAAE,UAAKJ,EAAL,YAA5B,SACG7Y,EAAE,sBAUTT,GAAUC,IAAOC,IAAV,6MAUT,qBAAGC,MAAkBoF,aAAaE,M,kBCoiBvBmU,IAzkBC3Z,IAAOC,IAAV,8GACS,qBAAGC,MAAkBC,OAAOyZ,sBAMN,SAAC,GAAqC,IAAnCnS,EAAkC,EAAlCA,UAAWoS,EAAuB,EAAvBA,iBACxD,EAAcpZ,cAAND,EAAR,EAAQA,EACR,EAAoBsK,cACpB,GADA,EAAQD,QACUiP,gBAClB,GADA,EAAQ5Z,MAC6B4H,gBAErC,GAFA,EAAQE,WAAR,EAAoBD,aACMgS,eACQpS,oBAAS,IAA3C,mBACA,GADA,UAKIqS,gBAHFC,EADF,EACEA,0BAEQC,GAHV,EAEEC,wBAFF,EAGEC,KAAQF,SAEJG,EAAYC,cACZC,EAAWF,EAAUtN,WACrByN,EAAgB9N,cAChB+N,EAAcD,EAAczN,WAC5B2N,EAAYC,cACZC,EAAWF,EAAU3N,WACrB8N,EAAYC,cACZC,EAAWF,EAAU9N,WACrBiO,EAAcC,cACdC,EAAaF,EAAYjO,WACzBoO,EAAYC,cACZC,EAAWF,EAAUpO,WACrBuO,EAAmBC,cACnBC,EAAkBF,EAAiBvO,WACnC0O,EAAYC,cACZC,EAAWF,EAAU1O,WACrB6O,EAAiBC,cACjBC,EAAgBF,EAAe7O,WAC/BgP,EAAYC,cACZC,EAAWF,EAAUhP,WACrBmP,EAAcC,cACdC,EAAaF,EAAYnP,WACzBsP,EAAgBC,cAChBC,EAAeF,EAActP,WAC7ByP,EAAaC,cACbC,EAAYF,EAAWzP,WACvB4P,EAAaC,cACbC,EAAYF,EAAW5P,WACvB+P,EAAaC,cACbC,GAAYF,EAAW/P,WACvBkQ,GAAaC,cACbC,GAAYF,GAAWlQ,WAIrBqQ,GAAkBzR,YAAiB0R,YAASC,gBAC5CC,GAAe5R,YAAiB0R,YAASlc,iBAEzCqc,GAASC,eACTC,GAASF,GAAS7R,YAAiB6R,IAAU,EAE7CG,GAASlD,EAAc2C,GACvBQ,GAAUrD,EAAWgD,GACrBM,GAAUF,GAASC,GACnBE,GAASD,GAAUH,GAEnBK,GAAcpS,YAAiBqS,YAAWC,gBAE1CC,GAAQJ,GAASC,GAGjBI,GAAmBxS,YAAiByS,YAASd,gBAC7Ce,GAAgB1S,YAAiByS,YAASjd,iBAE1Cmd,GAASC,eACTC,GAASF,GAAS3S,YAAiB2S,IAAU,EAE7CG,GAAUhE,EAAc0D,GACxBO,GAAUnE,EAAW8D,GACrBM,GAAUF,GAAUC,GACpBE,GAAUD,GAAUH,GAEpBK,GAAclT,YAAiBqS,YAAWc,gBAE1CC,GAAQH,GAAUC,GAElBG,GAAmBrT,YAAiBsT,YAAS3B,gBAC7C4B,GAAgBvT,YAAiBsT,YAASE,gBAE1CC,GAASC,eACTC,GAASF,GAASzT,YAAiByT,IAAU,EAE7CG,GAAU9E,EAAcuE,GACxBQ,GAAU,EAAIN,GACdO,GAAUF,GAAUC,GACpBE,GAAUD,GAAUH,GAEpBK,GAAchU,YAAiBqS,YAAW4B,gBAE1CC,GAAQH,GAAUC,GAElBG,GAAmBnU,YAAiBoU,YAASzC,gBAC7C0C,GAAiBrU,YAAiBoU,YAASZ,gBAE3Cc,GAASC,eACTC,GAASF,GAAStU,YAAiBsU,IAAU,EAE7CG,GAAW3F,EAAcqF,GACzBO,GAAW,EAAIL,GACfM,GAAWF,GAAWC,GACtBE,GAAUD,GAAWH,GAErBK,GAAc7U,YAAiBqS,YAAWyC,gBAE1CC,GAAQH,GAAUC,GAEhBG,GAAehV,YAAiBiV,YAASC,gBACzCC,GAAgBnV,YAAiBiV,YAASzf,iBAE1C4f,GAASC,eACTC,GAAUF,GAASpV,YAAiBoV,IAAU,EAE9CG,GAAWtG,EAAW+F,GACtBQ,GAAW5G,EAAWuG,GACtBM,GAAWF,GAAWC,GACtBE,GAAUD,GAAWH,GAErBK,GAAc3V,YAAiBqS,YAAWuD,gBAE1CC,GAAQH,GAAUC,GAAc,EAEhCG,GAAgB9V,YAAiB+V,YAASb,gBAC1Cc,GAAiBhW,YAAiB+V,YAASvC,gBAG3CyC,GAAUC,eACVC,GAAUF,GAAUjW,YAAiBiW,IAAW,EAEhDG,GAAWnH,EAAW6G,GACtBO,GAAW,EAAIL,GACfM,GAAWF,GAAWC,GACtBE,GAAUD,GAAWH,GAErBK,GAAcxW,YAAiBqS,YAAWoE,gBAE1CC,GAAQH,GAAUC,GAAc,EAEhCG,GAAgB3W,YAAiB4W,YAAS1B,gBAC1C2B,GAAmB7W,YAAiB4W,YAASjF,gBAE7CmF,GAAUC,eAUVC,IAPW/H,EAAW0H,GACX7H,EAAc+H,KAHfC,GAAU9W,YAAiB8W,IAAW,GAOlC9W,YAAiBqS,YAAW4E,gBAEV,EAEpCC,GAAiBlX,YAAiBmX,YAASC,gBAC3CC,GAAmBrX,YAAiBmX,YAASxF,gBAE7C2F,GAAUC,eAUVC,IAPWjI,EAAa2H,GACbpI,EAAcuI,KAHfC,GAAUtX,YAAiBsX,IAAW,GAOlCtX,YAAiBqS,YAAWoF,gBAI1CC,GAAe1X,YAAiB2X,YAASC,iBACzCC,GAAmB7X,YAAiB2X,YAAShG,gBAE7CmG,GAAUC,eAUVC,IAPWtI,EAAWgI,GACX5I,EAAc+I,KAHfC,GAAU9X,YAAiB8X,IAAW,GAOlC9X,YAAiBqS,YAAW4F,gBAI1CC,GAAgBlY,YAAiBmY,YAAUC,iBAC3CC,GAAmBrY,YAAiBmY,YAAUxG,gBAE9C2G,GAAUC,eAUVC,IAPW3I,EAAkBqI,GAClBpJ,EAAcuJ,KAHfC,GAAUtY,YAAiBsY,IAAW,GAOjCtY,YAAiBqS,YAAWoG,gBAI3CC,GAAmB1Y,YAAiB2Y,YAAUhH,gBAC9CiH,GAAe5Y,YAAiB2Y,YAAUE,iBAE1CC,GAAUC,eAUVC,IAPWhJ,EAAW4I,GACX9J,EAAc4J,KAHfI,GAAU9Y,YAAiB8Y,IAAW,GAOjC9Y,YAAiBqS,YAAW4G,gBAK3CC,GAAoBlZ,YAAiBmZ,YAAUxH,gBAC/CyH,GAAoBpZ,YAAiBmZ,YAAUE,iBAE/CC,GAAUC,eAUVC,IAPWrJ,EAAgBiJ,GAChBtK,EAAcoK,KAHfI,GAAUtZ,YAAiBsZ,IAAW,GAOjCtZ,YAAiBqS,YAAWoH,gBAK3CC,GAAoB1Z,YAAiB2Z,YAAUhI,gBAC/CiI,GAAiB5Z,YAAiB2Z,YAAUE,iBAE5CC,GAAUC,eAUVC,IAPWvJ,EAAamJ,GACb9K,EAAc4K,KAHfI,GAAU9Z,YAAiB8Z,IAAW,GAOjC9Z,YAAiBqS,YAAW4H,gBAK3CC,GAAoBla,YAAiBma,YAAUxI,gBAC/CyI,GAAepa,YAAiBma,YAAUE,iBAE1CC,GAAUC,eAUVC,IAPWlK,EAAW8J,GACXtL,EAAcoL,KAHfI,GAAUta,YAAiBsa,IAAW,GAKhB,EAEjBta,YAAiBqS,YAAWoI,gBAK3CC,GAAoB1a,YAAiB2a,YAAUhJ,gBAC/CiJ,GAAmB5a,YAAiB2a,YAAUE,iBAE9CC,GAAUC,eAUVC,IAPWpK,EAAegK,GACf9L,EAAc4L,KAHfI,GAAU9a,YAAiB8a,IAAW,GAKhB,EAEjB9a,YAAiBqS,YAAW4I,gBAK3CC,GAAoBlb,YAAiBmb,YAAUxJ,gBAC/CyJ,GAAgBpb,YAAiBmb,YAAUE,iBAE3CC,GAAUC,eAUVC,IAPWzK,EAAYqK,GACZtM,EAAcoM,KAHfI,GAAUtb,YAAiBsb,IAAW,GAKhB,EAEjBtb,YAAiBqS,YAAWoJ,gBAK3CC,GAAgB1b,YAAiB2b,YAAUnmB,iBAC3ComB,GAAkB5b,YAAiB2b,YAAUvE,gBAE7CyE,GAAUC,eAUVC,IAPWxM,EAAaqM,GACbhN,EAAW8M,KAHZG,GAAU7b,YAAiB6b,IAAW,GAOjC7b,YAAiBqS,YAAW2J,gBAK3CC,GAAgBjc,YAAiBkc,YAAU1mB,iBAC3C2mB,GAAgBnc,YAAiBkc,YAAUtE,iBAE3CwE,GAAUC,eAUVC,IAPW5M,EAAWyM,GACXvN,EAAWqN,KAHZG,GAAUpc,YAAiBoc,IAAW,GAOjCpc,YAAiBqS,YAAWkK,gBAK3CC,GAAgBxc,YAAiByc,YAAUjnB,iBAC3CknB,GAAsB1c,YAAiByc,YAAUrE,iBAEjDuE,GAAUC,eAUVC,IAPWhN,EAAkB6M,GAClB9N,EAAW4N,KAHZG,GAAU3c,YAAiB2c,IAAW,GAOjC3c,YAAiBqS,YAAWyK,gBAK3CC,GAAoB/c,YAAiBgd,YAAUrL,gBAC/CsL,GAAgBjd,YAAiBgd,YAAUE,iBAE3CC,GAAUC,eAUVC,IAPWnM,EAAY+L,GACZnO,EAAciO,KAHfI,GAAUnd,YAAiBmd,IAAW,GAOjCnd,YAAiBqS,YAAWiL,gBAK3CC,GAAoBvd,YAAiBwd,YAAU7L,gBAC/C8L,GAAgBzd,YAAiBwd,YAAUE,gBAE3CC,GAAUC,eAUVC,IAPW/O,EAAcyO,GACdlM,GAAYoM,KAHbE,GAAU3d,YAAiB2d,IAAW,GAOjC3d,YAAiBqS,YAAWyL,gBAK3CC,GAAoB/d,YAAiBge,YAAUrM,gBAC/CsM,GAAeje,YAAiBge,YAAUE,iBAE1CC,GAAUC,eAUVC,IAPWvP,EAAciP,GACd3O,EAAW6O,KAHZE,GAAUne,YAAiBme,IAAW,GAOjCne,YAAiBqS,YAAWiM,gBAK3CC,GAAgBve,YAAiBwe,YAAUhpB,iBAC3CipB,GAAgBze,YAAiBwe,YAAUN,iBAE3CQ,GAAUC,eAUVC,IAPWhQ,EAAW2P,GACXnP,EAAWqP,KAHZC,GAAU1e,YAAiB0e,IAAW,GAOjC1e,YAAiBqS,YAAWwM,gBAK7CC,GAAgB9e,YAAiB+e,YAAUvpB,iBAC3CwpB,GAAchf,YAAiB+e,YAAUE,iBAEzCC,GAAUC,eAUVC,IAPWxQ,EAAWkQ,GACXtN,GAAYwN,KAHbE,GAAUlf,YAAiBkf,IAAW,GAOjClf,YAAiBqS,YAAWgN,gBAK3CC,GAAoBtf,YAAiBuf,YAAU5N,gBAC/C6N,GAAexf,YAAiBuf,YAAUN,iBAE1CQ,GAAUC,eAUVC,IAPW7Q,EAAcwQ,GACd9N,GAAYgO,KAHbC,GAAUzf,YAAiByf,IAAW,GAOjCzf,YAAiBqS,YAAWuN,gBAQzCC,GAA8BpjB,mBAAQ,WAC1C,OAAO,IAAI5B,IAAUyT,GAA2BnN,aAAa0N,KAC5D,CAACA,EAAeP,IAEbwR,GAAyBD,GAA4BE,IAAI,GACzDC,KAAuB1R,GAA4BA,EAA0ByR,IAAI,GAIvF,IAH8BD,IAAyB9f,YAAiB6f,GAA6B,IACzEG,IAAuBhgB,YAAiBsO,EAA2B,IAEhD3G,aAAW,cAACuG,EAAD,CAAkB+R,IAAK1R,IAAa,CAC5F3G,UAAW,SACXsY,eAAgB,CAAEC,MAAO,OAF3B,GAAQrY,UAAR,GAAmBC,QAAnB,GAA4BC,eAqB5B,OACE,eAAC,KAAD,CAAO3K,MAAOxI,EAAE,yBAA0BiH,UAAWA,EAArD,UACC,eAAC,IAAD,CAAM1E,WAAW,SAASd,eAAe,gBAAzC,UACH,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOyb,GAAO1V,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,yBAA5B,UAEA,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACA,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOmY,GAAOpS,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAO3C,SAAS,OAAOiR,GAAI,GAA3B,eAAkC/T,EAAE,gCAApC,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAAUpI,SAAS,OAAO3C,MAAM,UAAUoF,MAAOgZ,GAAOjT,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,4BAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAAUpI,SAAS,OAAO3C,MAAM,UAAUoF,MAAO8Z,GAAO/T,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,iCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAO3C,MAAM,UAAUoF,MAAOsc,GAAOvW,OAAO,KAAK7F,SAAU,IAC7E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,0BAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOkiB,GAAQnc,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,yBAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAO2hB,GAAQ5b,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,2BAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAO4c,GAAO7W,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,gCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOod,GAAOrX,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,kCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAO4d,GAAO7X,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,gCAA5B,UAEG,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACH,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAO2a,GAAO5U,OAAO,KAAK7F,SAAU,IAC9E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,gCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOyiB,GAAQ1c,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,gCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOoe,GAAQrY,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAMsO,GAAI,GAAIjR,SAAS,OAAvB,eAAkC9C,EAAE,uCAApC,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOogB,GAAQra,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,gCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOijB,GAAQld,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,iCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOohB,GAAQrb,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,iCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAO4e,GAAQ7Y,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,gCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOyjB,GAAQ1d,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,iCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAO4f,GAAQ7Z,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,kCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOof,GAAQrZ,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,qCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAO4gB,GAAQ7a,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,oCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOikB,GAAQle,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,gCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOwkB,GAAQze,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,yBAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOglB,GAAQjf,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,iCAA5B,UAEI,eAAC,IAAD,CAAMuC,WAAW,SAASd,eAAe,gBAAzC,UACJ,cAACyJ,EAAA,EAAD,CAASpI,SAAS,OAAQ3C,MAAM,UAAUoF,MAAOulB,GAAQxf,OAAO,KAAK7F,SAAU,IAC/E,eAAC,KAAD,CAAM3C,SAAS,OAAf,eAA0B9C,EAAE,0BAA5B,eCnkBI0O,GAAalP,IAAOC,IAAV,4EA+DD8rB,GAzDI,WACjB,IAAQvrB,EAAMC,cAAND,EACR,EAGIwZ,eAFFC,EADF,EACEA,0BACQC,EAFV,EAEEE,KAAQF,QAEJM,EAAgB9N,cAEhB8e,EAA8BpjB,mBAAQ,WAC1C,OAAO,IAAI5B,IAAUyT,GAA2BnN,aAAa0N,KAC5D,CAACA,EAAeP,IAEbwR,EAAyBD,EAA4BE,IAAI,GACzDC,IAAuB1R,GAA4BA,EAA0ByR,IAAI,GAIjF7R,GAHwB4R,GAAyB9f,YAAiB6f,EAA6B,IACzEG,GAAuBhgB,YAAiBsO,EAA2B,IAEtE,SAAC,GAAD,IAAG2R,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAM5oB,GAAG,OAAT,SAAiBxC,EAAE,8EACnB,cAAC,KAAD,CAAMwC,GAAG,OAAT,SACGxC,EACC,+JAGJ,cAAC,KAAD,CAAM2F,MAAO,CAAE6lB,WAAY,QAA3B,SACGxrB,EAAE,+EAAgF,CAAEorB,IAAKA,EAAM,aAKtG,EAA+BrgB,aAAS,cAAC,GAAD,CAAWsO,iBAAkBA,KAA9DoS,EAAP,oBAEA,EAA+C3Y,aAAW,cAACuG,EAAD,CAAkB+R,IAAK1R,IAAa,CAC5F3G,UAAW,aACXC,cAAe,CAAC,GAAI,MAFtB,EAAQC,UAAR,EAAmBC,QAAnB,EAA4BC,eAK5B,OACE,mCACE,cAAC,GAAD,UACI,cAAC,IAAD,CAAMxQ,cAAc,SAApB,SAEE,cAAC,IAAD,CACE7C,QAAS2rB,EACT7kB,MAAM,KACN7D,QAAQ,UACRqS,GAAG,wBAJL,SAMGpV,EAAE,cCnEX2Q,GAAYnR,IAAOC,IAAV,yFAGX,qBAAGC,MAAkBoF,aAAaE,MAwBvB0mB,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,IAIb,OACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAY/oB,QAAQ,OAAO6D,MAAM,KAAKwO,GAAG,oBAAoBtV,QAAS,kBAAM+rB,EAAavrB,GAASyrB,OAAlG,SACE,cAAC,IAAD,CAAc5rB,MAAOwrB,IAAarrB,GAASyrB,KAAO,UAAY,mBAEhE,cAAC,KAAD,CAAYhpB,QAAQ,OAAO6D,MAAM,KAAKwO,GAAG,qBAAqBtV,QAAS,kBAAM+rB,EAAavrB,GAAS0rB,QAAnG,SACE,cAAC,KAAD,CAAc7rB,MAAOwrB,IAAarrB,GAAS0rB,MAAQ,UAAY,uBCMjEC,GAAmBzsB,IAAOC,IAAV,sXAYlB,qBAAGC,MAAkBoF,aAAaE,MAQhCknB,GAAgB1sB,IAAOC,IAAV,oIAKfyF,MAKEinB,GAAe3sB,IAAOC,IAAV,mEACZyF,MAKAknB,GAAkB5sB,IAAOC,IAAV,gKAMjB,qBAAGC,MAAkBoF,aAAaE,MAMhCqnB,GAAe7sB,IAAOC,IAAV,qSAWd,qBAAGC,MAAkBoF,aAAaE,MAiBhCsnB,IAPc9sB,YAAO0R,KAAP1R,CAAH,gGAOK,SAAC+sB,EAAyBC,GAC9C,OAAID,GAAkBC,GACZD,EAAiBC,GAAcrmB,eAAe,QAAS,CAAEkJ,sBAAuB,IAEtFkd,EACKA,EAAepmB,eAAe,QAAS,CAAEkJ,sBAAuB,IAElE,OAswBMod,GAnwBS,WACtB,MAAiB3T,cAAT4T,EAAR,EAAQA,KACR,EAAqBxiB,cAAbuB,EAAR,EAAQA,SACR,EAAcxL,cAAND,EAAR,EAAQA,EACR,EAA0C2sB,cAA5BC,EAAd,EAAQ5U,KAAe6U,EAAvB,EAAuBA,eACjB5gB,EAAYC,cAClB,EAA0B/E,mBAAS,IAAnC,mBAAO2lB,EAAP,KAAcC,EAAd,KACA,EAAgCC,YAAgB1sB,GAAS0rB,MAAO,CAAEiB,gBAAiB,sBAAnF,mBAAOtB,EAAP,KAAiBuB,EAAjB,KACA,EAAoB5iB,cAAZD,EAAR,EAAQA,QACR,EAAoClD,mBAAS,OAA7C,mBAAOgmB,EAAP,KAAmBC,EAAnB,KACMC,EAAoBtV,iBAAO,GAE3BuV,EAAa7hB,EAASC,SAAS,YAC/B6hB,EAAa9hB,EAASC,SAAS,WAC/B0E,IAAYmd,IAAeD,EAE7BzT,GAAYC,cACZC,GAAWF,GAAUtN,WACrByN,GAAgB9N,cAChB+N,GAAcD,GAAczN,WAC5B2N,GAAYC,cACZC,GAAWF,GAAU3N,WACrB8N,GAAYC,cACZC,GAAWF,GAAU9N,WACrBiO,GAAcC,cACdC,GAAaF,GAAYjO,WACzBoO,GAAYC,cACZC,GAAWF,GAAUpO,WACrBuO,GAAmBC,cACnBC,GAAkBF,GAAiBvO,WACnC0O,GAAYC,cACZC,GAAWF,GAAU1O,WACrB6O,GAAiBC,cACjBC,GAAgBF,GAAe7O,WAC/BgP,GAAYC,cACZC,GAAWF,GAAUhP,WACrBmP,GAAcC,cACdC,GAAaF,GAAYnP,WACzBsP,GAAgBC,cAChBC,GAAeF,GAActP,WAC7ByP,GAAaC,cACbC,GAAYF,GAAWzP,WACvB4P,GAAaC,cACbC,GAAYF,GAAW5P,WACvB+P,GAAaC,cACbC,GAAYF,GAAW/P,WACvBkQ,GAAaC,cACbC,GAAYF,GAAWlQ,WAIrBqQ,GAAkBzR,YAAiB0R,YAASC,gBAC5CC,GAAe5R,YAAiB0R,YAASlc,iBAEzCqc,GAASC,eACTC,GAASF,GAAS7R,YAAiB6R,IAAU,EAE7CG,GAASlD,GAAc2C,GACvBQ,GAAUrD,GAAWgD,GACrBM,GAAUF,GAASC,GACnBE,GAASD,GAAUH,GAEnBK,GAAcpS,YAAiBqS,YAAWC,gBAE1CC,GAAQJ,GAASC,GAGjBI,GAAmBxS,YAAiByS,YAASd,gBAC7Ce,GAAgB1S,YAAiByS,YAASjd,iBAE1Cmd,GAASC,eACTC,GAASF,GAAS3S,YAAiB2S,IAAU,EAE7CG,GAAUhE,GAAc0D,GACxBO,GAAUnE,GAAW8D,GACrBM,GAAUF,GAAUC,GACpBE,GAAUD,GAAUH,GAEpBK,GAAclT,YAAiBqS,YAAWc,gBAE1CC,GAAQH,GAAUC,GAElBG,GAAmBrT,YAAiBsT,YAAS3B,gBAC7C4B,GAAgBvT,YAAiBsT,YAASE,gBAE1CC,GAASC,eACTC,GAASF,GAASzT,YAAiByT,IAAU,EAE7CG,GAAU9E,GAAcuE,GACxBQ,GAAU,EAAIN,GACdO,GAAUF,GAAUC,GACpBE,GAAUD,GAAUH,GAEpBK,GAAchU,YAAiBqS,YAAW4B,gBAE1CC,GAAQH,GAAUC,GAElBG,GAAmBnU,YAAiBoU,YAASzC,gBAC7C0C,GAAiBrU,YAAiBoU,YAASZ,gBAE3Cc,GAASC,eACTC,GAASF,GAAStU,YAAiBsU,IAAU,EAE7CG,GAAW3F,GAAcqF,GACzBO,GAAW,EAAIL,GACfM,GAAWF,GAAWC,GACtBE,GAAUD,GAAWH,GAErBK,GAAc7U,YAAiBqS,YAAWyC,gBAE1CC,GAAQH,GAAUC,GAEhBG,GAAehV,YAAiBiV,YAASC,gBACzCC,GAAgBnV,YAAiBiV,YAASzf,iBAE1C4f,GAASC,eACTC,GAAUF,GAASpV,YAAiBoV,IAAU,EAE9CG,GAAWtG,GAAW+F,GACtBQ,GAAW5G,GAAWuG,GACtBM,GAAWF,GAAWC,GACtBE,GAAUD,GAAWH,GAErBK,GAAc3V,YAAiBqS,YAAWuD,gBAE1CC,GAAQH,GAAUC,GAAc,EAEhCG,GAAgB9V,YAAiB+V,YAASb,gBAC1Cc,GAAiBhW,YAAiB+V,YAASvC,gBAG3CyC,GAAUC,eAUVQ,IAPWzH,GAAW6G,GACX,EAAIE,KAHLC,GAAUjW,YAAiBiW,IAAW,GAOlCjW,YAAiBqS,YAAWoE,gBAEV,EAEhCE,GAAgB3W,YAAiB4W,YAAS1B,gBAC1C2B,GAAmB7W,YAAiB4W,YAASjF,gBAE7CmF,GAAUC,eAUVC,IAPW/H,GAAW0H,GACX7H,GAAc+H,KAHfC,GAAU9W,YAAiB8W,IAAW,GAOlC9W,YAAiBqS,YAAW4E,gBAEV,EAEpCC,GAAiBlX,YAAiBmX,YAASC,gBAC3CC,GAAmBrX,YAAiBmX,YAASxF,gBAE7C2F,GAAUC,eAUVC,IAPWjI,GAAa2H,GACbpI,GAAcuI,KAHfC,GAAUtX,YAAiBsX,IAAW,GAOlCtX,YAAiBqS,YAAWoF,gBAI1CC,GAAe1X,YAAiB2X,YAASC,iBACzCC,GAAmB7X,YAAiB2X,YAAShG,gBAE7CmG,GAAUC,eAUVC,IAPWtI,GAAWgI,GACX5I,GAAc+I,KAHfC,GAAU9X,YAAiB8X,IAAW,GAOlC9X,YAAiBqS,YAAW4F,gBAI1CC,GAAgBlY,YAAiBmY,YAAUC,iBAC3CC,GAAmBrY,YAAiBmY,YAAUxG,gBAE9C2G,GAAUC,eAUVC,IAPW3I,GAAkBqI,GAClBpJ,GAAcuJ,KAHfC,GAAUtY,YAAiBsY,IAAW,GAOjCtY,YAAiBqS,YAAWoG,gBAI3CC,GAAmB1Y,YAAiB2Y,YAAUhH,gBAC9CiH,GAAe5Y,YAAiB2Y,YAAUE,iBAE1CC,GAAUC,eAUVC,IAPWhJ,GAAW4I,GACX9J,GAAc4J,KAHfI,GAAU9Y,YAAiB8Y,IAAW,GAOjC9Y,YAAiBqS,YAAW4G,gBAK3CC,GAAoBlZ,YAAiBmZ,YAAUxH,gBAC/CyH,GAAoBpZ,YAAiBmZ,YAAUE,iBAE/CC,GAAUC,eAUVC,IAPWrJ,GAAgBiJ,GAChBtK,GAAcoK,KAHfI,GAAUtZ,YAAiBsZ,IAAW,GAOjCtZ,YAAiBqS,YAAWoH,gBAK3CC,GAAoB1Z,YAAiB2Z,YAAUhI,gBAC/CiI,GAAiB5Z,YAAiB2Z,YAAUE,iBAE5CC,GAAUC,eAUVC,IAPWvJ,GAAamJ,GACb9K,GAAc4K,KAHfI,GAAU9Z,YAAiB8Z,IAAW,GAOjC9Z,YAAiBqS,YAAW4H,gBAK3CC,GAAoBla,YAAiBma,YAAUxI,gBAC/CyI,GAAepa,YAAiBma,YAAUE,iBAE1CC,GAAUC,eAUVC,IAPWlK,GAAW8J,GACXtL,GAAcoL,KAHfI,GAAUta,YAAiBsa,IAAW,GAKhB,EAEjBta,YAAiBqS,YAAWoI,gBAK3CC,GAAoB1a,YAAiB2a,YAAUhJ,gBAC/CiJ,GAAmB5a,YAAiB2a,YAAUE,iBAE9CC,GAAUC,eAUVC,IAPWpK,GAAegK,GACf9L,GAAc4L,KAHfI,GAAU9a,YAAiB8a,IAAW,GAKhB,EAEjB9a,YAAiBqS,YAAW4I,gBAK3CC,GAAoBlb,YAAiBmb,YAAUxJ,gBAC/CyJ,GAAgBpb,YAAiBmb,YAAUE,iBAE3CC,GAAUC,eAUVC,IAPWzK,GAAYqK,GACZtM,GAAcoM,KAHfI,GAAUtb,YAAiBsb,IAAW,GAKhB,EAEjBtb,YAAiBqS,YAAWoJ,gBAK3CC,GAAgB1b,YAAiB2b,YAAUnmB,iBAC3ComB,GAAkB5b,YAAiB2b,YAAUvE,gBAE7CyE,GAAUC,eAUVC,IAPWxM,GAAaqM,GACbhN,GAAW8M,KAHZG,GAAU7b,YAAiB6b,IAAW,GAOjC7b,YAAiBqS,YAAW2J,gBAK3CC,GAAgBjc,YAAiBkc,YAAU1mB,iBAC3C2mB,GAAgBnc,YAAiBkc,YAAUtE,iBAE3CwE,GAAUC,eAUVC,IAPW5M,GAAWyM,GACXvN,GAAWqN,KAHZG,GAAUpc,YAAiBoc,IAAW,GAOjCpc,YAAiBqS,YAAWkK,gBAK3CC,GAAgBxc,YAAiByc,YAAUjnB,iBAC3CknB,GAAsB1c,YAAiByc,YAAUrE,iBAEjDuE,GAAUC,eAUVC,IAPWhN,GAAkB6M,GAClB9N,GAAW4N,KAHZG,GAAU3c,YAAiB2c,IAAW,GAOjC3c,YAAiBqS,YAAWyK,gBAK3CC,GAAoB/c,YAAiBgd,YAAUrL,gBAC/CsL,GAAgBjd,YAAiBgd,YAAUE,iBAE3CC,GAAUC,eAUVC,IAPWnM,GAAY+L,GACZnO,GAAciO,KAHfI,GAAUnd,YAAiBmd,IAAW,GAOjCnd,YAAiBqS,YAAWiL,gBAK3CC,GAAoBvd,YAAiBwd,YAAU7L,gBAC/C8L,GAAgBzd,YAAiBwd,YAAUE,gBAE3CC,GAAUC,eAUVC,IAPW/O,GAAcyO,GACdlM,GAAYoM,KAHbE,GAAU3d,YAAiB2d,IAAW,GAOjC3d,YAAiBqS,YAAWyL,gBAK3CC,GAAoB/d,YAAiBge,YAAUrM,gBAC/CsM,GAAeje,YAAiBge,YAAUE,iBAE1CC,GAAUC,eAUVC,IAPWvP,GAAciP,GACd3O,GAAW6O,KAHZE,GAAUne,YAAiBme,IAAW,GAOjCne,YAAiBqS,YAAWiM,gBAK3CC,GAAgBve,YAAiBwe,YAAUhpB,iBAC3CipB,GAAgBze,YAAiBwe,YAAUN,iBAE3CQ,GAAUC,eAUVC,IAPWhQ,GAAW2P,GACXnP,GAAWqP,KAHZC,GAAU1e,YAAiB0e,IAAW,GAOjC1e,YAAiBqS,YAAWwM,gBAK3CC,GAAgB9e,YAAiB+e,YAAUvpB,iBAC3CwpB,GAAchf,YAAiB+e,YAAUE,iBAEzCC,GAAUC,eAUVC,IAPWxQ,GAAWkQ,GACXtN,GAAYwN,KAHbE,GAAUlf,YAAiBkf,IAAW,GAOjClf,YAAiBqS,YAAWgN,gBAK3CC,GAAoBtf,YAAiBuf,YAAU5N,gBAC/C6N,GAAexf,YAAiBuf,YAAUN,iBAE1CQ,GAAUC,eAcT2C,GAAc9P,GAAQa,GAAQc,GAAQa,GAAQc,GAAQa,GAAQM,GAAQQ,GAAQQ,GAAQQ,GAASQ,GAASQ,GAASQ,GAASQ,GAASQ,GAASQ,GAASO,GAASO,GAASO,GAASQ,GAAUQ,GAASQ,GAASO,GAASQ,IAX3MtQ,GAAcwQ,GACd9N,GAAYgO,KAHbC,GAAUzf,YAAiByf,IAAW,GAOjCzf,YAAiBqS,YAAWuN,gBAQ/C0C,YAAiBH,GAIjB,IAAMxb,IAAiBzH,KAAcA,GAAWwiB,EAEhD,GAAoCa,YAAsBtd,IAA1D,qBAAOud,GAAP,MAAmBC,GAAnB,MAEMC,GAAcjB,EAAQkB,QAAO,SAACxgB,GAAD,OAAuB,IAAbA,EAAKpE,KAAiC,OAApBoE,EAAKpL,aAAwB6rB,YAAczgB,EAAKpE,QACzG8kB,GAAgBpB,EAAQkB,QAAO,SAACxgB,GAAD,OAAuB,IAAbA,EAAKpE,KAAiC,OAApBoE,EAAKpL,aAAwB6rB,YAAczgB,EAAKpE,QAC3G+kB,GAAgBrB,EAAQkB,QAAO,SAACxgB,GAAD,OAAUygB,YAAczgB,EAAKpE,QAE5DglB,GAAkBL,GAAYC,QAClC,SAACxgB,GAAD,OAAUA,EAAKI,UAAY,IAAI1H,IAAUsH,EAAKI,SAAS3D,eAAeoE,cAAc,MAGhFggB,GAAsBH,GAAcF,QACxC,SAACxgB,GAAD,OAAUA,EAAKI,UAAY,IAAI1H,IAAUsH,EAAKI,SAAS3D,eAAeoE,cAAc,MAGhFigB,GAAsBH,GAAcH,QACxC,SAACxgB,GAAD,OAAUA,EAAKI,UAAY,IAAI1H,IAAUsH,EAAKI,SAAS3D,eAAeoE,cAAc,MAGhFkgB,GAAYpmB,uBAChB,SAACqmB,GACC,IAAIC,EAA+CD,EAAepqB,KAAI,SAACoJ,GACrE,IAAKA,EAAKkhB,sBAAwBlhB,EAAKuC,WAAW4e,UAChD,OAAOnhB,EAET,IAAMohB,EAAiB,IAAI1oB,IAAUsH,EAAKkhB,qBAAqBpjB,MAAMkC,EAAKuC,WAAW4e,WACrF,EAAyCre,GACrCue,YAAW,IAAI3oB,IAAUsH,EAAKshB,YAAa3iB,EAAWyiB,EAAgBphB,EAAKG,YAAYohB,IAAQC,UAC/F,CAAEvC,eAAgB,EAAGC,aAAc,GAF/BD,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,aAIxB,OAAO,2BAAKlf,GAAZ,IAAkBkD,IAAK+b,EAAgBC,eAAcrd,UAAWuf,OAGlE,GAAI5B,EAAO,CACT,IAAMiC,EAAiBC,YAASlC,EAAMla,eACtC2b,EAAwBA,EAAsBT,QAAO,SAACxgB,GACpD,OAAO0hB,YAAS1hB,EAAKkB,SAASoE,eAAelH,SAASqjB,MAG1D,OAAOR,IAET,CAACtiB,EAAW6gB,EAAO1c,KAOf6e,GAAclX,iBAAuB,MAE3C,GAAwD5Q,mBAjgB1B,IAigB9B,qBAAO+nB,GAAP,MAA6BC,GAA7B,MACA,GAA0ChoB,oBAAS,GAAnD,qBAAOioB,GAAP,MAAsBC,GAAtB,MAEMC,GAAsB1nB,mBAAQ,WAClC,IAAI2nB,EAAc,GAmClB,OAVInf,KACFmf,EAA2BlB,GAAbV,GAAuBO,GAA6BL,KAEhEN,IACFgC,EAA2BlB,GAAbV,GAAuBQ,GAAiCH,KAEpEV,IACFiC,EAA2BlB,GAAbV,GAAuBS,GAAiCH,KA9BtD,SAACuB,GACjB,OAAQrC,GACN,IAAK,MACH,OAAOsC,kBAAQD,GAAO,SAACliB,GAAD,OAA+BA,EAAKkD,IAAMlD,EAAKkf,eAAc,QACrF,IAAK,aACH,OAAOiD,kBACLD,GACA,SAACliB,GAAD,OAAgCA,EAAKpL,WAAasR,OAAOlG,EAAKpL,WAAWwtB,MAAM,GAAI,IAAM,IACzF,QAEJ,IAAK,SACH,OAAOD,kBACLD,GACA,SAACliB,GAAD,OAAgCA,EAAKI,SAAW8F,OAAOlG,EAAKI,SAAS1B,UAAY,IACjF,QAEJ,IAAK,YACH,OAAOyjB,kBAAQD,GAAO,SAACliB,GAAD,OAA+BkG,OAAOlG,EAAK6B,aAAY,QAC/E,QACE,OAAOqgB,GAcNG,CAAUJ,GAAaG,MAAM,EAAGR,MACtC,CACD/B,EACAU,GACAQ,GACAL,GACAC,GACA7d,GACAmd,EACAD,EACAc,GACAD,GACAR,GACAO,GACAgB,KAGF7B,EAAkB9U,QAAU+W,GAAoBrrB,OAEhDsS,qBAAU,WAaH6Y,KACsB,IAAIQ,sBAbT,SAACC,GACrB,YAAgBA,EAAhB,MACUC,gBACRX,IAAwB,SAACY,GACvB,OAAIA,GAAyB1C,EAAkB9U,QACtCwX,EAjkBa,GAmkBfA,OAMsD,CAC/DC,WAAY,MACZC,UAAW,IAEIC,QAAQjB,GAAY1W,SACrC8W,IAAiB,MAElB,CAACC,GAAqBF,KAEzB,IAAMe,GAAUb,GAAoBprB,KAAI,SAACoJ,GACvC,IAAQwC,EAAsBxC,EAAtBwC,MAAOD,EAAevC,EAAfuC,WACTpP,EAAeqP,EAAMlD,QACrBpM,EAAoBqP,EAAWjD,QAC/BrL,EAAU+L,EAAKkB,UAAYlB,EAAKkB,SAAS3L,MAAM,KAAK,GAAGyM,cAAchH,QAAQ,UAAW,IACxFhG,EAAWgL,EAAKiC,WAAajC,EAAKiC,UAAU1M,MAAM,KAAK,GAAGyM,cAAchH,QAAQ,GAAI,IA+B1F,MA7BsB,CACpBkI,IAAK,CACHjL,MAAO+mB,GAAchf,EAAKkD,IAAKlD,EAAKkf,cACpCtqB,WAAYoL,EAAKpL,WACjBX,UACAd,eACAD,oBACAyL,YACA8E,cAAezD,EAAKkD,KAEtBlD,KAAM,CACJ8D,MAAO9D,EAAK4C,UAAUrN,MAAM,KAAK,GAAGsN,oBACpCkB,MAAO9P,EACP+P,OAAQhP,EACR4G,IAAKoE,EAAKpE,KAEZyI,OAAQ,CACN3F,SAAUb,YAAiB,IAAInF,IAAUsH,EAAKI,SAAS1B,WACvD9C,IAAKoE,EAAKpE,KAEZiG,UAAW,CACTA,UAAW7B,EAAK6B,WAElBjN,WAAY,CACVA,WAAYoL,EAAKpL,YAEnB2S,QAASvH,MAkFb,OACE,qCACE,eAAC8iB,EAAA,EAAD,WACE,cAAC,IAAD,CAASrX,GAAG,KAAKnS,MAAM,MAAMzG,MAAM,YAAYqC,GAAG,OAAlD,SACGxC,EAAE,sBAEL,cAAC,IAAD,CAAS4G,MAAM,KAAKzG,MAAM,OAA1B,SACGH,EAAE,+CAEL,eAAC,IAAD,CAAM4C,GAAG,MAAT,UACI,cAACsI,EAAA,EAAD,CAAS/K,MAAM,UAAUmL,OAAO,KAAKxI,SAAS,OAAO1C,MAAI,EAACmF,MAAOioB,GAAY/nB,SAAU,IACvF,cAAC4qB,GAAD,OAEA,cAAC,KAAD,CAAMvtB,SAAS,OAAO1C,MAAI,EAACD,MAAM,YAAY4T,GAAG,MAAhD,SACG/T,EAAE,8BAGX,eAACswB,EAAA,EAAD,WACE,eAACrE,GAAD,WACE,eAACI,GAAD,WACE,cAAC,GAAD,CAAYV,SAAUA,EAAUC,SAAU,SAACE,GAAD,OAAoBoB,EAAYpB,MAC1E,eAACI,GAAD,WACE,cAAC,KAAD,CAAQqE,QAAS5C,GAAYtoB,SAAU,kBAAMuoB,IAAeD,KAAa/mB,MAAM,OAC/E,eAAC,KAAD,eAAQ5G,EAAE,qBAEZ,cAAC,GAAD,CAAgB4Y,wBAAyBuV,GAAoBlqB,OAAS,OAExE,eAACmoB,GAAD,WACE,eAACD,GAAD,WACE,cAAC,KAAD,CAAM7d,cAAc,YAApB,SAAiCtO,EAAE,aACnC,cAACwwB,EAAA,EAAD,CACEC,QAAS,CACP,CACEpf,MAAOrR,EAAE,OACTuF,MAAO,OAET,CACE8L,MAAOrR,EAAE,OACTuF,MAAO,OAET,CACE8L,MAAOrR,EAAE,cACTuF,MAAO,cAET,CACE8L,MAAOrR,EAAE,UACTuF,MAAO,UAET,CACE8L,MAAOrR,EAAE,aACTuF,MAAO,cAGXF,SAzDiB,SAACqrB,GAC9BtD,EAAcsD,EAAOnrB,aA2Db,eAAC4mB,GAAD,CAAcxmB,MAAO,CAAEgrB,WAAY,IAAnC,UACE,cAAC,KAAD,CAAMriB,cAAc,YAApB,SAAiCtO,EAAE,YACnC,cAAC4wB,EAAA,EAAD,CAAavrB,SApQC,SAACwrB,GACzB9D,EAAS8D,EAAMC,OAAOvrB,QAmQ8BoB,YAAY,0BAtI5C,WACpB,GAAIglB,IAAarrB,GAAS0rB,OAASmE,GAAQlsB,OAAQ,CACjD,IAEMgU,EAFe1C,GAEQrR,KAAI,SAACyS,GAAD,MAAa,CAC5CvB,GAAIuB,EAAOvB,GACXC,KAAMsB,EAAOtB,KACbhE,MAAOsF,EAAOtF,MACd0f,KAAM,SAACnoB,EAAsBooB,GAC3B,OAAQra,EAAOtB,MACb,IAAK,OACH,OAAO2b,EAAE5b,GAAKxM,EAAEwM,GAClB,IAAK,MACH,OAAIxM,EAAE0P,SAAS9H,IAAIjL,OAASyrB,EAAE1Y,SAAS9H,IAAIjL,MAClCiO,OAAO5K,EAAE0P,SAAS9H,IAAIjL,OAASiO,OAAOwd,EAAE1Y,SAAS9H,IAAIjL,OAGvD,EACT,IAAK,SACH,OAAOqD,EAAE0P,SAAS3G,OAAO3F,SAAWglB,EAAE1Y,SAAS3G,OAAO3F,SACxD,QACE,OAAO,IAGbsJ,SAAUqB,EAAOrB,aAGnB,OAAO,cAAC,GAAD,CAAO0C,KAAMmY,GAASlY,QAASA,EAASnG,cAAeA,KAGhE,OACE,eAAChQ,EAAA,EAAD,WACE,cAAC,IAAD,CAAOmvB,OAAK,EAACvE,KAAI,UAAKA,GAAtB,SACG4C,GAAoBprB,KAAI,SAACoJ,GAAD,OACvB,cAAC,GAAD,CAEEA,KAAMA,EACN0B,WAAYsd,GAAchf,EAAKkD,IAAKlD,EAAKkf,cACzCvgB,UAAWA,EACX5B,QAASA,EACThJ,SAAS,GALJiM,EAAKpE,UAShB,cAAC,IAAD,CAAO+nB,OAAK,EAACvE,KAAI,UAAKA,EAAL,YAAjB,SACG4C,GAAoBprB,KAAI,SAACoJ,GAAD,OACvB,cAAC,GAAD,CAEEA,KAAMA,EACN0B,WAAYsd,GAAchf,EAAKkD,IAAKlD,EAAKkf,cACzCvgB,UAAWA,EACX5B,QAASA,EACThJ,SAAO,GALFiM,EAAKpE,UAShB,cAAC,IAAD,CAAO+nB,OAAK,EAACvE,KAAI,UAAKA,EAAL,aAAjB,SACG4C,GAAoBprB,KAAI,SAACoJ,GAAD,OACvB,cAAC,GAAD,CAEEA,KAAMA,EACN0B,WAAYsd,GAAchf,EAAKkD,IAAKlD,EAAKkf,cACzCvgB,UAAWA,EACX5B,QAASA,EACThJ,SAAO,GALFiM,EAAKpE,aA+EfgoB,GACA7mB,IAAYwiB,GAAkBc,IAC7B,cAAC,IAAD,CAAMlsB,eAAe,SAArB,SACE,cAAC0vB,EAAA,EAAD,MAGJ,qBAAK/d,IAAK6b","file":"static/js/37.86e5f105.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{t('See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image , Text} from '@pancakeswap/uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  lpLabel2?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol1?: string\n  tokenSymbol2?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol1,\n  lpLabel2,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol1}  width={90} height={90} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mt=\"0px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Text fontSize='13px' color=\"#F3BA2F\"  mb=\"4px\">{lpLabel2.split(' ')[0]}</Text>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n      </Flex>\n\n    </Wrapper>\n  )\n}\n\nexport default CardHeading","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BigNumber } from 'bignumber.js'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceBigNumber = new BigNumber(balance)\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n      return balanceBigNumber.toLocaleString()\n    }\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stakeFarm(masterChefContract, pid, amount)\n      console.info(txHash)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/farms/hooks'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\nimport useStakeFarms from '../../hooks/useStakeFarms'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport useToast from 'hooks/useToast'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  const callOptions = {\n    gasLimit: 381000,\n  }\n  \n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `${t('Harvested')}!`,\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n            )\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        {pendingTx ? t('Harvesting') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport useApproveFarm from '../../hooks/useApproveFarm'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const allowance = new BigNumber(allowanceAsString)\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n  const earnings = new BigNumber(earningsAsString)\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          VIZSLASWAP\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { Farm } from 'state/types'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport {  BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 1px solid ${({ theme }) => theme.colors.secondary};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const lpLabel2 = farm.lpSymbol2 && farm.lpSymbol2.toUpperCase().replace('', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('VIZSLASWAP')\n  const lpLabel3 = farm.lpSymbol3 && farm.lpSymbol3\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}${lpLabel3}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.isEvent === (true)\n  const farmImage = farm.lpSymbol1.split(' ')[0].toLocaleLowerCase()\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          lpLabel2={lpLabel2}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          farmImage={farmImage}\n          tokenSymbol1={farm.token.symbol}\n          tokenSymbol2={farm.token.symbol}\n          />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <>\n                  {displayApr}%\n                </>\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>{earnLabel}</Text>\n        </Flex>\n        <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Image } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  label2: string\n  pid: number\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, label2, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.png`} alt=\"icon\" width={30} height={30} mr=\"10px\" />\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n        <Text color=\"gold\" fontSize=\"10px\" bold>{label2}</Text>\n\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 40px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      {t('The multiplier represents the amount of VIZSLASWAP rewards each farm gets.')}\n      <br />\n      <br />\n      {t('For example, if a 1x farm was getting 0.04 VIZSLASWAP per block, a 100x farm would be getting 4 VIZSLASWAP per block.')}\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 60px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          VIZSLASWAP\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading>{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Harvested')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {pendingTx ? t('Harvesting') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n  lpSymbol3\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = getAddress(lpAddresses)\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}${lpSymbol3}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{displayBalance()}</Heading>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n          {t('Stake')}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBscScanLink } from 'utils'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background:rgb(0,47,46);\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual , lpSymbol3} = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = getBscScanLink(lpAddress, 'address')\n  const info = `https://pancakeswap.info/pool/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`/add${lpSymbol3}/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/farms/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid rgb(0,47,46);\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePriceFpsBusd, usePollFarmsData,useFarms, usePriceLGCBusd, usePriceBnbBusd,usePriceliraBusd, usePriceLameaBusd, usePriceBVCBusd, usePriceBABYVIZSLABusd, usePriceETCBusd, usePriceATALIRABusd, usePriceEXZOBusd, usePriceskeletonBusd, usePricetripBusd, usePricebuildBusd, usePricebabyBusd } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress ,getFarm24Address, getFarm1Address, getlgcAddress,getFarm23Address, getFarm22Address, geLiraAddress, getFarm2Address, gettripAddress,getFarm4Address,getFarm5Address, getBusdAddress, getFarm3Address, getFarm6Address , getFarm7Address, getLAMEAAddress, getFarm8Address, getbvcAddress, getFarm9Address, getbabyvizslaAddress, getFarm10Address, getfpsAddress, getFarm11Address, getskeletonAddress, getFarm12Address, getFarm13Address, getFarm14Address , getFarm15Address, getFarm16Address , getFarm17Address, getFarm18Address, getFarm19Address, getFarm20Address, getFarm21Address, getbuildAddress, getethAddress, getataliraAddress, getexzoAddress, getbabyAddress, getFarm26Address, getFarm27Address} from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI, useFarm1,useFarm23, useFarm24, useTotalSupplyFarm24, useFarm22,useTotalSupplyFarm1 ,useTotalSupplyFarm23,useTotalSupplyFarm22, useMaster1 , useFarm2 ,useFarm3,useFarm4, useTotalSupplyFarm2, useTotalSupplyFarm3, useTotalSupplyFarm4, useFarm5, useTotalSupplyFarm5, useFarm6 , useTotalSupplyFarm6 , useFarm7 , useTotalSupplyFarm7 , useFarm8, useTotalSupplyFarm8, useFarm9, useTotalSupplyFarm9 , useFarm10, useTotalSupplyFarm10 , useFarm11, useTotalSupplyFarm11, useFarm12, useFarm13, useFarm14, useFarm15, useFarm16, useFarm17, useFarm18, useFarm19, useFarm20, useFarm21, useTotalSupplyFarm12, useTotalSupplyFarm13, useTotalSupplyFarm14,useTotalSupplyFarm15, useTotalSupplyFarm16, useTotalSupplyFarm17, useTotalSupplyFarm18, useTotalSupplyFarm19, useTotalSupplyFarm20,useTotalSupplyFarm21, useFarm27, useFarm26, useTotalSupplyFarm26, useTotalSupplyFarm27 } from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\n\ninterface ModalInfoProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst ModalInfo: React.FC<ModalInfoProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const bnbprice0 = usePriceBnbBusd()\n  const bnbprice = bnbprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hviprice0 = usePriceHVIBusd()\n  const hviprice = hviprice0.toNumber()\n  const lgcprice0 = usePriceLGCBusd()\n  const lgcprice = lgcprice0.toNumber()\n  const lameaprice0 = usePriceLameaBusd()\n  const lameaprice = lameaprice0.toNumber()\n  const bvcprice0 = usePriceBVCBusd()\n  const bvcprice = bvcprice0.toNumber()\n  const babyvizslaprice0 = usePriceBABYVIZSLABusd()\n  const babyvizslaprice = babyvizslaprice0.toNumber()\n  const fpsprice0 = usePriceFpsBusd()\n  const fpsprice = fpsprice0.toNumber()\n  const skeletonprice0 = usePriceskeletonBusd()\n  const skeletonprice = skeletonprice0.toNumber()\n  const ethprice0 = usePriceETCBusd()\n  const ehtprice = ethprice0.toNumber()\n  const buildprice0 = usePricebuildBusd()\n  const buildprice = buildprice0.toNumber()\n  const ataliraprice0 = usePriceATALIRABusd()\n  const ataliraprice = ataliraprice0.toNumber()\n  const exzoprice0 = usePriceEXZOBusd()\n  const exzoprice = exzoprice0.toNumber()\n  const tripprice0 = usePricetripBusd()\n  const tripprice = tripprice0.toNumber()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const babyprice0 = usePricebabyBusd()\n  const babyprice = babyprice0.toNumber()\n  \n  // farm 1\n    \n    const vizslalpbalance = getBalanceNumber(useFarm1(getCakeAddress()))\n    const bnblpbalance = getBalanceNumber(useFarm1(getWbnbAddress()))\n  \n    const kombo1 = useTotalSupplyFarm1()\n    const kombo2 = kombo1 ? getBalanceNumber(kombo1) : 0\n  \n    const teljes = vizslaprice * vizslalpbalance \n    const teljes2 = bnbprice * bnblpbalance\n    const teljes3 = teljes + teljes2\n    const minden = teljes3 / kombo2  \n    \n    const masterfarm1 = getBalanceNumber(useMaster1(getFarm1Address()))\n  \n    const farm1 = minden * masterfarm1\n  \n    // farm 2 \n    const vizslalpbalance2 = getBalanceNumber(useFarm2(getCakeAddress()))\n    const bnblpbalance2 = getBalanceNumber(useFarm2(getWbnbAddress()))\n  \n    const kombo3 = useTotalSupplyFarm2()\n    const kombo4 = kombo3 ? getBalanceNumber(kombo3) : 0\n  \n    const teljes4 = vizslaprice * vizslalpbalance2 \n    const teljes5 = bnbprice * bnblpbalance2\n    const teljes6 = teljes4 + teljes5\n    const minden1 = teljes6 / kombo4\n  \n    const masterfarm2 = getBalanceNumber(useMaster1(getFarm2Address()))\n  \n    const farm2 = minden1 * masterfarm2\n  // farm 3\n    const vizslalpbalance3 = getBalanceNumber(useFarm3(getCakeAddress()))\n    const busdlpbalance = getBalanceNumber(useFarm3(getBusdAddress()))\n  \n    const kombo5 = useTotalSupplyFarm3()\n    const kombo6 = kombo5 ? getBalanceNumber(kombo5) : 0\n   \n    const teljes7 = vizslaprice * vizslalpbalance3 \n    const teljes8 = 1 * busdlpbalance\n    const teljes9 = teljes7 + teljes8\n    const minden2 = teljes9 / kombo6\n  \n    const masterfarm3 = getBalanceNumber(useMaster1(getFarm3Address()))\n  \n    const farm3 = minden2 * masterfarm3\n    // farm 4\n    const vizslalpbalance4 = getBalanceNumber(useFarm4(getCakeAddress()))\n    const busdlpbalance2 = getBalanceNumber(useFarm4(getBusdAddress()))\n  \n    const kombo7 = useTotalSupplyFarm4()\n    const kombo8 = kombo7 ? getBalanceNumber(kombo7) : 0\n  \n    const teljes10 = vizslaprice * vizslalpbalance4\n    const teljes11 = 1 * busdlpbalance2\n    const teljes12 = teljes10 + teljes11\n    const minden3 = teljes12 / kombo8\n  \n    const masterfarm4 = getBalanceNumber(useMaster1(getFarm4Address()))\n  \n    const farm4 = minden3 * masterfarm4\n      // farm 5\n      const hvilpbalance = getBalanceNumber(useFarm5(getHVIAddress()))\n      const bnblpbalance3 = getBalanceNumber(useFarm5(getWbnbAddress()))\n  \n      const kombo9 = useTotalSupplyFarm5()\n      const kombo10 = kombo9 ? getBalanceNumber(kombo9) : 0\n  \n      const teljes13 = hviprice * hvilpbalance\n      const teljes14 = bnbprice * bnblpbalance3\n      const teljes15 = teljes13 + teljes14\n      const minden4 = teljes15 / kombo10\n  \n      const masterfarm5 = getBalanceNumber(useMaster1(getFarm5Address()))\n  \n      const farm5 = minden4 * masterfarm5 * 2\n      // farm 6\n      const hvilpbalance2 = getBalanceNumber(useFarm6(getHVIAddress()))\n      const busdlpbalance3 = getBalanceNumber(useFarm6(getBusdAddress()))\n  \n      \n      const kombo11 = useTotalSupplyFarm6()\n      const kombo12 = kombo11 ? getBalanceNumber(kombo11) : 0\n  \n      const teljes16 = hviprice * hvilpbalance2\n      const teljes17 = 1 * busdlpbalance3\n      const teljes18 = teljes16 + teljes17\n      const minden5 = teljes18 / kombo12\n  \n      const masterfarm6 = getBalanceNumber(useMaster1(getFarm6Address()))\n  \n      const farm6 = minden5 * masterfarm6 * 2\n  // farm 7\n      const hvilpbalance3 = getBalanceNumber(useFarm7(getHVIAddress()))\n      const vizslalpbalance5 = getBalanceNumber(useFarm7(getCakeAddress()))\n  \n      const kombo13 = useTotalSupplyFarm7()\n      const kombo14 = kombo13 ? getBalanceNumber(kombo13) : 0\n  \n      const teljes19 = hviprice * hvilpbalance3\n      const teljes20 = vizslaprice * vizslalpbalance5\n      const teljes21 = teljes19 + teljes20\n      const minden6 = teljes21 / kombo14\n  \n      const masterfarm7 = getBalanceNumber(useMaster1(getFarm7Address()))\n  \n      const farm7 = minden6 * masterfarm7 * 2\n  // farm 8\n  const lamealpbalance = getBalanceNumber(useFarm8(getLAMEAAddress()))\n  const vizslalpbalance6 = getBalanceNumber(useFarm8(getCakeAddress()))\n  \n  const kombo15 = useTotalSupplyFarm8()\n  const kombo16 = kombo15 ? getBalanceNumber(kombo15) : 0\n  \n  const teljes22 = lameaprice * lamealpbalance\n  const teljes23 = vizslaprice * vizslalpbalance6\n  const teljes24 = teljes22 + teljes23\n  const minden7 = teljes24 / kombo16\n  \n  const masterfarm8 = getBalanceNumber(useMaster1(getFarm8Address()))\n  \n  const farm8 = minden7 * masterfarm8 \n  // farm 9\n  const bvclpbalance = getBalanceNumber(useFarm9(getbvcAddress()))\n  const vizslalpbalance7 = getBalanceNumber(useFarm9(getCakeAddress()))\n  \n  const kombo17 = useTotalSupplyFarm9()\n  const kombo18 = kombo17 ? getBalanceNumber(kombo17) : 0\n  \n  const teljes25 = bvcprice * bvclpbalance\n  const teljes26 = vizslaprice * vizslalpbalance7\n  const teljes27 = teljes25 + teljes26\n  const minden8 = teljes27 / kombo18\n  \n  const masterfarm9 = getBalanceNumber(useMaster1(getFarm9Address()))\n  \n  const farm9 = minden8 * masterfarm9\n  // farm 10\n  const babylpbalance = getBalanceNumber(useFarm10(getbabyvizslaAddress()))\n  const vizslalpbalance8 = getBalanceNumber(useFarm10(getCakeAddress()))\n  \n  const kombo19 = useTotalSupplyFarm10()\n  const kombo20 = kombo19 ? getBalanceNumber(kombo19) : 0\n  \n  const teljes28 = babyvizslaprice * babylpbalance\n  const teljes29 = vizslaprice * vizslalpbalance8\n  const teljes30 = teljes28 + teljes29\n  const minden9 = teljes30 / kombo20\n  \n  const masterfarm10 = getBalanceNumber(useMaster1(getFarm10Address()))\n  \n  const farm10 = minden9 * masterfarm10\n  // farm 11\n  const vizslalpbalance9 = getBalanceNumber(useFarm11(getCakeAddress()))\n  const fpslpbalance = getBalanceNumber(useFarm11(getfpsAddress()))\n  \n  const kombo21 = useTotalSupplyFarm11()\n  const kombo22 = kombo21 ? getBalanceNumber(kombo21) : 0\n  \n  const teljes31 = fpsprice * fpslpbalance\n  const teljes32 = vizslaprice * vizslalpbalance9\n  const teljes33 = teljes31 + teljes32\n  const minden10 = teljes33 / kombo22\n  \n  const masterfarm11 = getBalanceNumber(useMaster1(getFarm11Address()))\n  \n  const farm11 = minden10 * masterfarm11\n  \n  // farm 12\n  const vizslalpbalance10 = getBalanceNumber(useFarm12(getCakeAddress()))\n  const skeletonlpbalance = getBalanceNumber(useFarm12(getskeletonAddress()))\n  \n  const kombo23 = useTotalSupplyFarm12()\n  const kombo24 = kombo23 ? getBalanceNumber(kombo23) : 0\n  \n  const teljes34 = skeletonprice * skeletonlpbalance\n  const teljes35 = vizslaprice * vizslalpbalance10\n  const teljes36 = teljes34 + teljes35\n  const minden11 = teljes36 / kombo24\n  \n  const masterfarm12 = getBalanceNumber(useMaster1(getFarm12Address()))\n  \n  const farm12 = minden11 * masterfarm12\n  \n  // farm 13\n  const vizslalpbalance11 = getBalanceNumber(useFarm13(getCakeAddress()))\n  const buildlpbalance = getBalanceNumber(useFarm13(getbuildAddress()))\n  \n  const kombo25 = useTotalSupplyFarm13()\n  const kombo26 = kombo25 ? getBalanceNumber(kombo25) : 0\n  \n  const teljes37 = buildprice * buildlpbalance\n  const teljes38 = vizslaprice * vizslalpbalance11\n  const teljes39 = teljes37 + teljes38\n  const minden12 = teljes39 / kombo26\n  \n  const masterfarm13 = getBalanceNumber(useMaster1(getFarm13Address()))\n  \n  const farm13 = minden12 * masterfarm13\n  \n  // farm 14\n  const vizslalpbalance12 = getBalanceNumber(useFarm14(getCakeAddress()))\n  const ethlpbalance = getBalanceNumber(useFarm14(getethAddress()))\n  \n  const kombo27 = useTotalSupplyFarm14()\n  const kombo28 = kombo27 ? getBalanceNumber(kombo27) : 0\n  \n  const teljes40 = ehtprice * ethlpbalance\n  const teljes41 = vizslaprice * vizslalpbalance12\n  const teljes42 = teljes40 + teljes41\n  const minden13 = teljes42 / kombo28 * 2\n  \n  const masterfarm14 = getBalanceNumber(useMaster1(getFarm14Address()))\n  \n  const farm14 = minden13 * masterfarm14\n  \n  // farm 15\n  const vizslalpbalance13 = getBalanceNumber(useFarm15(getCakeAddress()))\n  const ataliralpbalance = getBalanceNumber(useFarm15(getataliraAddress()))\n  \n  const kombo29 = useTotalSupplyFarm15()\n  const kombo30 = kombo29 ? getBalanceNumber(kombo29) : 0\n  \n  const teljes43 = ataliraprice * ataliralpbalance\n  const teljes44 = vizslaprice * vizslalpbalance13\n  const teljes45 = teljes43 + teljes44\n  const minden14 = teljes45 / kombo30 * 2\n  \n  const masterfarm15 = getBalanceNumber(useMaster1(getFarm15Address()))\n  \n  const farm15 = minden14 * masterfarm15\n  \n  // farm 16\n  const vizslalpbalance16 = getBalanceNumber(useFarm16(getCakeAddress()))\n  const exzolpbalance = getBalanceNumber(useFarm16(getexzoAddress()))\n  \n  const kombo31 = useTotalSupplyFarm16()\n  const kombo32 = kombo31 ? getBalanceNumber(kombo31) : 0\n  \n  const teljes46 = exzoprice * exzolpbalance\n  const teljes47 = vizslaprice * vizslalpbalance16\n  const teljes48 = teljes46 + teljes47\n  const minden15 = teljes48 / kombo32 * 2\n  \n  const masterfarm16 = getBalanceNumber(useMaster1(getFarm16Address()))\n  \n  const farm16 = minden15 * masterfarm16\n  \n  // farm 17\n  const bnblpbalance4 = getBalanceNumber(useFarm17(getWbnbAddress()))\n  const lamealpbalance2 = getBalanceNumber(useFarm17(getLAMEAAddress()))\n  \n  const kombo33 = useTotalSupplyFarm17()\n  const kombo34 = kombo33 ? getBalanceNumber(kombo33) : 0\n  \n  const teljes49 = lameaprice * lamealpbalance2\n  const teljes50 = bnbprice * bnblpbalance4\n  const teljes51 = teljes49 + teljes50\n  const minden16 = teljes51 / kombo34\n  \n  const masterfarm17 = getBalanceNumber(useMaster1(getFarm17Address()))\n  \n  const farm17 = minden16 * masterfarm17\n  \n  // farm 18\n  const bnblpbalance5 = getBalanceNumber(useFarm18(getWbnbAddress()))\n  const bvclpbalance2 = getBalanceNumber(useFarm18(getbvcAddress()))\n  \n  const kombo35 = useTotalSupplyFarm18()\n  const kombo36 = kombo35 ? getBalanceNumber(kombo35) : 0\n  \n  const teljes52 = bvcprice * bvclpbalance2\n  const teljes53 = bnbprice * bnblpbalance5\n  const teljes54 = teljes52 + teljes53\n  const minden17 = teljes54 / kombo36\n  \n  const masterfarm18 = getBalanceNumber(useMaster1(getFarm18Address()))\n  \n  const farm18 = minden17 * masterfarm18\n  \n  // farm 19\n  const bnblpbalance6 = getBalanceNumber(useFarm19(getWbnbAddress()))\n  const babyvizslalpbalance = getBalanceNumber(useFarm19(getbabyvizslaAddress()))\n  \n  const kombo37 = useTotalSupplyFarm19()\n  const kombo38 = kombo37 ? getBalanceNumber(kombo37) : 0\n  \n  const teljes55 = babyvizslaprice * babyvizslalpbalance\n  const teljes56 = bnbprice * bnblpbalance6\n  const teljes57 = teljes55 + teljes56\n  const minden18 = teljes57 / kombo38\n  \n  const masterfarm19 = getBalanceNumber(useMaster1(getFarm19Address()))\n  \n  const farm19 = minden18 * masterfarm19\n  \n  // farm 20\n  const vizslalpbalance17 = getBalanceNumber(useFarm20(getCakeAddress()))\n  const triplpbalance = getBalanceNumber(useFarm20(gettripAddress()))\n  \n  const kombo39 = useTotalSupplyFarm20()\n  const kombo40 = kombo39 ? getBalanceNumber(kombo39) : 0\n  \n  const teljes58 = tripprice * triplpbalance\n  const teljes59 = vizslaprice * vizslalpbalance17\n  const teljes60 = teljes58 + teljes59\n  const minden19 = teljes60 / kombo40\n  \n  const masterfarm20 = getBalanceNumber(useMaster1(getFarm20Address()))\n  \n  const farm20 = minden19 * masterfarm20\n  \n  // farm 21\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65\n  const minden21 = teljes66 / kombo44\n  \n  const masterfarm22 = getBalanceNumber(useMaster1(getFarm22Address()))\n  \n  const farm22 = minden21 * masterfarm22\n  \n  // farm 22\n  const vizslalpbalance19 = getBalanceNumber(useFarm23(getCakeAddress()))\n  const lgclpbalance = getBalanceNumber(useFarm23(getlgcAddress()))\n  \n  const kombo45 = useTotalSupplyFarm23()\n  const kombo46 = kombo45 ? getBalanceNumber(kombo45) : 0\n  \n  const teljes67 = vizslaprice * vizslalpbalance19\n  const teljes68 = lgcprice * lgclpbalance\n  const teljes69 = teljes67 + teljes68\n  const minden22 = teljes69 / kombo46\n  \n  const masterfarm23 = getBalanceNumber(useMaster1(getFarm23Address()))\n  \n  const farm23 = minden22 * masterfarm23\n  \n  // farm 23\n  const bnblpbalance7 = getBalanceNumber(useFarm24(getWbnbAddress()))\n  const lgclpbalance2 = getBalanceNumber(useFarm24(getlgcAddress()))\n  \n  const kombo47 = useTotalSupplyFarm24()\n  const kombo48 = kombo47 ? getBalanceNumber(kombo47) : 0\n  \n  const teljes70 = bnbprice * bnblpbalance7\n  const teljes71 = lgcprice * lgclpbalance2\n  const teljes72 = teljes70 + teljes71\n  const minden23 = teljes72 / kombo48\n  \n  const masterfarm24 = getBalanceNumber(useMaster1(getFarm24Address()))\n  \n  const farm24 = minden23 * masterfarm24\n\n  // farm 24\nconst bnblpbalance8 = getBalanceNumber(useFarm26(getWbnbAddress()))\nconst babybalance = getBalanceNumber(useFarm26(getbabyAddress()))\n\nconst kombo49 = useTotalSupplyFarm26()\nconst kombo50 = kombo49 ? getBalanceNumber(kombo49) : 0\n\nconst teljes73 = bnbprice * bnblpbalance8\nconst teljes74 = babyprice * babybalance\nconst teljes75 = teljes73 + teljes74\nconst minden24 = teljes75 / kombo50\n\nconst masterfarm25 = getBalanceNumber(useMaster1(getFarm26Address()))\n\nconst farm25 = minden24 * masterfarm25\n\n// farm 25\nconst vizslalpbalance20 = getBalanceNumber(useFarm27(getCakeAddress()))\nconst babybalance2 = getBalanceNumber(useFarm27(getbabyAddress()))\n\nconst kombo51 = useTotalSupplyFarm27()\nconst kombo52 = kombo51 ? getBalanceNumber(kombo51) : 0\n\nconst teljes76 = vizslaprice * vizslalpbalance20\nconst teljes77 = babyprice * babybalance2\nconst teljes78 = teljes76 + teljes77\nconst minden25 = teljes78 / kombo52\n\nconst masterfarm26 = getBalanceNumber(useMaster1(getFarm27Address()))\n\nconst farm26 = minden25 * masterfarm26\n  \n  // minden farm \n  \n   const farmminden =  farm1 + farm2 + farm3 + farm4 + farm5 + farm6 + farm7 + farm8 + farm9 + farm10 + farm11 + farm12 + farm13 + farm14 + farm15 + farm16 + farm17 + farm18 + farm19 + farm20  + farm22 + farm23 + farm24\n  \n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Total staked (Mining)')} onDismiss={onDismiss}>\n     <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm5} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('HVI-BNB (PANCAKESWAP)')} </Text>\n      </Flex>\n  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm1} prefix=\"~$\" decimals={0}  />\n  <Text  fontSize=\"15px\" ml={10}>  {t('VIZSLASWAP-BNB (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance  fontSize=\"15px\" color=\"primary\" value={farm2} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('VIZSLASWAP-BNB (APESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance  fontSize=\"15px\" color=\"primary\" value={farm3} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('VIZSLASWAP-BUSD (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\" color=\"primary\" value={farm6} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('HVI-BUSD (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm18} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('BVC-BNB (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm17} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('LAMEA-BNB (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm7} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('HVI-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm8} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('LAMEA-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm9} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('BVC-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n     <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm4} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('VIZSLASWAP-BUSD (RADIOSHACK)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm19} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('BABYVIZSLA-BNB (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm10} prefix=\"~$\" decimals={0}  />\n  <Text ml={20} fontSize=\"15px\" >  {t('BABYVIZSLA-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm14} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('ETH-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm20} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('TRIP-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm16} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('EXZO-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm11} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('FPS-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm22} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('LIRA-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm13} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('BUILD-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm12} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('SKELETON-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm15} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('ATALIRA-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm23} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('LGC-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm24} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('LGC-BNB (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm25} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('BABY-VIZSLASWAP (PANCAKESWAP)')} </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance fontSize=\"15px\"  color=\"primary\" value={farm26} prefix=\"~$\" decimals={0}  />\n  <Text fontSize=\"15px\" >  {t('BABY-BNB (PANCAKESWAP)')} </Text>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ModalInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport ModalInfo from './ModalInfo'\n\nconst StyledCard = styled.div`\n margin-left: 6px ;\n margin-top: 4px ;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<ModalInfo TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      <StyledCard >\n          <Flex flexDirection=\"column\">\n            \n            <Button\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              variant='primary'\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('?')}\n            </Button>\n          </Flex>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePriceFpsBusd, usePollFarmsData,useFarms, usePriceLGCBusd, usePriceBnbBusd,usePriceliraBusd, usePriceLameaBusd, usePriceBVCBusd, usePriceBABYVIZSLABusd, usePriceETCBusd, usePriceATALIRABusd, usePriceEXZOBusd, usePriceskeletonBusd, usePricetripBusd, usePricebuildBusd, usePricebabyBusd } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress ,getFarm24Address, getFarm1Address, getlgcAddress,getFarm23Address, getFarm22Address, geLiraAddress, getFarm2Address, gettripAddress,getFarm4Address,getFarm5Address, getBusdAddress, getFarm3Address, getFarm6Address , getFarm7Address, getLAMEAAddress, getFarm8Address, getbvcAddress, getFarm9Address, getbabyvizslaAddress, getFarm10Address, getfpsAddress, getFarm11Address, getskeletonAddress, getFarm12Address, getFarm13Address, getFarm14Address , getFarm15Address, getFarm16Address , getFarm17Address, getFarm18Address, getFarm19Address, getFarm20Address, getFarm21Address, getbuildAddress, getethAddress, getataliraAddress, getexzoAddress, getbabyAddress, getFarm26Address, getFarm27Address} from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI, useFarm1,useFarm23, useFarm24, useTotalSupplyFarm24, useFarm22,useTotalSupplyFarm1 ,useTotalSupplyFarm23,useTotalSupplyFarm22, useMaster1 , useFarm2 ,useFarm3,useFarm4, useTotalSupplyFarm2, useTotalSupplyFarm3, useTotalSupplyFarm4, useFarm5, useTotalSupplyFarm5, useFarm6 , useTotalSupplyFarm6 , useFarm7 , useTotalSupplyFarm7 , useFarm8, useTotalSupplyFarm8, useFarm9, useTotalSupplyFarm9 , useFarm10, useTotalSupplyFarm10 , useFarm11, useTotalSupplyFarm11, useFarm12, useFarm13, useFarm14, useFarm15, useFarm16, useFarm17, useFarm18, useFarm19, useFarm20, useFarm21, useTotalSupplyFarm12, useTotalSupplyFarm13, useTotalSupplyFarm14,useTotalSupplyFarm15, useTotalSupplyFarm16, useTotalSupplyFarm17, useTotalSupplyFarm18, useTotalSupplyFarm19, useTotalSupplyFarm20,useTotalSupplyFarm21, useFarm27, useFarm26, useTotalSupplyFarm26, useTotalSupplyFarm27 } from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly } from 'state/user/hooks'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Loading from 'components/Loading'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport InfoCard from './components/InfoCard'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\n\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n \n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 50px;\n  background-color: rgb(19,47,46) ;\n  border-radius: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenFarmsLength = useRef(0)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n// price\nconst bnbprice0 = usePriceBnbBusd()\nconst bnbprice = bnbprice0.toNumber()\nconst cakePriceBusd = usePriceCakeBusd()\nconst vizslaprice = cakePriceBusd.toNumber()\nconst hviprice0 = usePriceHVIBusd()\nconst hviprice = hviprice0.toNumber()\nconst lgcprice0 = usePriceLGCBusd()\nconst lgcprice = lgcprice0.toNumber()\nconst lameaprice0 = usePriceLameaBusd()\nconst lameaprice = lameaprice0.toNumber()\nconst bvcprice0 = usePriceBVCBusd()\nconst bvcprice = bvcprice0.toNumber()\nconst babyvizslaprice0 = usePriceBABYVIZSLABusd()\nconst babyvizslaprice = babyvizslaprice0.toNumber()\nconst fpsprice0 = usePriceFpsBusd()\nconst fpsprice = fpsprice0.toNumber()\nconst skeletonprice0 = usePriceskeletonBusd()\nconst skeletonprice = skeletonprice0.toNumber()\nconst ethprice0 = usePriceETCBusd()\nconst ehtprice = ethprice0.toNumber()\nconst buildprice0 = usePricebuildBusd()\nconst buildprice = buildprice0.toNumber()\nconst ataliraprice0 = usePriceATALIRABusd()\nconst ataliraprice = ataliraprice0.toNumber()\nconst exzoprice0 = usePriceEXZOBusd()\nconst exzoprice = exzoprice0.toNumber()\nconst tripprice0 = usePricetripBusd()\nconst tripprice = tripprice0.toNumber()\nconst liraprice0 = usePriceliraBusd()\nconst liraprice = liraprice0.toNumber()\nconst babyprice0 = usePricebabyBusd()\nconst babyprice = babyprice0.toNumber()\n\n// farm 1\n  \n  const vizslalpbalance = getBalanceNumber(useFarm1(getCakeAddress()))\n  const bnblpbalance = getBalanceNumber(useFarm1(getWbnbAddress()))\n\n  const kombo1 = useTotalSupplyFarm1()\n  const kombo2 = kombo1 ? getBalanceNumber(kombo1) : 0\n\n  const teljes = vizslaprice * vizslalpbalance \n  const teljes2 = bnbprice * bnblpbalance\n  const teljes3 = teljes + teljes2\n  const minden = teljes3 / kombo2  \n  \n  const masterfarm1 = getBalanceNumber(useMaster1(getFarm1Address()))\n\n  const farm1 = minden * masterfarm1\n\n  // farm 2 \n  const vizslalpbalance2 = getBalanceNumber(useFarm2(getCakeAddress()))\n  const bnblpbalance2 = getBalanceNumber(useFarm2(getWbnbAddress()))\n\n  const kombo3 = useTotalSupplyFarm2()\n  const kombo4 = kombo3 ? getBalanceNumber(kombo3) : 0\n\n  const teljes4 = vizslaprice * vizslalpbalance2 \n  const teljes5 = bnbprice * bnblpbalance2\n  const teljes6 = teljes4 + teljes5\n  const minden1 = teljes6 / kombo4\n\n  const masterfarm2 = getBalanceNumber(useMaster1(getFarm2Address()))\n\n  const farm2 = minden1 * masterfarm2\n// farm 3\n  const vizslalpbalance3 = getBalanceNumber(useFarm3(getCakeAddress()))\n  const busdlpbalance = getBalanceNumber(useFarm3(getBusdAddress()))\n\n  const kombo5 = useTotalSupplyFarm3()\n  const kombo6 = kombo5 ? getBalanceNumber(kombo5) : 0\n \n  const teljes7 = vizslaprice * vizslalpbalance3 \n  const teljes8 = 1 * busdlpbalance\n  const teljes9 = teljes7 + teljes8\n  const minden2 = teljes9 / kombo6\n\n  const masterfarm3 = getBalanceNumber(useMaster1(getFarm3Address()))\n\n  const farm3 = minden2 * masterfarm3\n  // farm 4\n  const vizslalpbalance4 = getBalanceNumber(useFarm4(getCakeAddress()))\n  const busdlpbalance2 = getBalanceNumber(useFarm4(getBusdAddress()))\n\n  const kombo7 = useTotalSupplyFarm4()\n  const kombo8 = kombo7 ? getBalanceNumber(kombo7) : 0\n\n  const teljes10 = vizslaprice * vizslalpbalance4\n  const teljes11 = 1 * busdlpbalance2\n  const teljes12 = teljes10 + teljes11\n  const minden3 = teljes12 / kombo8\n\n  const masterfarm4 = getBalanceNumber(useMaster1(getFarm4Address()))\n\n  const farm4 = minden3 * masterfarm4\n    // farm 5\n    const hvilpbalance = getBalanceNumber(useFarm5(getHVIAddress()))\n    const bnblpbalance3 = getBalanceNumber(useFarm5(getWbnbAddress()))\n\n    const kombo9 = useTotalSupplyFarm5()\n    const kombo10 = kombo9 ? getBalanceNumber(kombo9) : 0\n\n    const teljes13 = hviprice * hvilpbalance\n    const teljes14 = bnbprice * bnblpbalance3\n    const teljes15 = teljes13 + teljes14\n    const minden4 = teljes15 / kombo10\n\n    const masterfarm5 = getBalanceNumber(useMaster1(getFarm5Address()))\n\n    const farm5 = minden4 * masterfarm5 * 2\n    // farm 6\n    const hvilpbalance2 = getBalanceNumber(useFarm6(getHVIAddress()))\n    const busdlpbalance3 = getBalanceNumber(useFarm6(getBusdAddress()))\n\n    \n    const kombo11 = useTotalSupplyFarm6()\n    const kombo12 = kombo11 ? getBalanceNumber(kombo11) : 0\n\n    const teljes16 = hviprice * hvilpbalance2\n    const teljes17 = 1 * busdlpbalance3\n    const teljes18 = teljes16 + teljes17\n    const minden5 = teljes18 / kombo12\n\n    const masterfarm6 = getBalanceNumber(useMaster1(getFarm6Address()))\n\n    const farm6 = minden5 * masterfarm6 * 2\n// farm 7\n    const hvilpbalance3 = getBalanceNumber(useFarm7(getHVIAddress()))\n    const vizslalpbalance5 = getBalanceNumber(useFarm7(getCakeAddress()))\n\n    const kombo13 = useTotalSupplyFarm7()\n    const kombo14 = kombo13 ? getBalanceNumber(kombo13) : 0\n\n    const teljes19 = hviprice * hvilpbalance3\n    const teljes20 = vizslaprice * vizslalpbalance5\n    const teljes21 = teljes19 + teljes20\n    const minden6 = teljes21 / kombo14\n\n    const masterfarm7 = getBalanceNumber(useMaster1(getFarm7Address()))\n\n    const farm7 = minden6 * masterfarm7 * 2\n// farm 8\nconst lamealpbalance = getBalanceNumber(useFarm8(getLAMEAAddress()))\nconst vizslalpbalance6 = getBalanceNumber(useFarm8(getCakeAddress()))\n\nconst kombo15 = useTotalSupplyFarm8()\nconst kombo16 = kombo15 ? getBalanceNumber(kombo15) : 0\n\nconst teljes22 = lameaprice * lamealpbalance\nconst teljes23 = vizslaprice * vizslalpbalance6\nconst teljes24 = teljes22 + teljes23\nconst minden7 = teljes24 / kombo16\n\nconst masterfarm8 = getBalanceNumber(useMaster1(getFarm8Address()))\n\nconst farm8 = minden7 * masterfarm8 \n// farm 9\nconst bvclpbalance = getBalanceNumber(useFarm9(getbvcAddress()))\nconst vizslalpbalance7 = getBalanceNumber(useFarm9(getCakeAddress()))\n\nconst kombo17 = useTotalSupplyFarm9()\nconst kombo18 = kombo17 ? getBalanceNumber(kombo17) : 0\n\nconst teljes25 = bvcprice * bvclpbalance\nconst teljes26 = vizslaprice * vizslalpbalance7\nconst teljes27 = teljes25 + teljes26\nconst minden8 = teljes27 / kombo18\n\nconst masterfarm9 = getBalanceNumber(useMaster1(getFarm9Address()))\n\nconst farm9 = minden8 * masterfarm9\n// farm 10\nconst babylpbalance = getBalanceNumber(useFarm10(getbabyvizslaAddress()))\nconst vizslalpbalance8 = getBalanceNumber(useFarm10(getCakeAddress()))\n\nconst kombo19 = useTotalSupplyFarm10()\nconst kombo20 = kombo19 ? getBalanceNumber(kombo19) : 0\n\nconst teljes28 = babyvizslaprice * babylpbalance\nconst teljes29 = vizslaprice * vizslalpbalance8\nconst teljes30 = teljes28 + teljes29\nconst minden9 = teljes30 / kombo20\n\nconst masterfarm10 = getBalanceNumber(useMaster1(getFarm10Address()))\n\nconst farm10 = minden9 * masterfarm10\n// farm 11\nconst vizslalpbalance9 = getBalanceNumber(useFarm11(getCakeAddress()))\nconst fpslpbalance = getBalanceNumber(useFarm11(getfpsAddress()))\n\nconst kombo21 = useTotalSupplyFarm11()\nconst kombo22 = kombo21 ? getBalanceNumber(kombo21) : 0\n\nconst teljes31 = fpsprice * fpslpbalance\nconst teljes32 = vizslaprice * vizslalpbalance9\nconst teljes33 = teljes31 + teljes32\nconst minden10 = teljes33 / kombo22\n\nconst masterfarm11 = getBalanceNumber(useMaster1(getFarm11Address()))\n\nconst farm11 = minden10 * masterfarm11\n\n// farm 12\nconst vizslalpbalance10 = getBalanceNumber(useFarm12(getCakeAddress()))\nconst skeletonlpbalance = getBalanceNumber(useFarm12(getskeletonAddress()))\n\nconst kombo23 = useTotalSupplyFarm12()\nconst kombo24 = kombo23 ? getBalanceNumber(kombo23) : 0\n\nconst teljes34 = skeletonprice * skeletonlpbalance\nconst teljes35 = vizslaprice * vizslalpbalance10\nconst teljes36 = teljes34 + teljes35\nconst minden11 = teljes36 / kombo24\n\nconst masterfarm12 = getBalanceNumber(useMaster1(getFarm12Address()))\n\nconst farm12 = minden11 * masterfarm12\n\n// farm 13\nconst vizslalpbalance11 = getBalanceNumber(useFarm13(getCakeAddress()))\nconst buildlpbalance = getBalanceNumber(useFarm13(getbuildAddress()))\n\nconst kombo25 = useTotalSupplyFarm13()\nconst kombo26 = kombo25 ? getBalanceNumber(kombo25) : 0\n\nconst teljes37 = buildprice * buildlpbalance\nconst teljes38 = vizslaprice * vizslalpbalance11\nconst teljes39 = teljes37 + teljes38\nconst minden12 = teljes39 / kombo26\n\nconst masterfarm13 = getBalanceNumber(useMaster1(getFarm13Address()))\n\nconst farm13 = minden12 * masterfarm13\n\n// farm 14\nconst vizslalpbalance12 = getBalanceNumber(useFarm14(getCakeAddress()))\nconst ethlpbalance = getBalanceNumber(useFarm14(getethAddress()))\n\nconst kombo27 = useTotalSupplyFarm14()\nconst kombo28 = kombo27 ? getBalanceNumber(kombo27) : 0\n\nconst teljes40 = ehtprice * ethlpbalance\nconst teljes41 = vizslaprice * vizslalpbalance12\nconst teljes42 = teljes40 + teljes41\nconst minden13 = teljes42 / kombo28 * 2\n\nconst masterfarm14 = getBalanceNumber(useMaster1(getFarm14Address()))\n\nconst farm14 = minden13 * masterfarm14\n\n// farm 15\nconst vizslalpbalance13 = getBalanceNumber(useFarm15(getCakeAddress()))\nconst ataliralpbalance = getBalanceNumber(useFarm15(getataliraAddress()))\n\nconst kombo29 = useTotalSupplyFarm15()\nconst kombo30 = kombo29 ? getBalanceNumber(kombo29) : 0\n\nconst teljes43 = ataliraprice * ataliralpbalance\nconst teljes44 = vizslaprice * vizslalpbalance13\nconst teljes45 = teljes43 + teljes44\nconst minden14 = teljes45 / kombo30 * 2\n\nconst masterfarm15 = getBalanceNumber(useMaster1(getFarm15Address()))\n\nconst farm15 = minden14 * masterfarm15\n\n// farm 16\nconst vizslalpbalance16 = getBalanceNumber(useFarm16(getCakeAddress()))\nconst exzolpbalance = getBalanceNumber(useFarm16(getexzoAddress()))\n\nconst kombo31 = useTotalSupplyFarm16()\nconst kombo32 = kombo31 ? getBalanceNumber(kombo31) : 0\n\nconst teljes46 = exzoprice * exzolpbalance\nconst teljes47 = vizslaprice * vizslalpbalance16\nconst teljes48 = teljes46 + teljes47\nconst minden15 = teljes48 / kombo32 * 2\n\nconst masterfarm16 = getBalanceNumber(useMaster1(getFarm16Address()))\n\nconst farm16 = minden15 * masterfarm16\n\n// farm 17\nconst bnblpbalance4 = getBalanceNumber(useFarm17(getWbnbAddress()))\nconst lamealpbalance2 = getBalanceNumber(useFarm17(getLAMEAAddress()))\n\nconst kombo33 = useTotalSupplyFarm17()\nconst kombo34 = kombo33 ? getBalanceNumber(kombo33) : 0\n\nconst teljes49 = lameaprice * lamealpbalance2\nconst teljes50 = bnbprice * bnblpbalance4\nconst teljes51 = teljes49 + teljes50\nconst minden16 = teljes51 / kombo34\n\nconst masterfarm17 = getBalanceNumber(useMaster1(getFarm17Address()))\n\nconst farm17 = minden16 * masterfarm17\n\n// farm 18\nconst bnblpbalance5 = getBalanceNumber(useFarm18(getWbnbAddress()))\nconst bvclpbalance2 = getBalanceNumber(useFarm18(getbvcAddress()))\n\nconst kombo35 = useTotalSupplyFarm18()\nconst kombo36 = kombo35 ? getBalanceNumber(kombo35) : 0\n\nconst teljes52 = bvcprice * bvclpbalance2\nconst teljes53 = bnbprice * bnblpbalance5\nconst teljes54 = teljes52 + teljes53\nconst minden17 = teljes54 / kombo36\n\nconst masterfarm18 = getBalanceNumber(useMaster1(getFarm18Address()))\n\nconst farm18 = minden17 * masterfarm18\n\n// farm 19\nconst bnblpbalance6 = getBalanceNumber(useFarm19(getWbnbAddress()))\nconst babyvizslalpbalance = getBalanceNumber(useFarm19(getbabyvizslaAddress()))\n\nconst kombo37 = useTotalSupplyFarm19()\nconst kombo38 = kombo37 ? getBalanceNumber(kombo37) : 0\n\nconst teljes55 = babyvizslaprice * babyvizslalpbalance\nconst teljes56 = bnbprice * bnblpbalance6\nconst teljes57 = teljes55 + teljes56\nconst minden18 = teljes57 / kombo38\n\nconst masterfarm19 = getBalanceNumber(useMaster1(getFarm19Address()))\n\nconst farm19 = minden18 * masterfarm19\n\n// farm 20\nconst vizslalpbalance17 = getBalanceNumber(useFarm20(getCakeAddress()))\nconst triplpbalance = getBalanceNumber(useFarm20(gettripAddress()))\n\nconst kombo39 = useTotalSupplyFarm20()\nconst kombo40 = kombo39 ? getBalanceNumber(kombo39) : 0\n\nconst teljes58 = tripprice * triplpbalance\nconst teljes59 = vizslaprice * vizslalpbalance17\nconst teljes60 = teljes58 + teljes59\nconst minden19 = teljes60 / kombo40\n\nconst masterfarm20 = getBalanceNumber(useMaster1(getFarm20Address()))\n\nconst farm20 = minden19 * masterfarm20\n\n// farm 21\nconst vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\nconst liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n\nconst kombo43 = useTotalSupplyFarm22()\nconst kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n\nconst teljes64 = vizslaprice * vizslalpbalance18\nconst teljes65 = liraprice * liralpbalance\nconst teljes66 = teljes64 + teljes65\nconst minden21 = teljes66 / kombo44\n\nconst masterfarm22 = getBalanceNumber(useMaster1(getFarm22Address()))\n\nconst farm22 = minden21 * masterfarm22\n\n// farm 22\nconst vizslalpbalance19 = getBalanceNumber(useFarm23(getCakeAddress()))\nconst lgclpbalance = getBalanceNumber(useFarm23(getlgcAddress()))\n\nconst kombo45 = useTotalSupplyFarm23()\nconst kombo46 = kombo45 ? getBalanceNumber(kombo45) : 0\n\nconst teljes67 = vizslaprice * vizslalpbalance19\nconst teljes68 = lgcprice * lgclpbalance\nconst teljes69 = teljes67 + teljes68\nconst minden22 = teljes69 / kombo46\n\nconst masterfarm23 = getBalanceNumber(useMaster1(getFarm23Address()))\n\nconst farm23 = minden22 * masterfarm23\n\n// farm 23\nconst bnblpbalance7 = getBalanceNumber(useFarm24(getWbnbAddress()))\nconst lgclpbalance2 = getBalanceNumber(useFarm24(getlgcAddress()))\n\nconst kombo47 = useTotalSupplyFarm24()\nconst kombo48 = kombo47 ? getBalanceNumber(kombo47) : 0\n\nconst teljes70 = bnbprice * bnblpbalance7\nconst teljes71 = lgcprice * lgclpbalance2\nconst teljes72 = teljes70 + teljes71\nconst minden23 = teljes72 / kombo48\n\nconst masterfarm24 = getBalanceNumber(useMaster1(getFarm24Address()))\n\nconst farm24 = minden23 * masterfarm24\n\n// farm 24\nconst bnblpbalance8 = getBalanceNumber(useFarm26(getWbnbAddress()))\nconst babybalance = getBalanceNumber(useFarm26(getbabyAddress()))\n\nconst kombo49 = useTotalSupplyFarm26()\nconst kombo50 = kombo49 ? getBalanceNumber(kombo49) : 0\n\nconst teljes73 = bnbprice * bnblpbalance8\nconst teljes74 = babyprice * babybalance\nconst teljes75 = teljes73 + teljes74\nconst minden24 = teljes75 / kombo50\n\nconst masterfarm25 = getBalanceNumber(useMaster1(getFarm26Address()))\n\nconst farm25 = minden24 * masterfarm25\n\n// farm 25\nconst vizslalpbalance20 = getBalanceNumber(useFarm27(getCakeAddress()))\nconst babybalance2 = getBalanceNumber(useFarm27(getbabyAddress()))\n\nconst kombo51 = useTotalSupplyFarm27()\nconst kombo52 = kombo51 ? getBalanceNumber(kombo51) : 0\n\nconst teljes76 = vizslaprice * vizslalpbalance20\nconst teljes77 = babyprice * babybalance2\nconst teljes78 = teljes76 + teljes77\nconst minden25 = teljes78 / kombo52\n\nconst masterfarm26 = getBalanceNumber(useMaster1(getFarm27Address()))\n\nconst farm26 = minden25 * masterfarm26\n\n// minden farm \n\n const farmminden =  farm1 + farm2 + farm3 + farm4 + farm5 + farm6 + farm7 + farm8 + farm9 + farm10 + farm11 + farm12 + farm13 + farm14 + farm15 + farm16 + farm17 + farm18 + farm19 + farm20  + farm22 + farm23 + farm24 + farm25 + farm26\n\n  usePollFarmsData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n          if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n            return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n          }\n          return farmsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [chosenFarmsMemoized, observerIsSet])\n\n  const rowData = chosenFarmsMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n    const lpLabel2 = farm.lpSymbol2 && farm.lpSymbol2.split(' ')[0].toUpperCase().replace('', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        image: farm.lpSymbol1.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        label2: lpLabel2,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/history`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n      </FlexLayout>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {t('Liquidity Mining')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {t('Stake Liquidity Pool (LP) tokens to earn.')}\n        </Heading>\n        <Flex mt=\"5px\">\n            <Balance color=\"primary\" prefix=\"~$\" fontSize=\"27px\" bold value={farmminden} decimals={0}  />\n            <InfoCard />\n            </Flex>\n            <Text fontSize=\"20px\" bold color=\"secondary\" ml=\"6px\">\n              {t('Total staked (Mining)')}\n            </Text>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}